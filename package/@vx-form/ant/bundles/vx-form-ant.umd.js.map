{"version":3,"file":"vx-form-ant.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@vx-form/ant/lib/tools/service.ts","ng://@vx-form/ant/lib/types/text.ts","ng://@vx-form/ant/lib/types/texti18n.ts","ng://@vx-form/ant/lib/types/textarea.ts","ng://@vx-form/ant/lib/types/number.ts","ng://@vx-form/ant/lib/types/password.ts","ng://@vx-form/ant/lib/types/radio.ts","ng://@vx-form/ant/lib/types/radiogroup.ts","ng://@vx-form/ant/lib/types/checkbox.ts","ng://@vx-form/ant/lib/types/checkboxgroup.ts","ng://@vx-form/ant/lib/types/select.ts","ng://@vx-form/ant/lib/types/datetime.ts","ng://@vx-form/ant/lib/types/image.ts","ng://@vx-form/ant/lib/types/upload.ts","ng://@vx-form/ant/lib/service/dialog.service.ts","ng://@vx-form/ant/lib/net/http.client.ts","ng://@vx-form/ant/lib/service/data.service.ts","ng://@vx-form/ant/lib/components/tree/index.component.ts","ng://@vx-form/ant/lib/components/employee/index.component.ts","ng://@vx-form/ant/lib/components/org/index.component.ts","ng://@vx-form/ant/lib/components/postion/index.component.ts","ng://@vx-form/ant/lib/components/area/index.component.ts","ng://@vx-form/ant/lib/types/lookup.ts","ng://@vx-form/ant/lib/types/html.ts","ng://@vx-form/ant/lib/types/line.ts","ng://@vx-form/ant/lib/wrappers/form-field.wrapper.ts","ng://@vx-form/ant/lib/templates/group.ts","ng://@vx-form/ant/lib/templates/repeat.ts","ng://@vx-form/ant/lib/bootstrap.config.ts","ng://@vx-form/ant/lib/validation.config.ts","ng://@vx-form/ant/lib/tools/formFieldService.ts","ng://@vx-form/ant/lib/tools/commonService.ts","ng://@vx-form/ant/lib/tools/transferService.ts","ng://@vx-form/ant/lib/tools/tableFieldService.ts","ng://@vx-form/ant/lib/design/field/field.component.ts","ng://@vx-form/ant/lib/design/field-label/field.component.ts","ng://@vx-form/ant/lib/design/table/table.component.ts","ng://@vx-form/ant/lib/design/tables/table.component.ts","ng://@vx-form/ant/lib/design/detail/detail.component.ts","ng://@vx-form/ant/lib/design/drawer/index.component.ts","ng://@vx-form/ant/lib/components/private/tree/index.component.ts","ng://@vx-form/ant/lib/components/private/table/index.component.ts","ng://@vx-form/ant/lib/tools/replaceLinePipe.ts","ng://@vx-form/ant/lib/bootstrap.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXFormAntService {\r\n  btnEvent = new EventEmitter();\r\n  fieldEvent = new EventEmitter();\r\n\r\n  workList = [];\r\n\r\n  constructor() {}\r\n\r\n  fieldOperational(sign: string, field: VXFormFieldConfig) {\r\n    this.fieldEvent.emit({\r\n      sign: sign,\r\n      field: field\r\n    });\r\n  }\r\n\r\n  groupOperational(type: string, field: VXFormFieldConfig) {\r\n    this.btnEvent.emit({\r\n      type: type,\r\n      field: field\r\n    });\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-text\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <input nz-input disabled />\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <input\r\n          nz-input\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n        />\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ text }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldText extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  forwardRef,\r\n  ViewChild,\r\n  Input,\r\n  OnChanges,\r\n  DoCheck,\r\n  SimpleChanges,\r\n  ChangeDetectorRef,\r\n  HostListener\r\n} from \"@angular/core\";\r\nimport { CdkConnectedOverlay, CdkOverlayOrigin } from \"@angular/cdk/overlay\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxform-field-inputi18n\",\r\n  template: `\r\n    <ng-container *ngIf=\"editor === true\">\r\n      <div class=\"inputi18n\" cdkOverlayOrigin>\r\n        <input\r\n          nz-input\r\n          [(ngModel)]=\"language[0].resvalue\"\r\n          [vxFormAttributes]=\"field\"\r\n          (ngModelChange)=\"onChange(language[0].resvalue)\"\r\n          nz-popover\r\n          nzPopoverTrigger=\"click\"\r\n          [nzPopoverContent]=\"contentTemplate\"\r\n          nzOverlayClassName=\"inputi18n-template\"\r\n          nzPopoverPlacement=\"bottom\"\r\n          [nzOverlayStyle]=\"{ width: triggerWidth }\"\r\n          (nzVisibleChange)=\"visibleChange($event)\"\r\n        />\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </div>\r\n      <ng-template #contentTemplate>\r\n        <ul>\r\n          <ng-container *ngFor=\"let item of language; let i = index\">\r\n            <li *ngIf=\"i > 0\">\r\n              <label>{{ item.languagetype }}</label>\r\n              <input\r\n                nz-input\r\n                [(ngModel)]=\"item.resvalue\"\r\n                [vxFormAttributes]=\"field\"\r\n                (ngModelChange)=\"onChange(item.resvalue)\"\r\n              />\r\n            </li>\r\n          </ng-container>\r\n        </ul>\r\n      </ng-template>\r\n    </ng-container>\r\n    <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ langText }}</div>\r\n  `\r\n})\r\nexport class VXFormFieldTextI18n extends FieldType {\r\n  service: any;\r\n  triggerWidth = \"260px\";\r\n\r\n  @ViewChild(CdkOverlayOrigin, { static: false })\r\n  cdkOverlayOrigin: CdkOverlayOrigin | undefined;\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  resize(event: any) {\r\n    this.visibleChange(event);\r\n  }\r\n  languageList: Array<any> = [\r\n    { languagetype: \"chinese\", resvalue: \"\" },\r\n    { languagetype: \"english\", resvalue: \"\" },\r\n    { languagetype: \"english2\", resvalue: \"\" }\r\n  ];\r\n\r\n  get language() {\r\n    if (\r\n      this.model != undefined &&\r\n      this.model != null &&\r\n      this.key != undefined &&\r\n      this.key != null &&\r\n      this.model.hasOwnProperty(this.key)\r\n    ) {\r\n      if (\r\n        this.formControl.value != undefined &&\r\n        this.formControl.value != null &&\r\n        this.formControl.value != [] &&\r\n        this.formControl.value.length > 0\r\n      ) {\r\n        if (this.formControl.value != this.languageList) {\r\n          this.languageList = this.formControl.value;\r\n        }\r\n      }\r\n    }\r\n    return this.languageList;\r\n  }\r\n\r\n  onChange(value: any) {\r\n    if (this.to.required) {\r\n      let empty = this.languageList.some((item: any) => {\r\n        return (\r\n          item.resvalue === null ||\r\n          item.resvalue === \"\" ||\r\n          item.resvalue === \" \"\r\n        );\r\n      });\r\n      if (empty) {\r\n        this.formControl.setValue([]);\r\n      } else {\r\n        this.formControl.setValue(this.languageList);\r\n      }\r\n    } else {\r\n      this.formControl.setValue(this.languageList);\r\n    }\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  visibleChange(event: any) {\r\n    if (event) {\r\n      if (this.cdkOverlayOrigin !== undefined) {\r\n        this.triggerWidth =\r\n          this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect()\r\n            .width -\r\n          24 +\r\n          \"px\";\r\n      }\r\n    }\r\n  }\r\n\r\n  get langText() {\r\n    if (\r\n      this.model != undefined &&\r\n      this.model != null &&\r\n      this.key != undefined &&\r\n      this.key != null &&\r\n      this.model[this.key] != undefined\r\n    ) {\r\n      let lang = this.model[this.key];\r\n      if (\r\n        lang != undefined &&\r\n        lang != null &&\r\n        lang != \"\" &&\r\n        lang instanceof Array &&\r\n        lang.length > 0\r\n      ) {\r\n        return lang[0][\"resvalue\"];\r\n      }\r\n      return \"\";\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-textarea\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <textarea nz-input disabled rows=\"4\"> </textarea>\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <textarea\r\n          nz-input\r\n          [formControl]=\"formControl\"\r\n          class=\"form-control\"\r\n          [class.is-invalid]=\"showError\"\r\n          [vxFormAttributes]=\"field\"\r\n          rows=\"4\"\r\n        >\r\n        </textarea>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div\r\n        class=\"fieldtext\"\r\n        *ngIf=\"editor === false\"\r\n        [innerHTML]=\"text | replaceLine\"\r\n      ></div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldTextArea extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-number\",\r\n  template: `\r\n  <ng-container *ngIf=\"formStatus !== 0\">\r\n    <div class=\"fieldOperational\">\r\n      <div class=\"fieldcheckbox\">\r\n        <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n      </div>\r\n      <div class=\"fieldControl\">\r\n        <div class=\"label\">\r\n          <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n        </div>\r\n        <div class=\"control\">\r\n          <input nz-input disabled />\r\n        </div>\r\n        <div class=\"fieldButton\">\r\n          <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n            <i class=\"icon-Edit03\"></i>ç¼è¾\r\n          </button>\r\n          <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n            <i class=\"icon-KT-Close\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"formStatus === 0\">\r\n    <ng-container *ngIf=\"editor === true\">\r\n      <nz-input-number\r\n        [formControl]=\"formControl\"\r\n        class=\"form-control\"\r\n        [vxFormAttributes]=\"field\"\r\n        [class.is-invalid]=\"showError\"\r\n        [nzPlaceHolder]=\"placeHolder\"\r\n        [nzPrecision]=\"precision\"\r\n      ></nz-input-number>\r\n      <div class=\"tips\">\r\n        <i\r\n          class=\"icon-bangzhu\"\r\n          [nzTooltipTitle]=\"tips\"\r\n          nzTooltipPlacement=\"top\"\r\n          nz-tooltip\r\n          *ngIf=\"tips != ''\"\r\n        ></i>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ text }}</div>\r\n  </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldNumber extends FieldType {\r\n  service: any;\r\n  \r\n  get precision(){\r\n    let result=0;\r\n    if(this.to!=undefined && this.to!=null && this.to[\"precision\"]!=undefined && this.to[\"precision\"]!=null){\r\n      result = this.to[\"precision\"];\r\n    }\r\n    return result;\r\n  }\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-password\",\r\n  template: `\r\n  <ng-container *ngIf=\"formStatus !== 0\">\r\n  <div class=\"fieldOperational\">\r\n    <div class=\"fieldcheckbox\">\r\n      <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n    </div>\r\n    <div class=\"fieldControl\">\r\n      <div class=\"label\">\r\n        <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n      </div>\r\n      <div class=\"control\">\r\n        <input nz-input disabled />\r\n      </div>\r\n      <div class=\"fieldButton\">\r\n        <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n          <i class=\"icon-Edit03\"></i>ç¼è¾\r\n        </button>\r\n        <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n          <i class=\"icon-KT-Close\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"formStatus === 0\">\r\n  <ng-container *ngIf=\"editor === true\">\r\n    <input\r\n      nz-input\r\n      [formControl]=\"formControl\"\r\n      [vxFormAttributes]=\"field\"\r\n      [class.is-invalid]=\"showError\"\r\n      [type]=\"'password'\"\r\n    />\r\n    <div class=\"tips\">\r\n      <i\r\n        class=\"icon-bangzhu\"\r\n        [nzTooltipTitle]=\"tips\"\r\n        nzTooltipPlacement=\"top\"\r\n        nz-tooltip\r\n        *ngIf=\"tips != ''\"\r\n      ></i>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ text }}</div>\r\n</ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldPassWord extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n@Component({\r\n  selector: \"vxfield-radio\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <label nz-radio nzDisabled=\"true\"></label>\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <label\r\n          nz-radio\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n        ></label>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ text }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldRadio extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n@Component({\r\n  selector: \"vxfield-radiogroup\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <nz-radio-group\r\n              [nzName]=\"'radiogroup-' + guid\"\r\n              [formControl]=\"formControl\"\r\n              [vxFormAttributes]=\"field\"\r\n              [class.is-invalid]=\"showError\"\r\n            >\r\n              <ng-container *ngFor=\"let item of to.options\">\r\n                <label nz-radio [nzValue]=\"item.value\" nzDisabled=\"true\">{{\r\n                  item.label\r\n                }}</label>\r\n              </ng-container>\r\n            </nz-radio-group>\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <nz-radio-group\r\n          [nzName]=\"'radiogroup-' + guid\"\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n        >\r\n          <ng-container *ngFor=\"let item of to.options\">\r\n            <label nz-radio [nzValue]=\"item.value\">{{ item.label }}</label>\r\n          </ng-container>\r\n        </nz-radio-group>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ textSingle }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldRadioGroup extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-checkbox\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <label nz-checkbox nzDisabled=\"true\"></label>\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <label\r\n          nz-checkbox\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n        ></label>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ text }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldCheckbox extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-checkboxgroup\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <nz-checkbox-wrapper\r\n              style=\"width: 100%;\"\r\n              (nzOnChange)=\"onChange($event)\"\r\n              [class.is-invalid]=\"showError\"\r\n            >\r\n              <ng-container *ngFor=\"let option of to.options; let i = index\">\r\n                <label\r\n                  nz-checkbox\r\n                  [nzValue]=\"option.value\"\r\n                  [ngModel]=\"getControlChecked(formControl.value, option)\"\r\n                  [vxFormAttributes]=\"field\"\r\n                  disabled\r\n                  >{{ option.label }}</label\r\n                >\r\n              </ng-container>\r\n            </nz-checkbox-wrapper>\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <nz-checkbox-wrapper\r\n          style=\"width: 100%;\"\r\n          (nzOnChange)=\"onChange($event)\"\r\n          [class.is-invalid]=\"showError\"\r\n        >\r\n          <ng-container *ngFor=\"let option of to.options; let i = index\">\r\n            <label\r\n              nz-checkbox\r\n              [nzValue]=\"option.value\"\r\n              [ngModel]=\"getControlChecked(formControl.value, option)\"\r\n              [vxFormAttributes]=\"field\"\r\n              >{{ option.label }}</label\r\n            >\r\n          </ng-container>\r\n        </nz-checkbox-wrapper>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ textMultiple }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldCheckboxGroup extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  onChange(values: string[]) {\r\n    let res: any = [];\r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach(value => {\r\n        if (this.to.options !== undefined && this.to.options !== null) {\r\n          this.to.options.forEach((option: any) => {\r\n            if (option[\"value\"] === value) {\r\n              res.push(value);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this.formControl.patchValue(values);\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  getCheckStatus(option: any) {\r\n    this.formControl.value;\r\n  }\r\n\r\n  public getControlChecked(values: any, option: any) {\r\n    let result = false;\r\n    if (option && values) {\r\n      result = values.some((value: any) => {\r\n        return value == option.value;\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport interface ICheckValues {\r\n  value: any;\r\n}\r\n","import { Component, AfterViewChecked, AfterViewInit } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\nimport { CodeSandboxOutline } from \"@ant-design/icons-angular/icons/public_api\";\r\nimport { elementAt } from \"rxjs/operators\";\r\n@Component({\r\n  selector: \"vxfield-select\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <input nz-input disabled />\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <nz-select\r\n          nzShowSearch\r\n          nzAllowClear\r\n          [nzMode]=\"to.selecttype === 'multiple' ? 'multiple' : 'default'\"\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n          [nzPlaceHolder]=\"placeHolder\"\r\n        >\r\n          <ng-container *ngFor=\"let item of to.options\">\r\n            <nz-option\r\n              [nzLabel]=\"item.label\"\r\n              [nzValue]=\"item.value\"\r\n            ></nz-option>\r\n          </ng-container>\r\n        </nz-select>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">\r\n        {{ getSelectText() }}\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldSelect extends FieldType implements AfterViewChecked {\r\n  service: any;\r\n  defaultValue: string = \"\";\r\n  defaultValues: string[] = [];\r\n  selecttype = \"default\";\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n  ngAfterViewChecked() {\r\n    if (this.to.selecttype === \"multiple\") {\r\n      this.selecttype = \"multiple\";\r\n      if (this.field.defaultValue && this.field.defaultValue != null) {\r\n        this.defaultValues = this.field.defaultValue.split(\",\");\r\n      }\r\n    } else {\r\n      this.defaultValue = this.field.defaultValue;\r\n    }\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  getSelectText() {\r\n    let result: string = \"\";\r\n    if (this.to && this.to.selecttype) {\r\n      if (this.to.selecttype === \"single\") {\r\n        result = this.textSingle;\r\n      } else if (this.to.selecttype === \"multiple\") {\r\n        result = this.textMultiple;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\nimport * as moment_ from \"moment\";\r\nconst moment = moment_;\r\n\r\n@Component({\r\n  selector: \"vxfield-datetime\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <input nz-input disabled />\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\"\r\n      ><ng-container *ngIf=\"editor === true\"> \r\n          <nz-date-picker \r\n            nzShowTime\r\n            [nzFormat]=\"format\"\r\n            [formControl]=\"formControl\"\r\n            [vxFormAttributes]=\"field\"\r\n            [class.is-invalid]=\"showError\"\r\n          ></nz-date-picker>\r\n \r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ getText() }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldDateTime extends FieldType {\r\n  service: any;\r\n  get format(){\r\n    let result=\"yyyy-MM-dd HH:mm:ss\"; \r\n    if(this.to[\"format\"]!=undefined && this.to[\"format\"]!=null && this.to[\"format\"]!=\"\"){\r\n      result = this.to[\"format\"];\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  getText() {\r\n    let result = \"\";\r\n    if (this.to.type != undefined && this.to.type != null) {\r\n      if (\r\n        this.model != undefined &&\r\n        this.model != null &&\r\n        this.field != undefined &&\r\n        this.field != null &&\r\n        this.field.key != undefined &&\r\n        this.field.key != null &&\r\n        this.model[this.field.key] != undefined &&\r\n        this.model[this.field.key] != null &&\r\n        this.model[this.field.key] != \"\"\r\n      ) {\r\n        switch (this.to.type) {\r\n          case \"datetime\":\r\n            result = moment(this.model[this.field.key]).format(\r\n              \"yyyy-MM-DD HH:mm:ss\"\r\n            );\r\n            break;\r\n          case \"date\":\r\n            result = moment(this.model[this.field.key]).format(\"YYYY-MM-DD\");\r\n            break;\r\n          case \"year\":\r\n            result = moment(this.model[this.field.key]).format(\"YYYY\");\r\n            break;\r\n          case \"month\":\r\n            result = moment(this.model[this.field.key]).format(\"YYYY-MM\");\r\n            break;\r\n          case \"time\":\r\n            result = moment(this.model[this.field.key]).format(\"HH:mm\");\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-image\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <input nz-input disabled />\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-avatar\r\n        nzIcon=\"user\"\r\n        nzSrc=\"//zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n      ></nz-avatar>\r\n      <div class=\"tips\">\r\n        <i\r\n          class=\"icon-bangzhu\"\r\n          [nzTooltipTitle]=\"tips\"\r\n          nzTooltipPlacement=\"top\"\r\n          nz-tooltip\r\n          *ngIf=\"tips != ''\"\r\n        ></i>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldImage extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { NzMessageService } from \"ng-zorro-antd/message\";\r\nimport { UploadChangeParam, UploadFile } from \"ng-zorro-antd/upload\";\r\nimport { Observable, Observer } from \"rxjs\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxfield-upload\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <nz-upload nzType=\"drag\" [nzDisabled]=\"true\">\r\n              <p class=\"ant-upload-drag-icon\"></p>\r\n              <p class=\"ant-upload-text\">åå»ææå¨æä»¶å°æ­¤åºåä¸ä¼ </p>\r\n              <p class=\"ant-upload-hint\">\r\n                æ¯æåä¸ªææ¹éä¸ä¼ ãä¸¥ç¦ä¸ä¼ ä¸æ³æä»¶ï¼è°¢è°¢!\r\n              </p>\r\n            </nz-upload>\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-upload\r\n        nzType=\"drag\"\r\n        nzAction=\"https://jsonplaceholder.typicode.com/posts/\"\r\n        [nzFileList]=\"defaultFileList\"\r\n        [nzMultiple]=\"true\"\r\n        (nzChange)=\"handleChange($event)\"\r\n        [class.is-invalid]=\"showError\"\r\n      >\r\n        <p class=\"ant-upload-drag-icon\"></p>\r\n        <p class=\"ant-upload-text\">åå»ææå¨æä»¶å°æ­¤åºåä¸ä¼ </p>\r\n        <p class=\"ant-upload-hint\">\r\n          æ¯æåä¸ªææ¹éä¸ä¼ ãä¸¥ç¦ä¸ä¼ ä¸æ³æä»¶ï¼è°¢è°¢!\r\n        </p>\r\n      </nz-upload>\r\n      <div class=\"tips\"></div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldUpload extends FieldType {\r\n  service: any;\r\n  defaultFileList = [];\r\n  constructor(dyService: VXFormAntService, public msg: NzMessageService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  handleChange({ file, fileList }: UploadChangeParam): void {\r\n    debugger;\r\n    const status = file.status;\r\n    if (status !== \"uploading\") {\r\n    }\r\n    if (status === \"done\") {\r\n      let values: any = fileList.map((item: any) => {\r\n        return {\r\n          uid: item.uid,\r\n          name: item.name,\r\n          url: item.url\r\n        };\r\n      });\r\n      /* this.model[this.field.key] = values;\r\n      this.formControl.markAsTouched(); */\r\n      this.formControl.patchValue(values);\r\n      this.formControl.markAsTouched();\r\n      this.msg.success(`æä»¶${file.name} ä¸ä¼ æåï¼`);\r\n    } else if (status === \"error\") {\r\n      this.msg.error(`æä»¶${file.name} ä¸ä¼ å¤±è´¥ï¼`);\r\n    }\r\n    if (status === \"removed\") {\r\n      let values: any = this.formControl.value;\r\n      values.forEach((item: any, index: any, object: any) => {\r\n        if (item.uid === file.uid) {\r\n          object.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      //this.formControl.patchValue(values);\r\n      //this.formControl.markAsTouched();\r\n      this.msg.success(`æä»¶${file.name} å é¤æåï¼`);\r\n    }\r\n  }\r\n\r\n  handleRemove = (file: any) =>\r\n    new Observable<boolean>(observer => {\r\n      observer.next(true);\r\n      observer.complete();\r\n    });\r\n\r\n  beforeUpload = (file: File) => {\r\n    return new Observable((observer: Observer<boolean>) => {\r\n      const isJPG = file.type === \"image/jpeg\";\r\n      console.log(file);\r\n      if (!this.checkFileType(file)) {\r\n        this.msg.error(\"æ¨ä¸ä¼ çæä»¶ç±»åä¸ç¬¦åè¦æ±ï¼\");\r\n        observer.complete();\r\n        return;\r\n      }\r\n      if (!this.checkFileSize(file)) {\r\n        this.msg.error(\"æ¨ä¸ä¼ çæä»¶å¤§å°å·²ç»è¶åºæå¤§è®¾ç½®\");\r\n        observer.complete();\r\n        return;\r\n      }\r\n      observer.next(true);\r\n      observer.complete();\r\n    });\r\n  };\r\n\r\n  checkFileType(file: File) {\r\n    let result: boolean = true;\r\n    if (\r\n      this.field &&\r\n      this.field.templateOptions &&\r\n      this.field.templateOptions.attachment &&\r\n      this.field.templateOptions.attachment.type\r\n    ) {\r\n      let types: any = this.field.templateOptions.attachment.type;\r\n      if (types != undefined && types != null && types != \"\") {\r\n        result = types.split(\",\").some((item: any) => {\r\n          return file.type === item;\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  checkFileSize(file: File) {\r\n    let result: boolean = true;\r\n    if (\r\n      this.field &&\r\n      this.field.templateOptions &&\r\n      this.field.templateOptions.attachment &&\r\n      this.field.templateOptions.attachment.size\r\n    ) {\r\n      let size: any = this.field.templateOptions.attachment.size;\r\n      if (size != undefined && size != null) {\r\n        result = file.size / 1024 / 1024 <= size;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { NzModalService, UploadFile } from \"ng-zorro-antd\";\r\n\r\ntype ModalSizeType = \"small\" | \"medium\" | \"large\";\r\nexport interface ModalOptions {\r\n  nzContent: any; //ç»ä»¶\r\n  size: ModalSizeType; //å°/ä¸­/å¤§\r\n  nzTitle?: string; //æ é¢\r\n  primaryLabel?: string; //æé®âlabelâ,ä¸ä¼ é»è®¤ä¸ºâç¡®å®â\r\n  vertical?: boolean; //å¼¹æ¡æ¯å¦ä¸ºåç´å±ä¸­ï¼é»è®¤ä¸åç´å±ä¸­\r\n  hideBtn?: boolean; //æ¯å¦éèfooteræé®\r\n  showResetBtn?: boolean; //æ¯å¦æ¾ç¤ºéç½®æé®\r\n}\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class VXDialogService {\r\n  constructor(public modalService: NzModalService) {}\r\n  switchSize(size: any) {\r\n    const obj = {\r\n      width: 700,\r\n      height: 500\r\n    };\r\n    switch (size) {\r\n      case \"small\":\r\n        obj.width = 530;\r\n        obj.height = 400;\r\n        break;\r\n      case \"medium\":\r\n        obj.width = 700;\r\n        obj.height = 500;\r\n        break;\r\n      case \"large\":\r\n        obj.width = 950;\r\n        obj.height = 600;\r\n        break;\r\n      default:\r\n        obj.width = 700;\r\n        obj.height = 500;\r\n        break;\r\n    }\r\n    return obj;\r\n  }\r\n  public CreateModelDialog(\r\n    modalOptions: ModalOptions,\r\n    params: any,\r\n    callback: any\r\n  ) {\r\n    const width = this.switchSize(modalOptions.size).width;\r\n    const height = this.switchSize(modalOptions.size).height;\r\n    const modal: any = this.modalService.create({\r\n      nzTitle: modalOptions.nzTitle ? modalOptions.nzTitle : \"æç¤º\",\r\n      nzWidth: width + \"px\",\r\n      nzClosable: true,\r\n      nzMaskClosable: false,\r\n      nzWrapClassName: modalOptions[\"vertical\"] ? \"vertical-center-modal\" : \"\",\r\n      nzBodyStyle: {\r\n        padding: \"0\",\r\n        height: !modalOptions[\"hideBtn\"]\r\n          ? height - 107 + \"px\"\r\n          : height - 54 + \"px\"\r\n      },\r\n      nzContent: modalOptions.nzContent,\r\n      nzFooter: !modalOptions[\"hideBtn\"]\r\n        ? [\r\n            {\r\n              show: true,\r\n              label: \"åæ¶\",\r\n              type: \"default\",\r\n              onClick: componentInstance => {\r\n                modal.destroy();\r\n              }\r\n            },\r\n            {\r\n              show: modalOptions[\"showResetBtn\"],\r\n              label: \"éç½®\",\r\n              type: \"default\",\r\n              onClick: componentInstance => callback(componentInstance, modal)\r\n            },\r\n            {\r\n              show: true,\r\n              label: modalOptions[\"primaryLabel\"]\r\n                ? modalOptions[\"primaryLabel\"]\r\n                : \"ç¡®å®\",\r\n              type: \"primary\",\r\n              onClick: componentInstance => callback(componentInstance, modal)\r\n            }\r\n          ]\r\n        : null,\r\n      nzOnOk: data => {},\r\n      nzOnCancel: data => {},\r\n      nzComponentParams: params\r\n    });\r\n\r\n    modal.afterClose.subscribe((result: any) => {\r\n      if (result) {\r\n        callback(result);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { tap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class _HttpClient {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private _loading = false;\r\n\r\n  get loading(): boolean {\r\n    return this._loading;\r\n  }\r\n\r\n  parseParams(params: any): HttpParams {\r\n    /*const newParams = {};\r\n    Object.keys(params).forEach(key => {\r\n      let _data = params[key];\r\n\r\n      newParams[key] = _data;\r\n    });*/\r\n    if (params === undefined || params === null) {\r\n      params = {};\r\n    }\r\n    return new HttpParams({ fromObject: params });\r\n  }\r\n\r\n  formEncode(obj: any) {\r\n    var encodedString = \"\";\r\n    for (var key in obj) {\r\n      if (encodedString.length !== 0) {\r\n        encodedString += \"&\";\r\n      }\r\n      encodedString += key + \"=\" + encodeURIComponent(obj[key]);\r\n    }\r\n    return encodedString;\r\n  }\r\n\r\n  appliedUrl(url: string, params?: any) {\r\n    if (!params) return url;\r\n    url += ~url.indexOf(\"?\") ? \"\" : \"?\";\r\n    const arr: string[] = [];\r\n    for (const key in params) {\r\n      arr.push(`${key}=${params[key]}`);\r\n    }\r\n    return url + arr.join(\"&\");\r\n  }\r\n\r\n  begin() {\r\n    setTimeout(() => (this._loading = true));\r\n  }\r\n\r\n  end() {\r\n    setTimeout(() => (this._loading = false));\r\n  }\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `T` ç±»å\r\n   */\r\n  /*   get<T>(\r\n    url: string,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>; */\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  get(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  get(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /*   get<T>(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<T>>;\r\n */\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  get(\r\n    url: string,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * GET è¯·æ±\r\n   */\r\n  get(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"GET\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  // #region post\r\n\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  post(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `HttpResponse<JSON>` ç±»å\r\n   */\r\n  post(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /* post<T>(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>;\r\n */\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  post(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * POST è¯·æ±\r\n   */\r\n  post(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"POST\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          body,\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DELETEï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  delete(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * DELETEï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  delete(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * DELETEï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  delete(\r\n    url: string,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * DELETE è¯·æ±\r\n   */\r\n  delete(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"DELETE\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * `jsonp` è¯·æ±\r\n   *\r\n   * @param url URLå°å\r\n   * @param params è¯·æ±åæ°\r\n   * @param callbackParam CALLBACKå¼ï¼é»è®¤ï¼JSONP_CALLBACK\r\n   */\r\n  jsonp(\r\n    url: string,\r\n    params?: any,\r\n    callbackParam: string = \"JSONP_CALLBACK\"\r\n  ): Observable<any> {\r\n    return this.http.jsonp(this.appliedUrl(url, params), callbackParam).pipe(\r\n      tap(() => {\r\n        this.end();\r\n      }),\r\n      catchError(res => {\r\n        this.end();\r\n        return throwError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  // #region patch\r\n\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  patch(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `HttpResponse<JSON>` ç±»å\r\n   */\r\n  patch(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /*   patch<T>(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>;\r\n */\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  patch(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * PATCH è¯·æ±\r\n   */\r\n  patch(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"PATCH\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          body,\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region put\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  put(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `HttpResponse<JSON>` ç±»å\r\n   */\r\n  put(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /*   put<T>(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>; */\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  put(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * PUT è¯·æ±\r\n   */\r\n  put(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"PUT\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          body,\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   * `request` è¯·æ±\r\n   *\r\n   * @param method è¯·æ±æ¹æ³ç±»å\r\n   * @param url URLå°å\r\n   * @param options åæ°\r\n   */\r\n  request<R>(\r\n    method: string,\r\n    url: string,\r\n    options?: {\r\n      body?: any;\r\n      headers?:\r\n        | HttpHeaders\r\n        | {\r\n            [header: string]: string | string[];\r\n          };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      params?:\r\n        | HttpParams\r\n        | {\r\n            [param: string]: string | string[];\r\n          };\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      reportProgress?: boolean;\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<R>;\r\n  /**\r\n   * `request` è¯·æ±\r\n   *\r\n   * @param method è¯·æ±æ¹æ³ç±»å\r\n   * @param url URLå°å\r\n   * @param options åæ°\r\n   */\r\n  request(\r\n    method: string,\r\n    url: string,\r\n    options?: {\r\n      body?: any;\r\n      headers?:\r\n        | HttpHeaders\r\n        | {\r\n            [header: string]: string | string[];\r\n          };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      params?:\r\n        | HttpParams\r\n        | {\r\n            [param: string]: string | string[];\r\n          };\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      reportProgress?: boolean;\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    this.begin();\r\n    if (options) {\r\n      if (options.params) options.params = this.parseParams(options.params);\r\n      if (options.body) {\r\n        // options.body = this.formEncode(options.body)\r\n      }\r\n    }\r\n    return this.http.request(method, url, options).pipe(\r\n      tap(() => {\r\n        this.end();\r\n      }),\r\n      catchError(res => {\r\n        this.end();\r\n        return throwError(res);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Observable, of } from \"rxjs\";\r\nimport { _HttpClient } from \"../net/http.client\"\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class DataService {\r\n  constructor(private _http: _HttpClient) { }\r\n\r\n  //æ ¹æ®Id|å¶ä» è·åç¸å³è¡¨ä¿¡æ¯\r\n  getBusinessTables(url: string, params = {}): Observable<any> {\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  getFormInfo(url: string, params = {}): Observable<any> {\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  //ç³»ç»æ§ä»¶-äººå\r\n  getSysCtrEmployee(params = {}): Observable<any> {\r\n    //let url = \"emptable.json\";\r\n    let url = this.getWebAPIName(\"employee\");\r\n    let result = this._http.get(url, params);\r\n    return result;\r\n  }\r\n\r\n  //ç³»ç»æ§ä»¶-ç»ç»\r\n  getSysCtrOrgTree(params = {}): Observable<any> {\r\n    //let url = \"org-tree.json\";\r\n    let url = this.getWebAPIName(\"organization\");\r\n    return this._http.get(url, params);\r\n  } \r\n\r\n  //ç³»ç»æ§ä»¶-èä½\r\n  getSysCtrPostionTable(params = {}): Observable<any> {\r\n    //let url = \"postiontable.json\";\r\n    let url = this.getWebAPIName(\"postion\");\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  //ç³»ç»æ§ä»¶-å°åº\r\n  getSysCtrArea(params = {}): Observable<any> {\r\n    let url = \"tables.json\";\r\n\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  //æ å½¢æ°æ®\r\n  getTreeData(params = {}): Observable<any> {\r\n    //let url = \"tree.json\";\r\n    let url = this.getWebAPIName(\"tree\");\r\n    return this._http.get(url, params);\r\n  } \r\n\r\n  getWebAPIName(type: string) {\r\n    let result = \"\";\r\n    let res = localStorage.getItem(\"VXFORM:WEBAPI\");\r\n    if (res != undefined && res != null && res != \"\") {\r\n      let webapi = JSON.parse(res);\r\n      result = webapi[type];\r\n    }\r\n    if (result == undefined || result == null) {\r\n      result = \"\";\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\nimport { ITreeData, ICheckedTree } from \"../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vxform-tree\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormTree implements OnInit, OnChanges {\r\n  @Input() fieldConfig: VXFormFieldConfig = {};\r\n  @Input() tag: boolean = false;\r\n  @Output() treeChangeEvent = new EventEmitter<any>();\r\n\r\n  treeData: ITreeData[] = [];\r\n  controlid: string = \"\";\r\n  selectData: ICheckedTree[] = [];\r\n\r\n  //éæ©èç¹\r\n  get selectedNode() {\r\n    return _.cloneDeep(this.selectData);\r\n  }\r\n\r\n  get selectType() {\r\n    let res = \"\";\r\n    if (\r\n      this.fieldConfig != undefined &&\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.templateOptions != undefined &&\r\n      this.fieldConfig.templateOptions != null &&\r\n      this.fieldConfig.templateOptions.selectType != undefined\r\n    ) {\r\n      res = this.fieldConfig.templateOptions.selectType;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  constructor(public dataService: DataService) {}\r\n\r\n  ngOnInit() {\r\n    let id = _.get(this.fieldConfig, \"templateOptions.treeid\");\r\n    if (id != undefined && id != null && id != \"\") {\r\n      this.controlid = _.get(this.fieldConfig, \"templateOptions.treeid\");\r\n    }\r\n    this.getTreeData();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.defaultNode) {\r\n    }\r\n  }\r\n\r\n  //è·åTreeæ°æ®é\r\n  getTreeData() {\r\n    this.dataService.getTreeData({ id: this.controlid }).subscribe(res => {\r\n      this.treeData = res;\r\n\r\n      this.getSelectData();\r\n    });\r\n  }\r\n\r\n  getSelectData() {\r\n    if (\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.model != undefined &&\r\n      this.fieldConfig.model != null &&\r\n      this.fieldConfig.key != undefined &&\r\n      this.fieldConfig.key != null &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != undefined &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != null\r\n    ) {\r\n      this.selectData = _.cloneDeep(\r\n        this.fieldConfig.model[this.fieldConfig.key]\r\n      );\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from \"@angular/forms\";\r\nimport { NzTreeComponent } from \"ng-zorro-antd/tree\";\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions } from \"ng-zorro-antd/core\";\r\nimport {\r\n  FieldWrapper,\r\n  VXFormFieldConfig,\r\n  VXTableFieldConfig\r\n} from \"@vx-form/core\";\r\n\r\nimport * as _ from \"lodash\";\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\nimport { ISelectedNode, IOrgData, ITreeData, ICheckedTree } from \"../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vxform-employee\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormEmployee implements OnInit {\r\n  @Input() fieldConfig: VXFormFieldConfig = {};\r\n\r\n  constructor(public dataService: DataService) { }\r\n\r\n  selectData: ICheckedTree[] = [];\r\n  get selectedNode() {\r\n    return _.cloneDeep(this.selectData);\r\n  }\r\n\r\n  tag: boolean = true;\r\n\r\n  //æ¯å¦è¦å¤é\r\n  check = false;\r\n\r\n  //æ¯å¦ææä½å0 æ²¡ææä½åï¼1 å¤ä¸ªæä½æé® 2 éæ©\r\n  action = 0;\r\n\r\n  //table å¤´é¨ä¿¡æ¯\r\n  header: any[] = [\r\n    { \"key\": \"id\", \"name\": \"id\", \"hiden\": true },\r\n    { \"key\": \"code\", \"name\": \"å·¥å·\", \"width\": 150 },\r\n    { \"key\": \"name\", \"name\": \"å§å\", \"width\": 150 },\r\n    { \"key\": \"organization\", \"name\": \"é¨é¨\" }\r\n  ];\r\n\r\n  //table è¡æ°æ®\r\n  body: any[] = [];\r\n\r\n  buttonlist: any[] = [];\r\n\r\n  checkid: any[] = [];\r\n\r\n  query = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 15,\r\n    sortName: \"\",\r\n    sortValue: \"\",\r\n    keyWord: \"\"\r\n  }\r\n \r\n  get selectType() {\r\n    let res = \"\";\r\n    if (\r\n      this.fieldConfig != undefined &&\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.templateOptions != undefined &&\r\n      this.fieldConfig.templateOptions != null &&\r\n      this.fieldConfig.templateOptions.selectType != undefined\r\n    ) {\r\n      res = this.fieldConfig.templateOptions.selectType;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  getSelectData() {\r\n    if (\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.model != undefined &&\r\n      this.fieldConfig.model != null &&\r\n      this.fieldConfig.key != undefined &&\r\n      this.fieldConfig.key != null &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != undefined &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != null\r\n    ) {\r\n      this.selectData = _.cloneDeep(\r\n        this.fieldConfig.model[this.fieldConfig.key]\r\n      );\r\n    }\r\n\r\n    console.log('[]',this.selectData)\r\n    if(this.selectData!=null && this.selectData.length>0){\r\n      this.checkid =this.selectData.map(item=>{\r\n        return {\r\n          \"id\":item.value,\r\n          \"name\":item.label\r\n        }\r\n      });\r\n    }else{\r\n      this.checkid=[];\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    if (this.selectType == \"multiple\") {\r\n      this.check = true;\r\n      this.action = 0;\r\n    }\r\n    if (this.selectType == \"single\") {\r\n      this.check = false;\r\n      this.action = 2;\r\n      this.header.push(\r\n        { \"key\": \"action\", \"name\": \"æä½\", \"hiden\": true, \"action\": true }\r\n      );\r\n    }\r\n    this.getEmployeeData();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n\r\n  getEmployeeData() {\r\n    this.dataService.getSysCtrEmployee(\r\n      {\r\n        keyWord: this.query.keyWord,\r\n        pageIndex: this.query.pageIndex,\r\n        pageSize: this.query.pageSize\r\n      }\r\n    ).subscribe((res: any) => {\r\n      this.query.pageIndex = res.index;\r\n      this.query.total = res.total;\r\n      this.body = res.data;\r\n    });\r\n\r\n    this.getSelectData();\r\n  }\r\n\r\n  pageIndexChange(event: any) {\r\n    this.dataService.getSysCtrEmployee(\r\n      {\r\n        keyWord: this.query.keyWord,\r\n        pageIndex: this.query.pageIndex,\r\n        pageSize: this.query.pageSize\r\n      }).subscribe((res: any) => {\r\n        this.query.pageIndex = event.pageIndex;\r\n        this.query.total = res.total;\r\n        this.body = res.data;\r\n      });\r\n  }\r\n\r\n  checkChange(list: any[]) {\r\n    if (list != null && list.length > 0) {\r\n      this.selectData = list.map(item => {\r\n        return {\r\n          \"label\": item.name, \"value\": item.id\r\n        }\r\n      });\r\n    } else {\r\n      this.selectData = [];\r\n    } \r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  forwardRef,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\nimport { NzTreeComponent } from \"ng-zorro-antd/tree\";\r\nimport {\r\n  FieldWrapper,\r\n  VXFormFieldConfig,\r\n  VXTableFieldConfig\r\n} from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport {\r\n  ISelectedNode,\r\n  IOrgData,\r\n  ITreeData,\r\n  ICheckedTree\r\n} from \"../../tools/util\";\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\n@Component({\r\n  selector: \"vxform-org\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormOrg implements OnInit {\r\n  @Input() fieldConfig: VXFormFieldConfig = {};\r\n  @Input() tag: boolean = true;\r\n  @Output() treeChangeEvent = new EventEmitter<any>();\r\n\r\n  //ç»ç»æ°æ®\r\n  data: ITreeData[] = [];\r\n  dimension: boolean = true;\r\n  selectData: ICheckedTree[] = [];\r\n  curOrgId: string = \"\";\r\n\r\n  //éæ©èç¹\r\n  get selectedNode() {\r\n    return _.cloneDeep(this.selectData);\r\n  }\r\n\r\n  get selectType() {\r\n    let res = \"\";\r\n    if (\r\n      this.fieldConfig != undefined &&\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.templateOptions != undefined &&\r\n      this.fieldConfig.templateOptions != null &&\r\n      this.fieldConfig.templateOptions.selectType != undefined\r\n    ) {\r\n      res = this.fieldConfig.templateOptions.selectType;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  orgData: IOrgData[] = [];\r\n  treeData: ITreeData[] = [];\r\n\r\n  controlid: string = \"\";\r\n  treeid: string = \"\";\r\n\r\n\r\n  @ViewChild(\"nzTreeComponent\", { static: false })\r\n  nzTreeComponent: NzTreeComponent | undefined;\r\n\r\n  selectedKey: any[] = [];\r\n  skeletonStatus: number = 0;\r\n\r\n\r\n  constructor(public dataService: DataService, private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    let orgControl = _.get(this.fieldConfig, \"templateOptions.controlid\");\r\n    if (orgControl != undefined && orgControl != null && orgControl != \"\") {\r\n      this.controlid = _.get(this.fieldConfig, \"templateOptions.controlid\");\r\n    }\r\n    this.getOrgData();\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n\r\n  //è·åç»ç»æ°æ®é\r\n  getOrgData() {\r\n    this.dataService.getSysCtrOrgTree().subscribe((res: any) => {\r\n      this.data = res;\r\n      if (this.data != null && this.data.length > 0) {\r\n          if(this.data[0].children!=undefined){\r\n          this.curOrgId = this.data[0].key;\r\n          this.treeData = this.data[0].children;\r\n        }\r\n      }\r\n      this.getTreeSelectData();\r\n    });\r\n  }\r\n\r\n  getTreeSelectData() {\r\n    if (\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.model != undefined &&\r\n      this.fieldConfig.model != null &&\r\n      this.fieldConfig.key != undefined &&\r\n      this.fieldConfig.key != null &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != undefined &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != null\r\n    ) {\r\n      this.selectData = _.cloneDeep(\r\n        this.fieldConfig.model[this.fieldConfig.key]\r\n      );\r\n    }\r\n  }\r\n\r\n  orgChange(event: any) {\r\n    this.data.forEach((item: any) => {\r\n      if (item.key === event) {\r\n        this.treeData = item.children;\r\n      }\r\n    });\r\n    this.selectData.forEach((item: any) => {\r\n      this.setTreeChecked(this.data, item.value);\r\n    });\r\n  }\r\n\r\n  treeChange(event: any) {\r\n    if (this.dimension) {\r\n      this.data.forEach((item: any) => {\r\n        this.setTreeUnChecked(item.children, event.delete);\r\n      });\r\n    }\r\n    this.treeChangeEvent.emit(this.selectData);\r\n  }\r\n\r\n  setTreeUnChecked(tree: ITreeData[], key: string) {\r\n    if (tree && tree.length > 0) {\r\n      tree.forEach((item: any) => {\r\n        if (item.key === key) {\r\n          item.checked = false;\r\n        } else {\r\n          if (item.children && item.children.length > 0) {\r\n            this.setTreeUnChecked(item.children, key);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  setTreeChecked(tree: ITreeData[], key: string) {\r\n    if (tree && tree.length > 0) {\r\n      tree.forEach((item: any) => {\r\n        if (item.key === key) {\r\n          item.checked = true;\r\n        } else {\r\n          if (item.children && item.children.length > 0) {\r\n            this.setTreeChecked(item.children, key);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\nimport { ITreeData, ICheckedTree } from \"../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vxform-postion\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormPostion implements OnInit {\r\n  @Input() fieldConfig: VXFormFieldConfig = {};\r\n  @Input() tag: boolean = false;\r\n  @Output() treeChangeEvent = new EventEmitter<any>();\r\n\r\n  treeData: ITreeData[] = [];\r\n\r\n  controlid: string = \"\";\r\n  orgid:string =\"\";\r\n\r\n  selectData: ICheckedTree[] = [];\r\n   \r\n  //éæ©èç¹\r\n  get selectedNode() {\r\n    return _.cloneDeep(this.selectData);\r\n  }\r\n \r\n\r\n  constructor(public dataService: DataService) {}\r\n\r\n  ngOnInit() { \r\n    this.getOrgData(); \r\n    this.action = 2;\r\n    if (this.selectType == \"multiple\") {\r\n      this.check = true;\r\n      this.action = 0;\r\n    }\r\n    if (this.selectType == \"single\") {\r\n      this.check = false;\r\n      this.action = 2;\r\n      this.header.push(\r\n        { \"key\": \"action\", \"name\": \"æä½\", \"hiden\": true, \"action\": true }\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.defaultNode) {\r\n    }\r\n  }\r\n\r\n  //è·åOrgæ°æ®é\r\n  getOrgData() {\r\n    this.dataService.getTreeData({ id: this.controlid }).subscribe(res => {\r\n      this.treeData = res;  \r\n      this.getSelectData();\r\n    });\r\n  } \r\n\r\n  ////\r\n  //æ¯å¦è¦å¤é\r\n  check = false;\r\n\r\n  //æ¯å¦ææä½å0 æ²¡ææä½åï¼1 å¤ä¸ªæä½æé® 2 éæ©\r\n  action = 0;\r\n\r\n  //table å¤´é¨ä¿¡æ¯\r\n  header: any[] = [\r\n    { \"key\": \"id\", \"name\": \"id\", \"hiden\": true },\r\n    { \"key\": \"code\", \"name\": \"èä½ç¼ç \", \"width\": 100 },\r\n    { \"key\": \"name\", \"name\": \"èä½åç§°\", \"width\": 150 },\r\n    { \"key\": \"number\", \"name\": \"å¨èäººæ°\", \"width\": 80  },\r\n    { \"key\": \"parent\", \"name\": \"ä¸çº§èä½\" }\r\n  ];\r\n\r\n  //table è¡æ°æ®\r\n  body: any[] = [];\r\n\r\n  buttonlist: any[] = [];\r\n\r\n  checkid: any[] = [];\r\n\r\n  query = {\r\n    total: 0,\r\n    pageIndex: 1,\r\n    pageSize: 15,\r\n    sortName: \"\",\r\n    sortValue: \"\",\r\n    keyWord: \"\"\r\n  }\r\n \r\n  get selectType() {\r\n    let res = \"\";\r\n    if (\r\n      this.fieldConfig != undefined &&\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.templateOptions != undefined &&\r\n      this.fieldConfig.templateOptions != null &&\r\n      this.fieldConfig.templateOptions.selectType != undefined\r\n    ) {\r\n      res = this.fieldConfig.templateOptions.selectType;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  getSelectData() {\r\n    if (\r\n      this.fieldConfig != null &&\r\n      this.fieldConfig.model != undefined &&\r\n      this.fieldConfig.model != null &&\r\n      this.fieldConfig.key != undefined &&\r\n      this.fieldConfig.key != null &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != undefined &&\r\n      this.fieldConfig.model[this.fieldConfig.key] != null\r\n    ) {\r\n      this.selectData = _.cloneDeep(\r\n        this.fieldConfig.model[this.fieldConfig.key]\r\n      );\r\n    }\r\n \r\n    if(this.selectData!=null && this.selectData.length>0){\r\n      this.checkid =this.selectData.map(item=>{\r\n        return {\r\n          \"id\":item.value,\r\n          \"name\":item.label\r\n        }\r\n      });\r\n    }else{\r\n      this.checkid=[];\r\n    }\r\n  }\r\n\r\n \r\n  getPostionData() {\r\n    this.dataService.getSysCtrPostionTable(\r\n      {\r\n        keyWord: this.query.keyWord,\r\n        pageIndex: this.query.pageIndex,\r\n        pageSize: this.query.pageSize\r\n      }\r\n    ).subscribe((res: any) => {\r\n      this.query.pageIndex = res.index;\r\n      this.query.total = res.total;\r\n      this.body = res.data;\r\n    });\r\n\r\n    this.getSelectData();\r\n  }\r\n\r\n  pageIndexChange(event: any) {\r\n    this.dataService.getSysCtrPostionTable(\r\n      {\r\n        keyWord: this.query.keyWord,\r\n        pageIndex: this.query.pageIndex,\r\n        pageSize: this.query.pageSize\r\n      }).subscribe((res: any) => { \r\n        this.query.pageIndex = event.pageIndex;\r\n        this.query.total = res.total;\r\n        this.body = res.data;\r\n      });\r\n  }\r\n\r\n  checkChange(list: any[]) {\r\n    if (list != null && list.length > 0) {\r\n      this.selectData = list.map(item => {\r\n        return {\r\n          \"label\": item.name, \"value\": item.id\r\n        }\r\n      });\r\n    } else {\r\n      this.selectData = [];\r\n    }\r\n  }\r\n\r\n  orgChange(event:any){ \r\n    if(event!=null && event!=undefined && event.checkData!=undefined && event.checkData.length>0){\r\n      this.orgid = event.checkData[0].value;\r\n      this.getPostionData();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from \"@angular/forms\";\r\nimport { NzTreeComponent } from \"ng-zorro-antd/tree\";\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions } from \"ng-zorro-antd/core\";\r\nimport {\r\n  FieldWrapper,\r\n  VXFormFieldConfig,\r\n  VXTableFieldConfig\r\n} from \"@vx-form/core\";\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\n@Component({\r\n  selector: \"vxform-area\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormArea implements OnInit {\r\n  @Output() fieldConfig: VXFormFieldConfig = {};\r\n  @ViewChild(\"nzTreeComponent\", { static: false })\r\n  nzTreeComponent: NzTreeComponent | undefined;\r\n\r\n  nodes = [];\r\n  constructor(public dataService: DataService) {}\r\n\r\n  ngOnInit() {\r\n    this.dataService.getTreeData().subscribe((res: any) => {\r\n      this.nodes = res;\r\n    });\r\n  }\r\n  nzEvent(event: NzFormatEmitEvent): void {}\r\n  submitForm() {}\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\nimport { NzModalService } from \"ng-zorro-antd/modal\";\r\nimport { VXDialogService } from \"../service/dialog.service\";\r\n\r\n\r\nimport { VXFormTree } from \"../components/tree/index.component\";\r\nimport { VXFormEmployee } from \"../components/employee/index.component\";\r\nimport { VXFormOrg } from \"../components/org/index.component\";\r\nimport { VXFormPostion } from \"../components/postion/index.component\";\r\nimport { VXFormArea } from \"../components/area/index.component\";\r\n\r\n@Component({\r\n  selector: \"vxfield-lookup\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"label\">\r\n            <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n          </div>\r\n          <div class=\"control\">\r\n            <input nz-input disabled />\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n              <i class=\"icon-Edit03\"></i>ç¼è¾\r\n            </button>\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <nz-input-group [nzSuffix]=\"suffixTemplate\">\r\n          <input\r\n            nz-input\r\n            [class.is-invalid]=\"showError\"\r\n            [placeholder]=\"placeHolder\"\r\n            [value]=\"textLookUp\"\r\n            readonly=\"true\"\r\n          />\r\n        </nz-input-group>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n\r\n        <nz-input-group [nzSuffix]=\"suffixTemplate\" style=\"display:none;\">\r\n          <input\r\n            nz-input\r\n            [formControl]=\"formControl\"\r\n            [vxFormAttributes]=\"field\"\r\n            [class.is-invalid]=\"showError\"\r\n            readonly=\"true\"\r\n        /></nz-input-group>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ textLookUp }}</div>\r\n    </ng-container>\r\n    <ng-template #suffixTemplate>\r\n      <i (click)=\"lookup()\" class=\"icon-tianjin\"></i>\r\n      <!--<i\r\n        nz-icon\r\n        nzType=\"close\"\r\n        nzTheme=\"outline\"\r\n        (click)=\"removeValue()\"\r\n        *ngIf=\"textLookUp != null && textLookUp != ''\"\r\n      ></i>-->\r\n    </ng-template>\r\n  `\r\n})\r\nexport class VXFormFieldLookUp extends FieldType {\r\n  service: any;\r\n\r\n  constructor(\r\n    dyService: VXFormAntService,\r\n    private modal: NzModalService,\r\n    public vxDialogService: VXDialogService\r\n  ) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  lookup() {\r\n    let template: any;\r\n    let type = _.get(this.field, \"templateOptions.type\");\r\n    let para = {\r\n      fieldConfig: this.field,\r\n      tag: false\r\n    };\r\n    switch (type) {\r\n      case \"tree\":\r\n        template = VXFormTree;\r\n        para.tag = true;\r\n        break;\r\n        break;\r\n      case \"employee\":\r\n        template = VXFormEmployee;\r\n        break;\r\n      case \"organizational\":\r\n        template = VXFormOrg;\r\n        para.tag = true;\r\n        break;\r\n      case \"position\":\r\n        template = VXFormPostion;\r\n        break;\r\n      case \"area\": \r\n        template = VXFormArea;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (template) {\r\n      this.vxDialogService.CreateModelDialog(\r\n        {\r\n          nzTitle: \"éæ© - \"+this.to[\"label\"],\r\n          size: \"large\",\r\n          nzContent: template\r\n        },\r\n        para,\r\n        (instance: any, modal: any) => {\r\n          let res: any = instance.selectedNode;\r\n          if (\r\n            this.model != undefined &&\r\n            this.model != null &&\r\n            this.key != undefined &&\r\n            this.key != null\r\n          ) { \r\n            if (res != null && res.length>0) {\r\n              this.model[this.key] = res;\r\n\r\n              this.formControl.markAsTouched();\r\n            } else {\r\n              this.model[this.key] = [];\r\n\r\n              this.formControl.markAsTouched();\r\n            }\r\n          } else {\r\n            this.model[this.key] = res;\r\n\r\n            this.formControl.markAsTouched();\r\n          }\r\n          modal.destroy();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  removeValue() {\r\n    if (\r\n      this.model != undefined &&\r\n      this.model != null &&\r\n      this.key != undefined &&\r\n      this.key != null &&\r\n      this.model[this.key] != undefined &&\r\n      this.model[this.key] != null\r\n    ) {\r\n      this.model[this.key] = [];\r\n\r\n      this.formControl.markAsTouched();\r\n    }\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-html\",\r\n  template: `\r\n  <ng-container *ngIf=\"formStatus !== 0\">\r\n  <div class=\"fieldOperational\">\r\n    <div class=\"fieldcheckbox\">\r\n      <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n    </div>\r\n    <div class=\"fieldControl\">\r\n      <div class=\"control\">\r\n        {{ to.description }}\r\n      </div>\r\n      <div class=\"fieldButton\">\r\n        <button class=\"btnEdit\" (click)=\"fieldOperational('edit')\">\r\n          <i class=\"icon-Edit03\"></i>ç¼è¾\r\n        </button>\r\n        <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n           <i class=\"icon-KT-Close\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"formStatus === 0\">\r\n  <div class=\"fieldcontrol\">{{ to.description }}</div>\r\n</ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldHTML extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, FieldArrayType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxfield-line\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        <div class=\"fieldControl\">\r\n          <div class=\"control\">\r\n            <hr />\r\n          </div>\r\n          <div class=\"fieldButton\">\r\n            <button class=\"btnDel\" (click)=\"fieldOperational('delete')\">\r\n               <i class=\"icon-KT-Close\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <div class=\"fieldContent\">\r\n        <div class=\"fieldcontrol\">\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormFieldLine extends FieldType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldWrapper } from \"@vx-form/core\";\r\n\r\n@Component({\r\n  selector: \"vxfield-wrapper\",\r\n  template: `\r\n    <ng-container\r\n      *ngIf=\"formStatus !== 0 || field.type == 'line' || field.type == 'html'\"\r\n    >\r\n      <ng-template #fieldComponent></ng-template>\r\n    </ng-container>\r\n    <ng-container\r\n      *ngIf=\"formStatus === 0 && field.type != 'line' && field.type != 'html'\"\r\n    >\r\n      <div class=\"fieldlabel\">\r\n        <span *ngIf=\"to.required\">*</span>{{ to.label }}\r\n      </div>\r\n      <div class=\"fieldcontrol\" [class.has-error]=\"showError\">\r\n        <ng-template #fieldComponent></ng-template>\r\n        <div class=\"invalid-feedback\" [style.display]=\"'block'\">\r\n          <vxform-validation-message\r\n            *ngIf=\"showError\"\r\n            style=\"color:red\"\r\n            [field]=\"field\"\r\n          ></vxform-validation-message>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormWrapperFormField extends FieldWrapper {}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"group\",\r\n  template: `\r\n    <vxform-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></vxform-field>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    \"[class]\": 'field.className || \"\"',\r\n    cdkDrag: \"\"\r\n  }\r\n})\r\nexport class VXFormFieldGroup extends FieldType {}\r\n","import { Component, AfterViewChecked, AfterViewInit } from \"@angular/core\";\r\nimport { FieldArrayType } from \"@vx-form/core\";\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxform-repeat\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <!--\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        -->\r\n        <div class=\"reportControl\">\r\n          <div class=\"report-header\">\r\n            <div class=\"left\">\r\n              <ul>\r\n                <li><label nz-checkbox [(ngModel)]=\"field.checked\"></label></li>\r\n                <li (click)=\"groupOperational('item')\">\r\n                  <i class=\"icon-TianJiaZiDuan\"></i>æ·»å å­æ®µ\r\n                </li>\r\n                <li (click)=\"groupOperational('remark')\">\r\n                  <i class=\"icon-other-WenBen\"></i>æ·»å ææ¬\r\n                </li>\r\n                <li (click)=\"groupOperational('line')\">\r\n                  <i class=\"icon-FenGeXian\"></i>æ·»å åå²çº¿\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"right\">\r\n              <ul>\r\n                <li (click)=\"groupOperational('delete')\">\r\n                  <i class=\"icon-N_delete2\"></i>å é¤\r\n                </li>\r\n                <li (click)=\"groupOperational('up')\">\r\n                  <i class=\"icon-ShangYi\"></i>ä¸ç§»\r\n                </li>\r\n                <li (click)=\"groupOperational('down')\">\r\n                  <i class=\"icon-XiaYi\"></i>ä¸ç§»\r\n                </li>\r\n                <li (click)=\"fieldOperational('delete')\">\r\n                  <button class=\"btnDel\">\r\n                    <i class=\"icon-KT-Close\"></i>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"report-body\">\r\n            <ng-container *ngFor=\"let field of field.fieldGroup; let i = index\">\r\n              <vxform-field class=\"col\" [field]=\"field\"></vxform-field>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <div *ngFor=\"let field of field.fieldGroup; let i = index\" class=\"row\">\r\n        <vxform-field class=\"col\" [field]=\"field\"></vxform-field>\r\n\r\n        <span (click)=\"delete(i)\" class=\"del\">å é¤</span>\r\n\r\n        <div class=\"tips\"></div>\r\n      </div>\r\n      <div class=\"add\">\r\n        <span (click)=\"add()\">æ°å¢</span>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  host: {\r\n    \"[class]\": 'field.className || \"\"',\r\n    cdkDrag: \"\"\r\n  }\r\n})\r\nexport class VXFormFieldRepeat extends FieldArrayType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  groupOperational(type: string) {\r\n    this.service.groupOperational(type, this.field);\r\n  }\r\n\r\n  delete(i: any) {\r\n    if (this.field.fieldGroup && this.field.fieldGroup.length > 1) {\r\n      this.remove(i);\r\n    } else {\r\n    }\r\n  }\r\n}\r\n","import { ConfigOption } from \"@vx-form/core\";\r\nimport { \r\n  VXFormFieldText,\r\n  VXFormFieldTextI18n,\r\n  VXFormFieldTextArea,\r\n  VXFormFieldNumber,\r\n  VXFormFieldPassWord,\r\n  VXFormFieldRadio,\r\n  VXFormFieldRadioGroup,\r\n  VXFormFieldCheckbox,\r\n  VXFormFieldCheckboxGroup,\r\n  VXFormFieldSelect,\r\n  VXFormFieldDateTime,\r\n  VXFormFieldImage,\r\n  VXFormFieldUpload,\r\n  VXFormFieldLookUp,\r\n  VXFormFieldHTML,\r\n  VXFormFieldLine\r\n\r\n} from \"./types/types\";\r\nimport { VXFormWrapperFormField } from \"./wrappers/wrappers\";\r\nimport { VXFormFieldGroup } from \"./templates/group\";\r\nimport { VXFormFieldRepeat } from \"./templates/repeat\";\r\n\r\nexport const FIELD_TYPE_COMPONENTS = [\r\n  // types\r\n  VXFormFieldText,\r\n  VXFormFieldTextI18n,\r\n  VXFormFieldTextArea,\r\n  VXFormFieldNumber,\r\n  VXFormFieldPassWord,\r\n  VXFormFieldRadio,\r\n  VXFormFieldRadioGroup,\r\n  VXFormFieldCheckbox,\r\n  VXFormFieldCheckboxGroup,\r\n  VXFormFieldSelect,\r\n  VXFormFieldDateTime,\r\n  VXFormFieldImage,\r\n  VXFormFieldUpload,\r\n  VXFormFieldLookUp,\r\n  VXFormFieldHTML,\r\n  VXFormFieldLine,\r\n\r\n  //templates\r\n  VXFormFieldGroup,\r\n  VXFormFieldRepeat,\r\n\r\n  // wrappers\r\n  VXFormWrapperFormField\r\n];\r\n\r\nexport const BOOTSTRAP_VXFORM_CONFIG: ConfigOption = {\r\n  types: [\r\n    {\r\n      name: \"text\",\r\n      component: VXFormFieldText,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"texti18n\",\r\n      component: VXFormFieldTextI18n,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"textarea\",\r\n      component: VXFormFieldTextArea,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"number\",\r\n      component: VXFormFieldNumber,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"password\",\r\n      component: VXFormFieldPassWord,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"radio\",\r\n      component: VXFormFieldRadio,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"radiogroup\",\r\n      component: VXFormFieldRadioGroup,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"checkbox\",\r\n      component: VXFormFieldCheckbox,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"checkboxgroup\",\r\n      component: VXFormFieldCheckboxGroup,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"select\",\r\n      component: VXFormFieldSelect,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"datetime\",\r\n      component: VXFormFieldDateTime,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"image\",\r\n      component: VXFormFieldImage,\r\n      wrappers: [\"form-field\"]\r\n    }, \r\n    {\r\n      name: \"upload\",\r\n      component: VXFormFieldUpload,\r\n      wrappers: [\"form-field\"]\r\n    }, \r\n    {\r\n      name: \"lookup\",\r\n      component: VXFormFieldLookUp,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"html\",\r\n      component: VXFormFieldHTML,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"line\",\r\n      component: VXFormFieldLine,\r\n      wrappers: [\"form-field\"]\r\n    },\r\n    { name: \"group\", component: VXFormFieldGroup },\r\n    { name: \"repeat\", component: VXFormFieldRepeat }\r\n  ],\r\n  wrappers: [{ name: \"form-field\", component: VXFormWrapperFormField }]\r\n};\r\n","import { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nexport function getFieldPro(field: VXFormFieldConfig, key: string) {\r\n  return _.get(field, \"templateOptions.\" + key + \"\");\r\n}\r\nexport function requiredValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}ä¸è½ä¸ºç©º`;\r\n}\r\nexport function minlengthValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå°é¿åº¦ä¸º${getFieldPro(\r\n    field,\r\n    \"minLength\"\r\n  )}`;\r\n}\r\nexport function maxlengthValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå¤§é¿åº¦ä¸º${getFieldPro(\r\n    field,\r\n    \"maxLength\"\r\n  )}`;\r\n}\r\nexport function minValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå°å¼ä¸º${getFieldPro(field, \"min\")}`;\r\n}\r\nexport function maxValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå¤§å¼ä¸º${getFieldPro(field, \"max\")}`;\r\n}\r\n\r\nexport let validationConfig = {\r\n  validationMessages: [\r\n    { name: \"required\", message: requiredValidationMessage },\r\n    { name: \"null\", message: \"ä¸è½ä¸ºNULL\" },\r\n    { name: \"minlength\", message: minlengthValidationMessage },\r\n    { name: \"maxlength\", message: maxlengthValidationMessage },\r\n    { name: \"min\", message: minValidationMessage },\r\n    { name: \"max\", message: maxValidationMessage },\r\n    { name: \"multipleOf\", message: \"ssss\" },\r\n    { name: \"exclusiveMinimum\", message: \"ssss\" },\r\n    { name: \"exclusiveMaximum\", message: \"ssss\" },\r\n    { name: \"minItems\", message: \"ssss\" },\r\n    { name: \"maxItems\", message: \"ssss\" },\r\n    { name: \"uniqueItems\", message: \"should NOT have duplicate items\" },\r\n    { name: \"const\", message: \"ssss\" },\r\n    { name: \"pattern\", message: \"ä¸æ»¡è¶³è¿åè¡¨è¾¾å¼\" }\r\n  ],\r\n  types: [\r\n    // { name: \"string\", extends: \"input\" },\r\n    // {\r\n    //   name: \"number\",\r\n    //   extends: \"input\",\r\n    //   defaultOptions: {\r\n    //     templateOptions: {\r\n    //       type: \"number\"\r\n    //     }\r\n    //   }\r\n    // },\r\n    // {\r\n    //   name: \"integer\",\r\n    //   extends: \"input\",\r\n    //   defaultOptions: {\r\n    //     templateOptions: {\r\n    //       type: \"number\"\r\n    //     }\r\n    //   }\r\n    // },\r\n    // { name: \"boolean\", extends: \"checkbox\" },\r\n    // { name: \"enum\", extends: \"select\" },\r\n     { name: \"array\", extends: \"array\" },\r\n     { name: \"object\", extends: \"object\" }\r\n  ]\r\n};\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXToFormFieldService {\r\n  constructor() { }\r\n\r\n  getVXFiledFunction(tableField: VXTableFieldConfig) {\r\n    let field: VXFormFieldConfig = {};\r\n    let fun: any;\r\n    switch (tableField.datatype) {\r\n      case \"text\":\r\n        field = this.text(tableField); \r\n        break;\r\n      case \"texti18n\":\r\n        field = this.textI18N(tableField);\r\n        break;\r\n      case \"textarea\":\r\n        field = this.textArea(tableField);\r\n        break;\r\n      case \"number\":\r\n        field = this.number(tableField);\r\n        break;\r\n      case \"password\":\r\n        field = this.passWord(tableField);\r\n        break;\r\n      case \"radio\":\r\n        field = this.radio(tableField);\r\n        break;\r\n      case \"checkbox\":\r\n        field = this.checkbox(tableField);\r\n        break;\r\n      case \"select\":\r\n        field = this.select(tableField);\r\n        break;\r\n      case \"datetime\":\r\n        field = this.datetime(tableField);\r\n        break;\r\n      case \"image\":\r\n        field = this.image(tableField);\r\n        break;\r\n      case \"upload\":\r\n        field = this.upload(tableField);\r\n        break;\r\n      case \"lookup\":\r\n        field = this.lookup(tableField);\r\n        break;\r\n      case \"html\":\r\n        field = this.html(tableField);\r\n        break;\r\n\r\n    }\r\n    /*if (tableField.refdatasourcetype === \"directinput\") {\r\n      fun = tableField.refdatasourcetype + \"_\" + tableField.datatype;\r\n      switch (fun) {\r\n        case \"directinput_nvarchar\":\r\n          field = this.directinput_nvarchar(tableField);\r\n          break;\r\n        case \"directinput_multilinetext\":\r\n          field = this.directinput_multilinetext(tableField);\r\n          break;\r\n        case \"directinput_int\":\r\n          field = this.directinput_int(tableField);\r\n          break;\r\n        case \"directinput_float\":\r\n          field = this.directinput_float(tableField);\r\n          break;\r\n        case \"directinput_datetime\":\r\n          field = this.directinput_datetime(tableField);\r\n          break;\r\n        case \"directinput_date\":\r\n          field = this.directinput_date(tableField);\r\n          break;\r\n        case \"directinput_month\":\r\n          field = this.directinput_month(tableField);\r\n          break;\r\n        case \"directinput_year\":\r\n          field = this.directinput_year(tableField);\r\n          break;\r\n        case \"directinput_time\":\r\n          field = this.directinput_time(tableField);\r\n          break;\r\n        case \"directinput_attachment\":\r\n          field = this.directinput_attachment(tableField);\r\n          break;\r\n        case \"directinput_image\":\r\n          field = this.directinput_image(tableField);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      fun = tableField.refdatasourcetype;\r\n      switch (fun) {\r\n        case \"refparameters\":\r\n          field = this.refparameters(tableField);\r\n          break;\r\n        case \"treeparameters\":\r\n          field = this.treeparameters(tableField);\r\n          break;\r\n        case \"systemcontrol\":\r\n          field = this.systemcontrol(tableField);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    */\r\n    return field;\r\n  }\r\n\r\n  //1ãå­ç¬¦ä¸²\r\n  text(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"text\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n        refdatasourcetype: \"directinput\",\r\n        datatype: \"nvarchar\"\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        maxLength: field.maxlength,\r\n        minLength: field.minlength,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //2ãå¤è¯­è¨\r\n  textI18N(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"text\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        maxLength: field.maxlength,\r\n        minLength: field.minlength,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //3ãå¤è¡ææ¬\r\n  textArea(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"textarea\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        maxLength: field.maxlength,\r\n        minLength: field.minlength,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //4ãæ°å­\r\n  number(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"number\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        max: field.max,\r\n        min: field.min,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern,\r\n        precision: field.precision\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //5ãå¯ç \r\n  passWord(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"password\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        maxLength: field.maxlength,\r\n        minLength: field.minlength,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //6ãåé\r\n  radio(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"radio\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        type: field.showtype,\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        parameterid: field.parameterid,\r\n        options: field.parameterdata,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //7ãå¤é\r\n  checkbox(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"checkbox\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        type: field.showtype,\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        parameterid: field.parameterid,\r\n        options: field.parameterdata,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //8ãä¸æ\r\n  select(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"select\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        type: field.showtype,\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        selecttype: field.selecttype,\r\n        parameterid: field.parameterid,\r\n        options: field.parameterdata,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //9ãæ¥æ\r\n  datetime(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"datetime\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        type: \"datetime\",\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern,\r\n        format: field.format\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //10ãå¾ç\r\n  image(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"image\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //11ãéä»¶\r\n  upload(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"upload\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      templateOptions: {\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        attachment: {\r\n          size: field.attachmentsize,\r\n          type: field.attachmenttype,\r\n          limit: field.attachmentlimit\r\n        },\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n\r\n    return config;\r\n  }\r\n\r\n  //12ãå¼¹æ¡\r\n  lookup(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"lookup\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultValue: field.defaultvalue,\r\n      defaultText: field.defaulttext,\r\n      templateOptions: {\r\n        type: field.controlid,\r\n        label: field.fieldname,\r\n        required: field.allownull,\r\n        controlid: field.controlid,\r\n        placeholder: field.placeholder,\r\n        isbutintin: field.isbutintin,\r\n        tips: field.tips,\r\n        pattern: field.pattern\r\n      },\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  //13ãhtml\r\n  html(field: VXTableFieldConfig) {\r\n    let config: VXFormFieldConfig = {\r\n      type: \"html\",\r\n      tablecode: field.tablecode,\r\n      key: field.fieldcode,\r\n      origin: {\r\n      },\r\n      defaultText: field.defaulttext,\r\n      status: 1\r\n    };\r\n    return config;\r\n  }\r\n\r\n  // //ç´æ¥è¾å¥-1ãå­ç¬¦\r\n  // directinput_nvarchar(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"input\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"nvarchar\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       maxLength: field.maxlength,\r\n  //       minLength: field.minlength,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-2ãå¤è¡ææ¬\r\n  // directinput_multilinetext(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"textarea\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"multilinetext\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       maxLength: field.maxlength,\r\n  //       minLength: field.minlength,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-3ãæ´æ°\r\n  // directinput_int(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"inputnumber\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"int\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       max: field.max,\r\n  //       min: field.min,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-4ãæµ®ç¹\r\n  // directinput_float(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"inputnumber\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"float\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       max: field.max,\r\n  //       min: field.min,\r\n  //       precision: field.precision,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-5ãæ¥æï¼å¹´ææ¥æ¶åï¼\r\n  // directinput_datetime(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"datepicker\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"datetime\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       type: \"datetime\",\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-6ãæ¥æï¼å¹´ææ¥ï¼\r\n  // directinput_date(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"datepicker\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"date\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       type: \"date\",\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-7ãæ¥æï¼å¹´æï¼\r\n  // directinput_month(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"datepicker\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"month\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       type: \"month\",\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-8ãæ¥æï¼å¹´ï¼\r\n  // directinput_year(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"datepicker\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"year\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       type: \"year\",\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-9ãæ¥æï¼æ¶åç§ï¼\r\n  // directinput_time(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"datepicker\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"time\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       type: \"time\",\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-10ãéä»¶\r\n  // directinput_attachment(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"upload\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"attachment\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       attachment: {\r\n  //         size: field.attachmentsize,\r\n  //         type: field.attachmenttype,\r\n  //         limit: field.attachmentlimit\r\n  //       },\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç´æ¥è¾å¥-11ãå¾ç\r\n  // directinput_image(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"image\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"directinput\",\r\n  //       datatype: \"image\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //å¸¸ç¨åæ°\r\n  // refparameters(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"select\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"refparameters\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     templateOptions: {\r\n  //       type: field.showtype,\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       selecttype: field.selecttype,\r\n  //       parameterid: field.parameterid,\r\n  //       options: field.parameterdata,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //æ å½¢åæ°\r\n  // treeparameters(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"lookup\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"treeparameters\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     defaultText: field.defaulttext,\r\n  //     templateOptions: {\r\n  //       type: \"tree\",\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       selecttype: field.selecttype,\r\n  //       treeid: field.treeid,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n\r\n  // //ç³»ç»æ§ä»¶\r\n  // systemcontrol(field: VXTableFieldConfig) {\r\n  //   let config: VXFormFieldConfig = {\r\n  //     type: \"lookup\",\r\n  //     tablecode: field.tablecode,\r\n  //     key: field.fieldcode,\r\n  //     origin: {\r\n  //       refdatasourcetype: \"systemcontrol\"\r\n  //     },\r\n  //     defaultValue: field.defaultvalue,\r\n  //     defaultText: field.defaulttext,\r\n  //     templateOptions: {\r\n  //       type: field.controlid,\r\n  //       label: field.fieldname,\r\n  //       required: field.allownull,\r\n  //       controlid: field.controlid,\r\n  //       placeholder: field.placeholder,\r\n  //       isbutintin: field.isbutintin,\r\n  //       tips: field.tips,\r\n  //       pattern: field.pattern\r\n  //     },\r\n  //     status: 1\r\n  //   };\r\n  //   return config;\r\n  // }\r\n}\r\n","import { Injectable, EventEmitter, Inject, forwardRef } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, clone } from \"@vx-form/core\";\r\nimport { VXTableBusiness } from \"./util\";\r\nimport { VXToFormFieldService } from \"./formFieldService\";\r\nimport { min } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class VXAntCommonService {\r\n  constructor(\r\n    @Inject(VXToFormFieldService)\r\n    private toFormField: VXToFormFieldService\r\n  ) {}\r\n\r\n  private findFieldConfig: any = {};\r\n  //æ ¹æ®Guidè·åField\r\n  getFormFieldByGuid(formFieldConfig: VXFormFieldConfig[], guid: string) {\r\n    if (formFieldConfig.length) {\r\n      formFieldConfig.forEach((item, index, object) => {\r\n        if (item.guid === guid) {\r\n          this.findFieldConfig = item;\r\n        }\r\n        if (item.type === \"repeat\") {\r\n          if (\r\n            item.fieldArray &&\r\n            item.fieldArray &&\r\n            item.fieldArray.fieldGroup &&\r\n            item.fieldArray.fieldGroup.length > 0\r\n          ) {\r\n            this.getFormFieldByGuid(item.fieldArray.fieldGroup, guid);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return this.findFieldConfig;\r\n  }\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  VXTableFieldConfig,\r\n  VXFormFieldConfig,\r\n  Guid,\r\n  clone\r\n} from \"@vx-form/core\";\r\nimport { FormLayout, ICheckedField, IBusinessTable } from \"./util\";\r\nimport { VXToFormFieldService } from \"./formFieldService\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Injectable()\r\nexport class VXTransferService {\r\n  constructor(\r\n    @Inject(VXToFormFieldService)\r\n    private toFormField: VXToFormFieldService\r\n  ) {}\r\n\r\n  transferLineToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    checkedFields: ICheckedField[]\r\n  ) {\r\n    let obj: VXFormFieldConfig = this.getFieldLineInfo();\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      form_fields.splice(checkedField.index + 1, 0, obj);\r\n    } else {\r\n      form_fields.push(obj);\r\n    }\r\n  }\r\n\r\n  transferLabelToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    checkedFields: ICheckedField[]\r\n  ) {\r\n    let obj: VXFormFieldConfig = this.getFieldRemarkInfo();\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      form_fields.splice(checkedField.index + 1, 0, obj);\r\n    } else {\r\n      form_fields.push(obj);\r\n    }\r\n  }\r\n\r\n  transferGroupToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    checkedFields: ICheckedField[],\r\n    tableCode: string\r\n  ) {\r\n    let obj: VXFormFieldConfig = this.getFieldGroupInfo();\r\n    obj.tablecode = tableCode;\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      form_fields.splice(checkedField.index + 1, 0, obj);\r\n    } else {\r\n      form_fields.push(obj);\r\n    }\r\n  }\r\n\r\n  transferSelectFieldToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    checkedFields: ICheckedField[],\r\n    businessTable: IBusinessTable,\r\n    obj: any\r\n  ) {\r\n    let selectFields: any = [];\r\n    let tableFields: VXTableFieldConfig[] = [];\r\n    let addFields: VXFormFieldConfig[] = [];\r\n    let beginIndex: number = 0;\r\n    Object.getOwnPropertyNames(obj).forEach(item => {\r\n      if (obj[item]) {\r\n        selectFields.push(item);\r\n      }\r\n    });\r\n    if (!selectFields || selectFields.length < 1) return; \r\n    tableFields = this.getTableFiledList(businessTable);\r\n\r\n    if (!tableFields || tableFields.length < 1) return;\r\n\r\n    if (form_fields && form_fields.length > 0) {\r\n      beginIndex = form_fields.length;\r\n    }\r\n\r\n    selectFields.forEach((key: any) => {\r\n      let tableField: VXTableFieldConfig = this.getTableFiledInfo(\r\n        key,\r\n        tableFields\r\n      );\r\n      if (tableField != null) {\r\n        let formField: VXFormFieldConfig = this.toFormField.getVXFiledFunction(\r\n          tableField\r\n        );\r\n        if (formField && formField != null) {\r\n          addFields.push(formField);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      beginIndex = checkedField.index + 1;\r\n    }\r\n    addFields.forEach((item: any, index: any, object: any) => {\r\n      form_fields.splice(beginIndex + index, 0, item);\r\n    });\r\n  }\r\n\r\n  groupFieldMoveUpOrDown(\r\n    form_fields: VXFormFieldConfig[],\r\n    field: VXFormFieldConfig,\r\n    type: string\r\n  ) {\r\n    this.clearGroupChecked(field);\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let cloneField: VXFormFieldConfig = clone(field);\r\n\r\n    let checkedFields: ICheckedField[] = this.getGroupCheckFields(cloneField);\r\n    if (checkedFields) {\r\n      if (type === \"up\") {\r\n        checkedFields.forEach((item: any) => {\r\n          if (item.index > 0) {\r\n            _.get(cloneField, \"fieldArray.fieldGroup\").splice(item.index, 1);\r\n            _.get(cloneField, \"fieldArray.fieldGroup\").splice(\r\n              item.index - 1,\r\n              0,\r\n              item.field\r\n            );\r\n          }\r\n        });\r\n      } else if (type === \"down\") {\r\n        checkedFields.reverse().forEach((item: any) => {\r\n          if (\r\n            item.index <\r\n            _.get(cloneField, \"fieldArray.fieldGroup\").length - 1\r\n          ) {\r\n            _.get(cloneField, \"fieldArray.fieldGroup\").splice(item.index, 1);\r\n            _.get(cloneField, \"fieldArray.fieldGroup\").splice(\r\n              item.index + 1,\r\n              0,\r\n              item.field\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    cloneFields.forEach((item: any, index: any, object: any) => {\r\n      if (item.guid === cloneField.guid) {\r\n        item.fieldArray = cloneField.fieldArray;\r\n      }\r\n      if (item.hasOwnProperty(\"fieldGroup\")) {\r\n        delete item.fieldGroup;\r\n      }\r\n    });\r\n    return cloneFields;\r\n  }\r\n\r\n  groupTransferLineToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    field: VXFormFieldConfig\r\n  ) {\r\n    this.clearGroupChecked(field);\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let cloneField: VXFormFieldConfig = clone(field);\r\n\r\n    let obj = this.getFieldLineInfo();\r\n\r\n    let checkedFields: ICheckedField[] = this.getGroupCheckFields(cloneField);\r\n    if (!cloneField) return null;\r\n    if (\r\n      !cloneField.fieldArray ||\r\n      !cloneField.fieldArray.fieldGroup ||\r\n      cloneField.fieldArray.fieldGroup.length < 1\r\n    ) {\r\n      _.get(cloneField, \"fieldArray.fieldGroup\", []);\r\n    }\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      _.get(checkedField, \"checked\", true);\r\n      _.get(cloneField, \"fieldArray.fieldGroup\").splice(\r\n        checkedField.index + 1,\r\n        0,\r\n        obj\r\n      );\r\n    } else {\r\n      _.get(cloneField, \"fieldArray.fieldGroup\").push(obj);\r\n    }\r\n    cloneFields.forEach((item: any, index: any, object: any) => {\r\n      if (item.guid === cloneField.guid) {\r\n        item.fieldArray = cloneField.fieldArray;\r\n      }\r\n      if (item.hasOwnProperty(\"fieldGroup\")) {\r\n        delete item.fieldGroup;\r\n      }\r\n    });\r\n    return cloneFields;\r\n  }\r\n\r\n  groupTransferRemarkToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    field: VXFormFieldConfig\r\n  ) {\r\n    this.clearGroupChecked(field);\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let cloneField: VXFormFieldConfig = clone(field);\r\n\r\n    let obj = this.getFieldRemarkInfo();\r\n\r\n    let checkedFields: ICheckedField[] = this.getGroupCheckFields(cloneField);\r\n    if (!cloneField) return null;\r\n    if (\r\n      !cloneField.fieldArray ||\r\n      !cloneField.fieldArray.fieldGroup ||\r\n      cloneField.fieldArray.fieldGroup.length < 1\r\n    ) {\r\n      _.get(cloneField, \"fieldArray.fieldGroup\", []);\r\n    }\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      _.get(checkedField, \"checked\", true);\r\n      _.get(cloneField, \"fieldArray.fieldGroup\").splice(\r\n        checkedField.index + 1,\r\n        0,\r\n        obj\r\n      );\r\n    } else {\r\n      _.get(cloneField, \"fieldArray.fieldGroup\").push(obj);\r\n    }\r\n    cloneFields.forEach((item: any, index: any, object: any) => {\r\n      if (item.guid === cloneField.guid) {\r\n        item.fieldArray = cloneField.fieldArray;\r\n      }\r\n      if (item.hasOwnProperty(\"fieldGroup\")) {\r\n        delete item.fieldGroup;\r\n      }\r\n    });\r\n    return cloneFields;\r\n  }\r\n\r\n  groupTransferSelectFieldToForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    groupField: VXFormFieldConfig,\r\n    checkedFields: ICheckedField[],\r\n    businessTable: IBusinessTable,\r\n    obj: any\r\n  ) {\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let cloneGroupField: VXFormFieldConfig = clone(groupField);\r\n    let selectFields: any = [];\r\n    let tableFields: VXTableFieldConfig[] = [];\r\n    let addFields: VXFormFieldConfig[] = [];\r\n    let beginIndex: number = 0;\r\n    Object.getOwnPropertyNames(obj).forEach((item: any) => {\r\n      if (obj[item]) {\r\n        selectFields.push(item);\r\n      }\r\n    });\r\n    if (!selectFields || selectFields.length < 1) return;\r\n\r\n    tableFields = this.getTableFiledList(businessTable);\r\n\r\n    if (!tableFields || tableFields.length < 1) return;\r\n\r\n    if (cloneFields && cloneFields.length > 0) {\r\n      beginIndex = cloneFields.length - 1;\r\n    }\r\n    if (\r\n      !cloneGroupField.fieldArray ||\r\n      !cloneGroupField.fieldArray.fieldGroup ||\r\n      cloneGroupField.fieldArray.fieldGroup.length < 1\r\n    ) {\r\n      _.get(cloneGroupField, \"fieldArray.fieldGroup\", []);\r\n    }\r\n\r\n    selectFields.forEach((key: any) => {\r\n      let tableField: VXTableFieldConfig = this.getTableFiledInfo(\r\n        key,\r\n        tableFields\r\n      );\r\n      if (tableField != null) {\r\n        let formField: VXFormFieldConfig = this.toFormField.getVXFiledFunction(\r\n          tableField\r\n        );\r\n        if (formField && formField != null) {\r\n          addFields.push(formField);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (checkedFields && checkedFields.length > 0) {\r\n      let checkedField = checkedFields[checkedFields.length - 1];\r\n      beginIndex = checkedField.index + 1;\r\n    }\r\n\r\n    addFields.forEach((item: any, index: any, object: any) => {\r\n      _.get(cloneGroupField, \"fieldArray.fieldGroup\").splice(\r\n        beginIndex + index,\r\n        0,\r\n        item\r\n      );\r\n    });\r\n    cloneFields.forEach((item: any, index: any, object: any) => {\r\n      if (item.guid === cloneGroupField.guid) {\r\n        item.fieldArray = cloneGroupField.fieldArray;\r\n      }\r\n      if (item.hasOwnProperty(\"fieldGroup\")) {\r\n        delete item.fieldGroup;\r\n      }\r\n    });\r\n    return cloneFields;\r\n  }\r\n\r\n  groupTransferDeleteForm(\r\n    form_fields: VXFormFieldConfig[],\r\n    groupField: VXFormFieldConfig\r\n  ) {\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let cloneGroupField: VXFormFieldConfig = clone(groupField);\r\n\r\n    let checkedFields: ICheckedField[] = this.getGroupCheckFields(\r\n      cloneGroupField\r\n    );\r\n    if (!checkedFields || checkedFields == null || checkedFields.length < 1) {\r\n      return;\r\n    }\r\n    if (\r\n      !cloneGroupField.fieldArray ||\r\n      !cloneGroupField.fieldArray.fieldGroup ||\r\n      cloneGroupField.fieldArray.fieldGroup.length < 1\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    checkedFields.forEach((item: any) => {\r\n      _.get(cloneGroupField, \"fieldArray.fieldGroup\").forEach(\r\n        (field: any, index: any, object: any) => {\r\n          if (\r\n            field.key === item.field.key &&\r\n            field.templateOptions.isbutintin != true\r\n          ) {\r\n            object.splice(index, 1);\r\n          }\r\n        }\r\n      );\r\n    });\r\n\r\n    cloneFields.forEach((item: any, index: any, object: any) => {\r\n      if (item.guid === cloneGroupField.guid) {\r\n        item.fieldArray = cloneGroupField.fieldArray;\r\n      }\r\n      if (item.hasOwnProperty(\"fieldGroup\")) {\r\n        delete item.fieldGroup;\r\n      }\r\n    });\r\n    return cloneFields;\r\n  }\r\n\r\n  editFormFieldInfo(\r\n    form_fields: VXFormFieldConfig[],\r\n    new_field: VXFormFieldConfig\r\n  ) {\r\n    if (!form_fields) return;\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let groupKey: string = \"\";\r\n    cloneFields.forEach((field: any, index: any, object: any) => {\r\n     if (field.type === \"repeat\") {\r\n        if (\r\n          field.fieldArray &&\r\n          field.fieldArray.fieldGroup &&\r\n          field.fieldArray.fieldGroup.length > 0\r\n        ) {\r\n          _.get(field, \"fieldArray.fieldGroup\").forEach(\r\n            (groupField: any, groupIndex: any, groupObject: any) => {\r\n              if (groupField.key === new_field.key) {\r\n                groupKey = field.key;\r\n                groupObject.splice(groupIndex, 1);\r\n                groupObject.splice(groupIndex, 0, new_field);\r\n              }\r\n            }\r\n          );\r\n        }\r\n      } else {\r\n        if (field.key === new_field.key) {\r\n          object.splice(index, 1);\r\n          object.splice(index, 0, new_field);\r\n        }\r\n      }\r\n    });\r\n    if (groupKey != null && groupKey != \"\") {\r\n      cloneFields.forEach((item: any, index: any, object: any) => {\r\n        if (item.hasOwnProperty(\"fieldGroup\")) {\r\n          delete item.fieldGroup;\r\n        }\r\n      });\r\n    }\r\n    return {\r\n      groupKey: groupKey,\r\n      formFileds: cloneFields\r\n    };\r\n  }\r\n\r\n  deleteFormFieldInfo(\r\n    form_fields: VXFormFieldConfig[],\r\n    field: VXFormFieldConfig\r\n  ) {\r\n    let cloneFields: VXFormFieldConfig[] = clone(form_fields);\r\n    let cloneField: VXFormFieldConfig = clone(field);\r\n    let groupKey: any;\r\n\r\n    if (\r\n      cloneFields != undefined &&\r\n      cloneFields != null &&\r\n      cloneField != undefined &&\r\n      cloneField != null &&\r\n      cloneFields.length > 0\r\n    ) {\r\n      if (cloneField.key != undefined && cloneField.key != null) {\r\n        cloneFields.forEach((item: any, index: any, object: any) => {\r\n          if (item.key === cloneField.key) {\r\n            object.splice(index, 1);\r\n          }\r\n          if (\r\n            item.fieldArray != undefined &&\r\n            item.fieldArray != null &&\r\n            item.fieldArray.fieldGroup != undefined &&\r\n            item.fieldArray.fieldGroup != null\r\n          ) {\r\n            let res = this.deleteGroupFormFieldInfo(item, field);\r\n            if (res != null && res != \"\") {\r\n              groupKey = res;\r\n              if (item.hasOwnProperty(\"fieldGroup\")) {\r\n                delete item.fieldGroup;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return {\r\n      groupKey: groupKey,\r\n      formFileds: cloneFields\r\n    };\r\n  }\r\n\r\n  private deleteGroupFormFieldInfo(\r\n    fields: VXFormFieldConfig,\r\n    field: VXFormFieldConfig\r\n  ) {\r\n    let form_fields: VXFormFieldConfig[] = [];\r\n    let groupKey: string = \"\";\r\n    if (\r\n      fields.fieldArray != undefined &&\r\n      fields.fieldArray != null &&\r\n      fields.fieldArray.fieldGroup != undefined &&\r\n      fields.fieldArray.fieldGroup != null\r\n    ) {\r\n      form_fields = fields.fieldArray.fieldGroup;\r\n\r\n      if (\r\n        form_fields != undefined &&\r\n        form_fields != null &&\r\n        field != undefined &&\r\n        field != null &&\r\n        form_fields.length > 0\r\n      ) {\r\n        if (field.key != undefined && field.key != null) {\r\n          form_fields.forEach((item: any, index: any, object: any) => {\r\n            if (item.key === field.key) {\r\n              if (fields.key != undefined && fields.key != null) {\r\n                groupKey = fields.key;\r\n                object.splice(index, 1);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return groupKey;\r\n  }\r\n\r\n  private getFieldLineInfo() {\r\n    let obj: VXFormFieldConfig = {\r\n      key: Guid.create()[\"value\"],\r\n      guid: Guid.create()[\"value\"],\r\n      type: \"line\",\r\n      status: 1\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  private getFieldRemarkInfo() {\r\n    let obj: VXFormFieldConfig = {\r\n      key: Guid.create()[\"value\"],\r\n      guid: Guid.create()[\"value\"],\r\n      type: \"html\",\r\n      templateOptions: {\r\n        description: \"çæ®µææ¬æè¿°\"\r\n      },\r\n      status: 1\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  private getFieldGroupInfo() {\r\n    let obj: VXFormFieldConfig = {\r\n      key: Guid.create()[\"value\"],\r\n      guid: Guid.create()[\"value\"],\r\n      type: \"repeat\",\r\n      fieldArray: {\r\n        fieldGroup: []\r\n      },\r\n      tablecode: \"\",\r\n      status: 1\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  //æ¸ç©ºéä¸­\r\n  private clearGroupChecked(field: VXFormFieldConfig) {\r\n    if (\r\n      !field ||\r\n      !field.fieldArray ||\r\n      !field.fieldArray.fieldGroup ||\r\n      !field.fieldGroup\r\n    )\r\n      return;\r\n    field.fieldArray.fieldGroup.forEach((item: any, index: any) => {\r\n      item.checked = false;\r\n    });\r\n  }\r\n\r\n  //è·åéä¸­\r\n  private getGroupCheckFields(field: VXFormFieldConfig) {\r\n    let checkedField: ICheckedField[] = [];\r\n    if (\r\n      !field ||\r\n      !field.fieldArray ||\r\n      !field.fieldArray.fieldGroup ||\r\n      !field.fieldGroup ||\r\n      field.fieldGroup.length < 1\r\n    ) {\r\n      return checkedField;\r\n    }\r\n    _.get(field, \"fieldGroup[0].fieldGroup\").forEach(\r\n      (item: any, index: any) => {\r\n        if (item.checked) {\r\n          checkedField.push({ index: index, field: item });\r\n          _.get(field, \"fieldArray.fieldGroup\")[index].checked = true;\r\n        }\r\n      }\r\n    );\r\n    return checkedField;\r\n  }\r\n\r\n  private getTableFiledList(businessTable: IBusinessTable) {\r\n    let tableFields: VXTableFieldConfig[] = [];\r\n    if (businessTable) {\r\n      if (\r\n        businessTable.primary &&\r\n        businessTable.primary != null &&\r\n        businessTable.primary.tablefields &&\r\n        businessTable.primary.tablefields != null &&\r\n        businessTable.primary.tablefields.length > 0\r\n      ) {\r\n        if (businessTable.primary.tablefields) {\r\n          tableFields = tableFields.concat(businessTable.primary.tablefields);\r\n        }\r\n      }\r\n      if (businessTable.child && businessTable.child != null) {\r\n        if (\r\n          businessTable.child.single &&\r\n          businessTable.child.single != null &&\r\n          businessTable.child.single.length > 0\r\n        ) {\r\n          businessTable.child.single.forEach((item: any) => {\r\n            if (item.tablefields) {\r\n              tableFields = tableFields.concat(item.tablefields);\r\n            }\r\n          });\r\n        }\r\n        if (\r\n          businessTable.child.multiple &&\r\n          businessTable.child.multiple != null &&\r\n          businessTable.child.multiple.length > 0\r\n        ) {\r\n          businessTable.child.multiple.forEach((item: any) => {\r\n            if (item.tablefields) {\r\n              tableFields = tableFields.concat(item.tablefields);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return tableFields;\r\n  }\r\n\r\n  private getTableFiledInfo(key: string, tableFields: VXTableFieldConfig[]) {\r\n    let resValue: VXTableFieldConfig = {};\r\n    if (key && tableFields && tableFields.length > 0) {\r\n      let filterFiled = tableFields.filter((item: any) => {\r\n        return item[\"fieldcode\"] === key;\r\n      });\r\n      if (filterFiled && filterFiled.length > 0) {\r\n        return filterFiled[0];\r\n      }\r\n      return resValue;\r\n    }\r\n    return resValue;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter, Inject } from \"@angular/core\";\r\nimport {\r\n  VXTableFieldConfig,\r\n  VXFormFieldConfig,\r\n  VXTableConfig,\r\n  clone\r\n} from \"@vx-form/core\";\r\nimport { IBusinessTable } from \"./util\";\r\nimport * as _ from \"lodash\";\r\nimport { VXToFormFieldService } from \"./formFieldService\";\r\n\r\n@Injectable()\r\nexport class VXDesginToFormService {\r\n  constructor(\r\n    @Inject(VXToFormFieldService)\r\n    private toFormField: VXToFormFieldService\r\n  ) {}\r\n\r\n  initTableStatus(tables: IBusinessTable, fields: VXFormFieldConfig[]) {\r\n    this.initTableFields(tables);\r\n    if (fields && fields != null && fields.length > 0) {\r\n      fields.forEach((field: any, index: any, object: any) => {\r\n        this.setTableStatus(tables, field);\r\n      });\r\n    }\r\n  }\r\n\r\n  initFormFieldByTables(tables: IBusinessTable, fields: VXFormFieldConfig[]) {\r\n    if (\r\n      tables != undefined &&\r\n      tables != null &&\r\n      tables.primary != undefined &&\r\n      tables.primary != null &&\r\n      tables.primary.tablefields != undefined &&\r\n      tables.primary.tablefields != null\r\n    ) {\r\n      let tableFileds: VXTableFieldConfig[] = tables.primary.tablefields.filter(\r\n        (item: any) => {\r\n          return item.isbutintin === true;\r\n        }\r\n      );\r\n      if (tableFileds != null) {\r\n        tableFileds.forEach((item: any) => {\r\n          if (!this.checkVXFormFieldConfig(item.fieldcode, fields)) {\r\n            this.addVXFormFieldConfig(item, fields);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private initTableFields(tables: IBusinessTable) {\r\n    if (!tables) {\r\n      return;\r\n    }\r\n\r\n    if (tables.primary) {\r\n      tables.primary.tablequote = false;\r\n      if (tables.primary.tablefields) {\r\n        tables.primary.tablefields.forEach((field: any) => {\r\n          field.fieldquote = false;\r\n        });\r\n      }\r\n    }\r\n\r\n    if (tables.child) {\r\n      if (tables.child.single) {\r\n        tables.child.single.forEach((table: any) => {\r\n          table.tablequote = false;\r\n          if (table.tablefields) {\r\n            table.tablefields.forEach((field: any) => {\r\n              field.fieldquote = false;\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (tables.child.multiple) {\r\n        tables.child.multiple.forEach((table: any) => {\r\n          table.tablequote = false;\r\n          if (table.tablefields) {\r\n            table.tablefields.forEach((field: any) => {\r\n              field.fieldquote = false;\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private setTableStatus(tables: IBusinessTable, field: VXFormFieldConfig) {\r\n    if (tables) {\r\n      if (tables.primary) {\r\n        this.setTablePrimary(tables.primary, field);\r\n      }\r\n\r\n      if (tables.child) {\r\n        if (tables.child.single) {\r\n          this.setTableSingle(tables.child.single, field);\r\n        }\r\n        if (tables.child.multiple) {\r\n          this.setTableMultiple(tables.child.multiple, field);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setTablePrimary(table: VXTableConfig, field: VXFormFieldConfig) {\r\n    if (field.tablecode === table.tablecode) {\r\n      table.tablequote = true;\r\n      if (table.tablefields) {\r\n        table.tablefields.forEach((item: any) => {\r\n          if (item.fieldcode === field.key) {\r\n            item.fieldquote = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private setTableSingle(tables: VXTableConfig[], field: VXFormFieldConfig) {\r\n    if (tables && tables != null && tables.length > 0) {\r\n      tables.forEach(table => {\r\n        if (table.tablecode === field.tablecode) {\r\n          table.tablequote = true;\r\n          if (table.tablefields) {\r\n            table.tablefields.forEach((item: any) => {\r\n              if (item.fieldcode === field.key) {\r\n                item.fieldquote = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private setTableMultiple(\r\n    tables: VXTableConfig[],\r\n    groupField: VXFormFieldConfig\r\n  ) {\r\n    if (tables && tables != null && tables.length > 0) {\r\n      tables.forEach(table => {\r\n        if (table.tablecode === groupField.tablecode) {\r\n          table.tablequote = true;\r\n          if (\r\n            groupField.fieldArray &&\r\n            groupField.fieldArray.fieldGroup &&\r\n            groupField.fieldArray.fieldGroup.length > 0\r\n          ) {\r\n            if (table.tablefields) {\r\n              table.tablefields.forEach((item: any) => {\r\n                _.get(groupField, \"fieldArray.fieldGroup\").forEach(\r\n                  (field: any) => {\r\n                    if (item.fieldcode === field.key) {\r\n                      item.fieldquote = true;\r\n                    }\r\n                  }\r\n                );\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private checkVXFormFieldConfig(code: string, fields: VXFormFieldConfig[]) {\r\n    let result = false;\r\n    if (fields != undefined && fields != null && fields != []) {\r\n      result = fields.some((item: any) => {\r\n        return item.key === code;\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  private addVXFormFieldConfig(\r\n    tableField: VXTableFieldConfig,\r\n    fields: VXFormFieldConfig[]\r\n  ) {\r\n    let field: VXFormFieldConfig = this.toFormField.getVXFiledFunction(\r\n      tableField\r\n    );\r\n    if (fields == undefined || fields == null) {\r\n      fields = [];\r\n    }\r\n    fields.push(field);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { FieldWrapper, VXFormFieldConfig, clone } from \"@vx-form/core\";\r\nimport { NzMessageService } from \"ng-zorro-antd/message\";\r\n\r\n@Component({\r\n  selector: \"vxform-design-field\",\r\n  templateUrl: \"./field.component.html\",\r\n  styleUrls: [\"./field.component.less\"]\r\n})\r\nexport class VXFormDesignField implements OnInit, OnChanges {\r\n  formField: any = {\r\n    key: \"\",\r\n    type:\"text\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      description: \"\",\r\n      parameterid: \"\",\r\n      treeid: \"\",\r\n      controlid: \"\",\r\n      maxLength: 50,\r\n      minLength: 0,\r\n      max: 0,\r\n      min: 0,\r\n      precision: 0,\r\n      placeholder: \"\",\r\n      required: false,\r\n      tips: \"\",\r\n      pattern: \"\"\r\n    },\r\n    origin: {\r\n      refdatasourcetype: \"\",\r\n      datatype: \"\"\r\n    }\r\n  };\r\n  lang: any[] = [\r\n    { languagetype: \"chinese\", resvalue: \"chinesechinese\" },\r\n    { languagetype: \"english\", resvalue: \"englishenglish\" },\r\n    { languagetype: \"english2\", resvalue: \"english2\" }\r\n  ];\r\n  @Input() set field(value: VXFormFieldConfig) { \r\n    this.formField = { ...this.formField, ...value }; \r\n  }\r\n\r\n  constructor(\r\n    public message: NzMessageService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n\r\n  checkSave(){\r\n    let type = this.formField.type;\r\n    if(type==\"text\" || type==\"textarea\"){\r\n      if(this.formField.templateOptions.minLength>=this.formField.templateOptions.maxLength){\r\n        this.message.error(\"æå¤§é¿åº¦å¿é¡»å¤§äºæå°é¿åº¦\");\r\n        return false;\r\n      }\r\n    }\r\n    if(type==\"number\"){\r\n      if(this.formField.templateOptions.min>=this.formField.templateOptions.max){\r\n        this.message.error(\"æå¤§å¼å¿é¡»å¤§äºæå°å¼\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AbstractControl\r\n} from \"@angular/forms\";\r\nimport {\r\n  FieldWrapper,\r\n  VXFormFieldConfig,\r\n  VXTableFieldConfig,\r\n  clone\r\n} from \"@vx-form/core\";\r\n\r\n@Component({\r\n  selector: \"vxform-design-fieldlabel\",\r\n  templateUrl: \"./field.component.html\",\r\n  styleUrls: [\"./field.component.less\"]\r\n})\r\nexport class VXFormDesignFieldLabel implements OnInit {\r\n  formField: any = {\r\n    key: \"\",\r\n    type:\"html\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      description: \"\",\r\n      parameterid: \"\",\r\n      treeid: \"\",\r\n      controlid: \"\",\r\n      maxLength: 50,\r\n      minLength: 0,\r\n      max: 0,\r\n      min: 0,\r\n      precision: 0,\r\n      placeholder: \"\",\r\n      required: false,\r\n      tips: \"\",\r\n      pattern: \"\"\r\n    },\r\n    origin: {\r\n      refdatasourcetype: \"\",\r\n      datatype: \"\"\r\n    }\r\n  }; \r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    this.formField = { ...this.formField, ...value }; \r\n    console.log(this.formField);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  submitForm() {}\r\n\r\n  checkSave(){\r\n    return true;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { clone, VXFormFieldConfig } from \"@vx-form/core\";\r\nimport { IBusinessTable } from \"../../tools/util\";\r\nimport { DataService } from \"../../service/data.service\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxform-design-table\",\r\n  templateUrl: \"./table.component.html\",\r\n  styleUrls: [\"./table.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormDesignTable implements OnInit, OnChanges, OnDestroy {\r\n  @Input() tableType: string = \"\";\r\n  @Input() businessTable: IBusinessTable = {\r\n    primary: {},\r\n    child: {\r\n      single: [],\r\n      multiple: []\r\n    }\r\n  };\r\n  @Input() fieldConfig: VXFormFieldConfig = {};\r\n\r\n  tableData = [];\r\n\r\n  mapOfCheckedId: { [key: string]: boolean } = {};\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.initTableData();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  initTableData() {\r\n    this.tableData = [];\r\n    this.mapOfCheckedId = {};\r\n    let business = clone(this.businessTable);\r\n    let tables: any = [];\r\n    if (!business) return;\r\n    if (this.tableType === \"single\") {\r\n      if (business.primary && business.primary != null) {\r\n        tables = [...tables, business.primary];\r\n      }\r\n      if (\r\n        business.child &&\r\n        business.child != null &&\r\n        business.child.single &&\r\n        business.child.single != null &&\r\n        business.child.single.length > 0\r\n      ) {\r\n        tables = tables.concat(business.child.single);\r\n      }\r\n    } else if (this.tableType === \"multiple\") {\r\n      if (\r\n        business.child &&\r\n        business.child != null &&\r\n        business.child.multiple &&\r\n        business.child.multiple != null &&\r\n        business.child.multiple.length > 0\r\n      ) {\r\n        business.child.multiple.forEach((table: any) => {\r\n          if (table.tablecode === this.fieldConfig.tablecode) {\r\n            tables = [table];\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.tableData = tables;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { clone, VXFormFieldConfig } from \"@vx-form/core\";\r\nimport { IBusinessTable } from \"../../tools/util\";\r\nimport { DataService } from \"../../service/data.service\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxform-design-tables\",\r\n  templateUrl: \"./table.component.html\",\r\n  styleUrls: [\"./table.component.less\"],\r\n  providers: [DataService]\r\n})\r\nexport class VXFormDesignTables implements OnInit, OnChanges, OnDestroy {\r\n  @Input() businessTable: IBusinessTable = {\r\n    primary: {},\r\n    child: {\r\n      single: [],\r\n      multiple: []\r\n    }\r\n  };\r\n  radioValue = \"\";\r\n  tableData = [];\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.initTableData();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  initTableData() {\r\n    this.tableData = [];\r\n    let business = clone(this.businessTable);\r\n    let tables: any = [];\r\n    if (!business) return;\r\n    if (\r\n      business.child &&\r\n      business.child != null &&\r\n      business.child.multiple &&\r\n      business.child.multiple != null &&\r\n      business.child.multiple.length > 0\r\n    ) {\r\n      this.tableData = business.child.multiple;\r\n    }\r\n    console.log(this.tableData);\r\n  }\r\n\r\n  selectOK(table: any) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXTableFieldConfig,\r\n  VXFormInfo,\r\n  clone,\r\n  VXTableConfig,\r\n  VXFormCommonService\r\n} from \"@vx-form/core\";\r\nimport { NzModalService } from \"ng-zorro-antd/modal\";\r\nimport { NzMessageService } from \"ng-zorro-antd/message\";\r\nimport * as _ from \"lodash\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {\r\n  FormLayout,\r\n  LayoutPanel,\r\n  LayoutColumn,\r\n  VXTableBusiness,\r\n  ICheckedField,\r\n  IBusinessTable,\r\n  Itable,\r\n  IDesignFormAPI\r\n} from \"../../tools/util\";\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { VXDialogService } from \"../../service/dialog.service\";\r\nimport { DataService } from \"../../service/data.service\";\r\nimport { VXAntCommonService } from \"../../tools/commonService\";\r\nimport { VXTransferService } from \"../../tools/transferService\";\r\nimport { VXDesginToFormService } from \"../../tools/tableFieldService\";\r\nimport { VXFormDesignField } from \"../field/field.component\";\r\nimport { VXFormDesignFieldLabel } from \"../field-label/field.component\";\r\nimport { VXFormDesignTable } from \"../table/table.component\";\r\nimport { VXFormDesignTables } from \"../tables/table.component\";\r\nimport { group } from \"@angular/animations\";\r\nimport { filter } from \"rxjs/operators\";\r\n\r\n\r\n@Component({\r\n  selector: \"vxform-design-detail\",\r\n  templateUrl: \"./detail.component.html\",\r\n  styleUrls: [\"./detail.component.less\"],\r\n  providers: [DataService, VXAntCommonService, VXTransferService]\r\n})\r\nexport class VXFormDesignDetail implements OnInit, OnChanges, OnDestroy {\r\n  @Input() formCode: string = \"\";\r\n  @Input() api: IDesignFormAPI = {\r\n    tables: { url: \"assets/mockData/business.json\" },\r\n    form: { url: \"assets/mockData/formInfo.json\" }\r\n  };\r\n  @Output() saveEvent: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() cancelEvent: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() previewEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  pageStatus: number = 1;\r\n\r\n  form_model: any = {};\r\n  form_group = new FormGroup({});\r\n  form_fields: VXFormFieldConfig[] = [];\r\n\r\n  vxFormInfo: VXFormInfo = {};\r\n\r\n  business_tables: IBusinessTable = {\r\n    primary: {},\r\n    child: { single: [], multiple: [] }\r\n  };\r\n\r\n  layout_column: string = \"layout-column-3\";\r\n  layout_row: string = \"layout-row-1\";\r\n\r\n  table_Data: Itable[] = [];\r\n\r\n  constructor(\r\n    private message: NzMessageService,\r\n    private modalService: NzModalService,\r\n    private vxFormAntService: VXFormAntService,\r\n    public vxDialogService: VXDialogService,\r\n    public dataService: DataService,\r\n    public vxAntCommonService: VXAntCommonService,\r\n    public vxTransferService: VXTransferService,\r\n    public vxDesginToFormService: VXDesginToFormService,\r\n    public vxFormCommonService: VXFormCommonService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.vxFormAntService.btnEvent.subscribe((res: any) => {\r\n      switch (res[\"type\"]) {\r\n        case \"delete\":\r\n          this.modalService.confirm({\r\n            nzTitle: \"æç¤º\",\r\n            nzContent: \"æ¨ç¡®å®è¦å é¤éä¸­çå­æ®µï¼\",\r\n            nzOnOk: () => {\r\n              this.groupBtnDeleteFields(res[\"field\"]);\r\n            }\r\n          });\r\n          break;\r\n        case \"up\":\r\n        case \"down\":\r\n          this.groupBtnMoveUpOrDown(res[\"field\"], res[\"type\"]);\r\n          break;\r\n        case \"item\":\r\n          this.groupBtnTableFields(res[\"field\"]);\r\n          break;\r\n        case \"remark\":\r\n        case \"line\":\r\n          this.groupBtnAddLineRemark(res[\"field\"], res[\"type\"]);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    this.vxFormAntService.fieldEvent.subscribe((res: any) => {\r\n      let sign = res[\"sign\"];\r\n      if (sign == \"edit\") {\r\n        this.editFormFieldConfig(res[\"field\"]);\r\n      } else if (sign == \"delete\") {\r\n        this.modalService.confirm({\r\n          nzTitle: \"æç¤º\",\r\n          nzContent: \"æ¨ç¡®å®è¦å é¤è¯¥å­æ®µï¼\",\r\n          nzOnOk: () => {\r\n            this.deleteFormFieldConfig(res[\"field\"]);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formCode) {\r\n      this.initTablesInfo();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n  /*æé®åºå---begin*/\r\n\r\n  btnSave() {\r\n    this.vxFormInfo.fields = clone(this.form_fields);\r\n    if (\r\n      this.vxFormInfo.fields !== null &&\r\n      this.vxFormInfo.fields !== undefined\r\n    ) {\r\n      this.vxFormCommonService.initFormFieldProperty(this.vxFormInfo.fields);\r\n    }\r\n    console.log(JSON.stringify(this.vxFormInfo));\r\n    this.saveEvent.emit(JSON.stringify(this.vxFormInfo));\r\n  }\r\n\r\n  btnCancel() { }\r\n\r\n  btnPreview() {\r\n    this.vxFormInfo.fields = clone(this.form_fields);\r\n    if (\r\n      this.vxFormInfo.fields !== null &&\r\n      this.vxFormInfo.fields !== undefined\r\n    ) {\r\n      this.vxFormCommonService.initFormFieldProperty(this.vxFormInfo.fields);\r\n    }\r\n    this.previewEvent.emit(JSON.stringify(this.vxFormInfo));\r\n  }\r\n\r\n  btnDelete() {\r\n    this.modalService.confirm({\r\n      nzTitle: \"æç¤º\",\r\n      nzContent: \"æ¨ç¡®å®è¦å é¤éä¸­çå­æ®µï¼\",\r\n      nzOnOk: () => {\r\n        this.getCheckFields().forEach((item: any) => {\r\n          this.form_fields.forEach((field, index, object) => {\r\n            if (\r\n              field.key === item.field.key &&\r\n              _.get(field, \"templateOptions.isbutintin\") != true\r\n            ) {\r\n              object.splice(index, 1);\r\n            }\r\n          });\r\n        });\r\n\r\n        this.initTableFieldStatus();\r\n      }\r\n    });\r\n  }\r\n\r\n  btnMoveUp() {\r\n    this.getCheckFields().forEach((item: any) => {\r\n      if (item.index > 0) {\r\n        this.form_fields.splice(item.index, 1);\r\n        this.form_fields.splice(item.index - 1, 0, item.field);\r\n      }\r\n    });\r\n  }\r\n\r\n  btnMoveDown() {\r\n    this.getCheckFields()\r\n      .reverse()\r\n      .forEach(item => {\r\n        if (item.index < this.form_fields.length - 1) {\r\n          this.form_fields.splice(item.index, 1);\r\n          this.form_fields.splice(item.index + 1, 0, item.field);\r\n        }\r\n      });\r\n  }\r\n\r\n  btnAddFields() {\r\n    this.selectTableFields();\r\n  }\r\n\r\n  btnAddRemark() {\r\n    this.vxTransferService.transferLabelToForm(\r\n      this.form_fields,\r\n      this.getCheckFields()\r\n    );\r\n  }\r\n\r\n  btnAddLine() {\r\n    this.vxTransferService.transferLineToForm(\r\n      this.form_fields,\r\n      this.getCheckFields()\r\n    );\r\n  }\r\n\r\n  btnAddGroup() {\r\n    let tablecode = this.getTableMultipleCode();\r\n    if (tablecode == null || tablecode == \"\") {\r\n      this.message.warning(\r\n        \"å½åä¸å¡è¡¨æ²¡æç¸å³èçå¤è¡¨åè®°å½ï¼æä¸è½æ·»å å¤è®°å½åºåï¼\"\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.business_tables &&\r\n      this.business_tables.child &&\r\n      this.business_tables.child.multiple &&\r\n      this.business_tables.child.multiple.length > 0\r\n    ) {\r\n      if (\r\n        this.business_tables.child.multiple.some((item: any) => {\r\n          return item.tablequote !== true;\r\n        })\r\n      ) {\r\n        this.vxDialogService.CreateModelDialog(\r\n          {\r\n            nzTitle: \"ç¼è¾\",\r\n            size: \"large\",\r\n            nzContent: VXFormDesignTables\r\n          },\r\n          { businessTable: this.business_tables, tableType: \"single\" },\r\n          (instance: any, modal: any) => {\r\n            modal.destroy();\r\n\r\n            this.vxTransferService.transferGroupToForm(\r\n              this.form_fields,\r\n              this.getCheckFields(),\r\n              instance.radioValue\r\n            );\r\n\r\n            this.initTableFieldStatus();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  btnColumn(type: number) {\r\n    this.vxFormInfo.column = `layout-column-${type}`;\r\n    this.layout_column = this.vxFormInfo.column;\r\n  }\r\n\r\n  btnRow(type: number) {\r\n    this.vxFormInfo.row = `layout-row-${type}`;\r\n    this.layout_row = this.vxFormInfo.row;\r\n  }\r\n\r\n  getCheckFields() {\r\n    let checkedField: ICheckedField[] = [];\r\n    this.form_fields.forEach((item, index) => {\r\n      if (item.checked) {\r\n        checkedField.push({ index: index, field: item });\r\n      }\r\n    });\r\n    return checkedField;\r\n  }\r\n\r\n  /*æé®åºå---end*/\r\n\r\n  groupBtnMoveUpOrDown(groupField: VXFormFieldConfig, type: string) {\r\n    if (\r\n      !_.get(groupField, \"fieldArray.fieldGroup\") ||\r\n      _.get(groupField, \"fieldArray.fieldGroup\").length < 1\r\n    ) {\r\n      groupField.fieldArray = {\r\n        fieldGroup: []\r\n      };\r\n    }\r\n    let res = this.vxTransferService.groupFieldMoveUpOrDown(\r\n      this.form_fields,\r\n      groupField,\r\n      type\r\n    );\r\n    if (res != null) {\r\n      this.form_fields = res;\r\n      if (groupField.key !== null && groupField.key !== undefined) {\r\n        this.form_model[groupField.key] = [{}];\r\n      }\r\n    }\r\n  }\r\n\r\n  groupBtnAddLineRemark(groupField: VXFormFieldConfig, type: string) {\r\n    if (\r\n      !_.get(groupField, \"fieldArray.fieldGroup\") ||\r\n      _.get(groupField, \"fieldArray.fieldGroup\").length < 1\r\n    ) {\r\n      groupField.fieldArray = {\r\n        fieldGroup: []\r\n      };\r\n    }\r\n    let res = null;\r\n    if (type === \"line\") {\r\n      res = this.vxTransferService.groupTransferLineToForm(\r\n        this.form_fields,\r\n        groupField\r\n      );\r\n    } else if (type === \"remark\") {\r\n      res = this.vxTransferService.groupTransferRemarkToForm(\r\n        this.form_fields,\r\n        groupField\r\n      );\r\n    }\r\n    if (res != null) {\r\n      this.form_fields = res;\r\n      if (groupField.key !== null && groupField.key !== undefined) {\r\n        this.form_model[groupField.key] = [{}];\r\n      }\r\n    }\r\n  }\r\n\r\n  groupBtnTableFields(groupField: VXFormFieldConfig) {\r\n    this.vxDialogService.CreateModelDialog(\r\n      {\r\n        nzTitle: \"ç¼è¾\",\r\n        size: \"large\",\r\n        nzContent: VXFormDesignTable\r\n      },\r\n      {\r\n        businessTable: this.business_tables,\r\n        tableType: \"multiple\",\r\n        fieldConfig: groupField\r\n      },\r\n      (instance: any, modal: any) => {\r\n        modal.destroy();\r\n        let res = this.vxTransferService.groupTransferSelectFieldToForm(\r\n          this.form_fields,\r\n          groupField,\r\n          this.getCheckFields(),\r\n          this.business_tables,\r\n          instance.mapOfCheckedId\r\n        );\r\n        if (res != null) {\r\n          this.form_fields = res;\r\n          if (groupField.key !== null && groupField.key !== undefined) {\r\n            this.form_model[groupField.key] = [{}];\r\n          }\r\n        }\r\n\r\n        this.initTableFieldStatus();\r\n      }\r\n    );\r\n  }\r\n\r\n  groupBtnDeleteFields(groupField: VXFormFieldConfig) {\r\n    if (\r\n      !_.get(groupField, \"fieldArray.fieldGroup\") ||\r\n      _.get(groupField, \"fieldArray.fieldGroup\").length < 1\r\n    ) {\r\n      return;\r\n    }\r\n    let res = this.vxTransferService.groupTransferDeleteForm(\r\n      this.form_fields,\r\n      groupField\r\n    );\r\n    if (res != null) {\r\n      this.form_fields = res;\r\n      if (groupField.key !== null && groupField.key !== undefined) {\r\n        this.form_model[groupField.key] = [{}];\r\n      }\r\n    }\r\n    this.initTableFieldStatus();\r\n  }\r\n\r\n  initTablesInfo() {\r\n    this.business_tables;\r\n    this.dataService\r\n      .getBusinessTables(this.api.tables.url, { formcode: this.formCode })\r\n      .subscribe(res => {\r\n        if (res != null) {\r\n          this.business_tables = res;\r\n          this.initFormInfo();\r\n        }\r\n      });\r\n  }\r\n\r\n  initFormInfo() {\r\n    this.dataService.getFormInfo(this.api.form.url, { formcode: this.formCode }).subscribe(res => {\r\n      this.vxFormInfo = {\r\n        code: res.code,\r\n        name: res.name,\r\n        type: res.type,\r\n        fields: res.fields\r\n      };\r\n      if (\r\n        this.vxFormInfo.fields !== null &&\r\n        this.vxFormInfo.fields !== undefined\r\n      ) {\r\n\r\n      this.vxFormCommonService.initFormFieldModel(this.vxFormInfo.fields, this.form_model);\r\n\r\n        this.form_fields = this.vxFormInfo.fields;\r\n      }\r\n      if (res.column != undefined && res.column != null && res.column != \"\") {\r\n        this.vxFormInfo.column = res.column;\r\n      } else {\r\n        this.vxFormInfo.column = \"layout-column-3\";\r\n      }\r\n      if (res.row != undefined && res.row != null && res.row != \"\") {\r\n        this.vxFormInfo.row = res.row;\r\n      } else {\r\n        this.vxFormInfo.row = \"layout-row-1\";\r\n      }\r\n      if (\r\n        this.vxFormInfo.column != undefined &&\r\n        this.vxFormInfo.column != null &&\r\n        this.vxFormInfo.row != undefined &&\r\n        this.vxFormInfo.row != null\r\n      ) {\r\n        this.layout_column = this.vxFormInfo.column;\r\n        this.layout_row = this.vxFormInfo.row;\r\n        //debugger\r\n        this.vxDesginToFormService.initFormFieldByTables(\r\n          this.business_tables,\r\n          this.form_fields\r\n        );\r\n        this.initTableFieldStatus();\r\n      }\r\n    });\r\n  }\r\n\r\n  initTableFieldStatus() {\r\n    this.vxDesginToFormService.initTableStatus(\r\n      this.business_tables,\r\n      this.form_fields\r\n    );\r\n    this.initTablesData();\r\n  }\r\n\r\n  initTablesData() {\r\n    this.table_Data = [];\r\n    let business = clone(this.business_tables);\r\n    let tables: any = [];\r\n    if (!business) return;\r\n\r\n    if (business.primary && business.primary != null) {\r\n      tables = [\r\n        {\r\n          tabletype: \"primary\",\r\n          tablelabel: \"ä¸»è¡¨\",\r\n          tablecode: business.primary[\"tablecode\"],\r\n          tablename: business.primary[\"tablename\"],\r\n          tablefields: business.primary[\"tablefields\"]\r\n        }\r\n      ];\r\n    }\r\n    if (\r\n      business.child &&\r\n      business.child != null &&\r\n      business.child.single &&\r\n      business.child.single != null &&\r\n      business.child.single.length > 0\r\n    ) {\r\n      if (Array.isArray(business.child.single)) {\r\n        business.child.single.forEach((item: any) => {\r\n          tables.push({\r\n            tabletype: \"single\",\r\n            tablelabel: \"åè®°å½å­è¡¨\",\r\n            tablecode: item[\"tablecode\"],\r\n            tablename: item[\"tablename\"],\r\n            tablefields: item[\"tablefields\"]\r\n          });\r\n        });\r\n      }\r\n    }\r\n    if (\r\n      business.child &&\r\n      business.child != null &&\r\n      business.child.multiple &&\r\n      business.child.multiple != null &&\r\n      business.child.multiple.length > 0\r\n    ) {\r\n      if (Array.isArray(business.child.multiple)) {\r\n        business.child.multiple.forEach((item: any) => {\r\n          tables.push({\r\n            tabletype: \"multiple\",\r\n            tablelabel: \"å¤è®°å½å­è¡¨\",\r\n            tablecode: item[\"tablecode\"],\r\n            tablename: item[\"tablename\"],\r\n            tablefields: item[\"tablefields\"]\r\n          });\r\n        });\r\n      }\r\n    }\r\n    this.table_Data = tables;\r\n  }\r\n\r\n  //è¡¨åéæ©\r\n  selectTableFields() {\r\n    this.vxDialogService.CreateModelDialog(\r\n      {\r\n        nzTitle: \"ç¼è¾\",\r\n        size: \"large\",\r\n        nzContent: VXFormDesignTable\r\n      },\r\n      { businessTable: this.business_tables, tableType: \"single\" },\r\n      (instance: any, modal: any) => {\r\n        modal.destroy();\r\n        this.vxTransferService.transferSelectFieldToForm(\r\n          this.form_fields,\r\n          this.getCheckFields(),\r\n          this.business_tables,\r\n          instance.mapOfCheckedId\r\n        );\r\n        console.log(JSON.stringify(this.form_fields))\r\n        this.initTableFieldStatus();\r\n      }\r\n    );\r\n  }\r\n\r\n  getTableMultipleCode() {\r\n    let resTableCode = \"\";\r\n    if (\r\n      this.business_tables &&\r\n      this.business_tables.child &&\r\n      this.business_tables.child.multiple &&\r\n      this.business_tables.child.multiple.length > 0\r\n    ) {\r\n      this.business_tables.child.multiple.forEach((item: any) => {\r\n        if (item.tablequote !== true && resTableCode == \"\") {\r\n          resTableCode = item.tablecode;\r\n        }\r\n      });\r\n    }\r\n    return resTableCode;\r\n  }\r\n\r\n  //ä¿®æ¹Field\r\n  editFormFieldConfig(field: VXFormFieldConfig) {\r\n    let content: any;\r\n    let title = \"\";\r\n    if (field.type === \"html\") {\r\n      title = \"ç¼è¾çæ®µææ¬æè¿°\";\r\n      content = VXFormDesignFieldLabel;\r\n    } else {\r\n      title = \"ç¼è¾å­æ®µ - \" + _.get(field, \"templateOptions.label\");\r\n      content = VXFormDesignField;\r\n    }\r\n    this.vxDialogService.CreateModelDialog(\r\n      {\r\n        nzTitle: title,\r\n        size: \"large\",\r\n        nzContent: content\r\n      },\r\n      { field: clone(field) },\r\n      (instance: any, modal: any) => { \r\n        if (instance.checkSave()) {\r\n          let result = this.vxTransferService.editFormFieldInfo(\r\n            this.form_fields,\r\n            instance.formField\r\n          );\r\n\r\n          if (result != null) {\r\n            this.form_fields = result.formFileds;\r\n            if (result.groupKey != null && result.groupKey != \"\") {\r\n              this.form_model[result.groupKey] = [{}];\r\n            }\r\n          }\r\n          modal.destroy();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //å é¤Field\r\n  deleteFormFieldConfig(field: VXFormFieldConfig) {\r\n    let result = this.vxTransferService.deleteFormFieldInfo(\r\n      this.form_fields,\r\n      field\r\n    );\r\n\r\n    if (result != null) {\r\n      this.form_fields = result.formFileds;\r\n      if (result.groupKey != null && result.groupKey != \"\") {\r\n        this.form_model[result.groupKey] = [{}];\r\n      }\r\n\r\n      this.initTableFieldStatus();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  forwardRef\r\n} from \"@angular/core\";\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\nimport { clone, VXFormFieldConfig } from \"@vx-form/core\";\r\nimport { IBusinessTable } from \"../../tools/util\";\r\nimport { DataService } from \"../../service/data.service\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxform-drawer\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"],\r\n  host: {\r\n    \"[class.setting-drawer]\": \"true\"\r\n  },\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => VXFormDrawerComponent), // replace name as appropriate\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class VXFormDrawerComponent implements OnInit, OnChanges, OnDestroy {\r\n  visible = false;\r\n\r\n  tableData = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    //this.initTableData();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  close(): void {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    if (value != undefined && value != null) {\r\n      this.tableData = value;\r\n    }\r\n  }\r\n\r\n  onChange(_: any) {}\r\n  onTouched() {}\r\n  registerOnChange(fn: any) {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { NzTreeComponent } from \"ng-zorro-antd/tree\";\r\nimport { NzFormatEmitEvent } from \"ng-zorro-antd/core\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport {\r\n  ISelectedNode,\r\n  ITreeData,\r\n  ICheckedTree,\r\n  ITreeEvent\r\n} from \"../../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vxform-private-tree\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXFormPrivateTree implements OnInit, OnChanges {\r\n  //æ¯å¦æ¾ç¤ºTag\r\n  @Input() tag: boolean = true;\r\n\r\n  //åéï¼å¤é\r\n  @Input() selectType: \"single\" | \"multiple\" = \"single\";\r\n\r\n  @Input() expandAll:boolean = true;\r\n\r\n  //éä¸­èç¹\r\n  @Input() selectData: ICheckedTree[] = [];\r\n\r\n  //æ æ°æ®\r\n  @Input() data: ITreeData[] = [];\r\n\r\n  @Output() treeChangeEvent = new EventEmitter<ITreeEvent>();\r\n\r\n  @ViewChild(\"nzTreeComponent\", { static: false })\r\n  nzTreeComponent: NzTreeComponent | undefined;\r\n\r\n  selectedKey: any[] = [];\r\n\r\n  //éæ©èç¹\r\n  selectedNode: ISelectedNode[] = [];\r\n\r\n  skeletonStatus: number = 0;\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.selectData) {\r\n      this.treeChecked(this.selectData);\r\n    }\r\n    if (changes.data) {\r\n      //setTimeout(() => {\r\n      this.skeletonStatus = 1;\r\n      //}, 100);\r\n    }\r\n  }\r\n\r\n  nzClick(event: NzFormatEmitEvent) {\r\n    if (this.selectType != \"multiple\") {\r\n      this.selectData.forEach((item: any, index, object) => {\r\n        if (\r\n          item != undefined &&\r\n          item != null &&\r\n          item.value != undefined &&\r\n          item.value != null &&\r\n          event != undefined &&\r\n          event != null &&\r\n          event.node != undefined &&\r\n          event.node != null &&\r\n          event.node.key != undefined &&\r\n          event.node.key != null &&\r\n          event.node.title != undefined &&\r\n          event.node.title != null &&\r\n          item.value !== event.node.key\r\n        ) {\r\n          object.splice(index, 1);\r\n        }\r\n      });\r\n      if (this.selectData.length < 1) {\r\n        if (\r\n          event != undefined &&\r\n          event != null &&\r\n          event.node != undefined &&\r\n          event.node != null &&\r\n          event.node.key != undefined &&\r\n          event.node.key != null &&\r\n          event.node.title != undefined &&\r\n          event.node.title != null\r\n        ) {\r\n          this.selectData.push({\r\n            label: event.node.title,\r\n            value: event.node.key\r\n          });\r\n        }\r\n      }\r\n      this.treeChangeEvent.emit({ checkData: this.selectData });\r\n    }\r\n  }\r\n\r\n  //ç¹å»å¤éæ¡è§¦å\r\n  nzCheck(event: NzFormatEmitEvent): void {\r\n    if (\r\n      event != undefined &&\r\n      event != null &&\r\n      event.keys != undefined &&\r\n      event.keys != null &&\r\n      event.node != undefined &&\r\n      event.node != null &&\r\n      event.node.key != undefined &&\r\n      event.node.key != null &&\r\n      event.node.title != undefined &&\r\n      event.node.title != null\r\n    ) {\r\n      let isAdd: boolean = event.keys.some((key: any) => {\r\n        return key === _.get(event, \"node.key\");\r\n      });\r\n      if (isAdd == true) {\r\n        this.selectData.push({\r\n          label: event.node.title,\r\n          value: event.node.key\r\n        });\r\n      } else {\r\n        this.selectData.forEach((item, index, object) => {\r\n          if (item.value === _.get(event, \"node.key\")) {\r\n            object.splice(index, 1);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.treeChecked(this.selectData);\r\n\r\n    this.treeChangeEvent.emit({ checkData: this.selectData });\r\n  }\r\n\r\n  //éç½®éä¸­èç¹\r\n  treeChecked(items: any) {\r\n    if (items != null && items.length > 0) {\r\n      this.selectedKey = items.map((item: any) => {\r\n        return item.value;\r\n      });\r\n    } else {\r\n      this.selectedKey = [];\r\n    }\r\n  }\r\n\r\n  //å é¤éä¸­èç¹\r\n  selectClearById(node: any) {\r\n    this.selectData.forEach((item, index, object) => {\r\n      if (item.value === node) {\r\n        object.splice(index, 1);\r\n      }\r\n    });\r\n    this.treeChecked(this.selectData);\r\n    this.treeChangeEvent.emit({ checkData: this.selectData, delete: node });\r\n  }\r\n\r\n  selectAllClear(){  \r\n    //this.selectData =[];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from \"@angular/core\";\r\n\r\nexport interface ITableQuery {\r\n  total: number;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  sortName?: string;\r\n  sortValue?: string;\r\n  parameter?: any;\r\n  keyWord:string;\r\n}\r\nexport interface ITableHeader {\r\n  key?: any;\r\n  name?: string;\r\n  //pop?: string;\r\n  width?: number;\r\n  minWidth?: number;\r\n  filterList?: any;\r\n  checkboxable?: boolean;\r\n  sortable: boolean;\r\n  hiden?: boolean,\r\n  action?: boolean;\r\n  [additionalProperties: string]: any;\r\n}\r\n\r\nexport interface ITableButton {\r\n  type?: string;\r\n  text?: string;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"vxform-private-table\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXFormPrivateTable  implements OnInit, OnChanges, OnDestroy {\r\n   \r\n  @Input() set tableIndex(value:number){\r\n    this.query.pageIndex=value;\r\n  }\r\n  get tableIndex(){\r\n    return this.query.pageIndex;\r\n  }\r\n  \r\n  @Input() set tableSize(value:number){\r\n    this.query.pageSize=value;\r\n  }\r\n  get tableSize(){\r\n    return this.query.pageSize;\r\n  }\r\n  \r\n  @Input() set tableTotal(value:number){\r\n    this.query.total=value;\r\n  }\r\n  get tableTotal(){\r\n    return this.query.total;\r\n  }\r\n\r\n  //tableId\r\n  @Input() id: string=\"\";\r\n\r\n  //æ¯å¦è¦å¤é\r\n  @Input() check = false;\r\n\r\n  //æ¯å¦ææä½å0 æ²¡ææä½åï¼1 å¤ä¸ªæä½æé® 2 éæ©\r\n  @Input() action = 0;\r\n\r\n  //table å¤´é¨ä¿¡æ¯\r\n  @Input()\r\n  set header(value: ITableHeader[]) {\r\n    if (value != null && value.length > 0) {\r\n      value.forEach(item => {\r\n        item.prop = item.key;\r\n        if (item.checkboxable) {\r\n          item.name=\"\";\r\n          item.width=50;\r\n          item.canAutoResize = false;\r\n          item.resizeable = false;\r\n          item.frozenLeft = true;\r\n          item.checkboxable = true;\r\n          item.headerCheckboxable = true;\r\n        }\r\n        if(item.action){ \r\n          item.frozenRight=true;\r\n          item.canAutoResize=false;\r\n          item.resizeable=false;\r\n        }\r\n        this._headerData.push(item);\r\n      });\r\n    }\r\n  }\r\n  get header() {\r\n    return this._headerData;\r\n  }\r\n\r\n  //table è¡æ°æ®\r\n  @Input()\r\n  set body(value: any[]) {\r\n    this.listData = value;\r\n    if(this.listData==null || this.listData.length==0){\r\n      this.tableScroll.y=\"0px\";\r\n    }else{\r\n      this.tableScroll.y=\"332px\";\r\n    }\r\n  }\r\n\r\n  //æé®åè¡¨\r\n  @Input() buttonlist: ITableButton[] = [];\r\n\r\n  //é»è®¤éä¸­Id\r\n  @Input()\r\n  set checkid(value: any[]) {\r\n    this.listDataSelectedList=[];\r\n    if (value != null && value.length > 0) {\r\n      value.forEach(item => {\r\n        this.listDataCheckedId[item.id] = true;\r\n        this.listDataSelectedList.push(item);\r\n      });\r\n    }\r\n  }\r\n\r\n  //éä¸­äºä»¶\r\n  @Output() checkChangeEvent: EventEmitter<any> = new EventEmitter();\r\n  //ç¿»é¡µäºä»¶\r\n  @Output() pageIndexEvent: EventEmitter<any> = new EventEmitter();\r\n  //æåºäºä»¶\r\n  @Output() orderChangeEvent: EventEmitter<any> = new EventEmitter();\r\n  //è¿æ»¤äºä»¶\r\n  @Output() filterChangeEvent: EventEmitter<any> = new EventEmitter();\r\n  //æä½äºä»¶\r\n  @Output() buttonAction: EventEmitter<any> = new EventEmitter();\r\n\r\n\r\n  checkIds: string[] = [];\r\n  _headerData:any[] = [];\r\n\r\n  isAllChecked = false;\r\n  isIndeterminate = false; \r\n\r\n  listData: any[] = [];\r\n  listDataCheckedId: { [key: string]: boolean } = {};\r\n  listDataSelectedList: any[] = [];\r\n\r\n  query: ITableQuery = {\r\n    total: 0,\r\n    pageIndex:1,\r\n    pageSize: 15,\r\n    sortName: \"\",\r\n    sortValue: \"\",\r\n    keyWord:\"\"\r\n  }\r\n  tableScroll = {\r\n    y: '332px'\r\n  };\r\n \r\n  constructor() {}\r\n \r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n \r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  //å¨é|å¨ä¸é\r\n  setCheckAll(value: boolean): void {\r\n    this.listData.forEach(item => (this.listDataCheckedId[item.id] = value));\r\n    this.setCheckStatus();\r\n  }\r\n\r\n  //è®¾ç½®æä¸ªéæ©|åæ¶éä¸­\r\n  setCheckStatus(): void { \r\n    this.isAllChecked = this.listData.every(item => this.listDataCheckedId[item.id]);\r\n    this.isIndeterminate = this.listData.some(item => this.listDataCheckedId[item.id]) && !this.isAllChecked;\r\n    this.saveSelected();\r\n  }\r\n  \r\n \r\n  //ç¹å»æ¥è¯¢\r\n  queryChange()\r\n  {\r\n    this.pageIndexEvent.emit(this.query);  \r\n  }\r\n\r\n  //ç¹å»ç¿»é¡µ\r\n  pageIndexChange(e:number) {\r\n    this.query.pageIndex = e;\r\n    this.pageIndexEvent.emit(this.query);\r\n  }\r\n\r\n  //ç¹å»æåº\r\n  tableSort(sort: { key: string; value: string }): void {\r\n    this.query.sortName = sort.key;\r\n    this.query.sortValue = sort.value;\r\n    this.orderChangeEvent.emit(this.query);\r\n  } \r\n\r\n  //åå»éä¸­\r\n  itemSelectChange(event:any){\r\n    this.listDataSelectedList.shift();\r\n    this.listDataSelectedList.push({\r\n      \"id\":event.id,\r\n      \"name\":event.name\r\n    });\r\n    this.checkChangeEvent.emit(this.listDataSelectedList);\r\n  }\r\n \r\n  //ä¿å­éä¸­\r\n  saveSelected(){ \r\n    Object.keys(this.listDataCheckedId).forEach(id => {\r\n      let value = this.listDataCheckedId[id];\r\n        if(value){\r\n         if(!this.listDataSelectedList.some(item=>{return item.id==id})){\r\n          this.listData.forEach((item,index,object)=>{\r\n            if(item.id==id){\r\n              this.listDataSelectedList.push({\r\n                id:item.id,\r\n                name:item.name\r\n              });\r\n            }\r\n          });\r\n         }\r\n        }\r\n        else{\r\n          this.listDataSelectedList.forEach((item,index,object)=>{\r\n            if(item.id==id){\r\n              object.splice(index,1);\r\n            }\r\n          });\r\n        }\r\n    });\r\n    \r\n    this.checkChangeEvent.emit(this.listDataSelectedList); \r\n  }\r\n  \r\n  selectAllClear(){\r\n    this.isAllChecked = false;\r\n    this.isIndeterminate = false; \r\n    this.listDataCheckedId={};\r\n    this.listDataSelectedList=[]; \r\n  }\r\n\r\n  selectClearById(id:any){\r\n    this.listDataCheckedId[id]=false;\r\n    this.setCheckStatus();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Pipe({ name: \"replaceLine\" })\r\nexport class ReplaceLinePipe implements PipeTransform {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value: string): string {\r\n    return value.replace(/\\n/g, \"<br/>\");\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, registerLocaleData } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\r\nimport {\r\n  HttpClient,\r\n  HTTP_INTERCEPTORS,\r\n  HttpClientModule\r\n} from \"@angular/common/http\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { NgZorroAntdModule, NZ_I18N, zh_CN, NZ_ICONS } from \"ng-zorro-antd\";\r\nimport {\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  FormOutline,\r\n  DashboardOutline,\r\n  MinusSquareFill,\r\n  MinusSquareOutline,\r\n  MinusSquareTwoTone,\r\n  MinusOutline,\r\n  InboxOutline\r\n} from \"@ant-design/icons-angular/icons\";\r\n\r\nimport zh from \"@angular/common/locales/zh\"; \r\n\r\nimport { VXFormModule } from \"@vx-form/core\";\r\nimport {\r\n  BOOTSTRAP_VXFORM_CONFIG,\r\n  FIELD_TYPE_COMPONENTS\r\n} from \"./bootstrap.config\";\r\n\r\nimport { validationConfig } from \"./validation.config\";\r\nimport { VXFormDesignDetail } from \"./design/detail/detail.component\";\r\nimport { VXFormDesignField } from \"./design/field/field.component\";\r\nimport { VXFormDesignFieldLabel } from \"./design/field-label/field.component\";\r\nimport { VXFormDesignTable } from \"./design/table/table.component\";\r\nimport { VXFormDesignTables } from \"./design/tables/table.component\";\r\nimport { VXFormDrawerComponent } from \"./design/drawer/index.component\";\r\n\r\nimport { VXFormPrivateTree } from \"./components/private/tree/index.component\";\r\nimport { VXFormPrivateTable } from \"./components/private/table/index.component\";\r\n\r\nimport { VXFormTree } from \"./components/tree/index.component\";\r\nimport { VXFormEmployee } from \"./components/employee/index.component\";\r\nimport { VXFormOrg } from \"./components/org/index.component\";\r\nimport { VXFormPostion } from \"./components/postion/index.component\";\r\nimport { VXFormArea } from \"./components/area/index.component\";\r\n\r\n// import { VXLanguageComponent } from \"./components/public/lang/index.component\";\r\n// import { VXFormEmployeeComponent } from \"./components/public/employee/index.component\";\r\n// import { VXFormOrgComponent } from \"./components/public/org/index.component\";\r\n// import { VXFormPostionComponent } from \"./components/public/postion/index.component\";\r\n// import { VXFormAreaComponent } from \"./components/public/area/index.component\";\r\n// import { VXCardSelfComponent } from \"./components/public/card/card-self/index.component\";\r\n// import { VXCardSubComponent } from \"./components/public/card/card-sub/index.component\";\r\n// import { VXCardEmpComponent } from \"./components/public/card/card-emp/index.component\";\r\n// import { VXCardLimitComponent } from \"./components/public/card/card-limit/index.component\";\r\n\r\nimport { VXFormAntService } from \"./tools/service\";\r\nimport { VXToFormFieldService } from \"./tools/formFieldService\";\r\nimport { VXDesginToFormService } from \"./tools/tableFieldService\";\r\n\r\nimport { VXDialogService } from \"./service/dialog.service\"; \r\nimport { ReplaceLinePipe } from \"./tools/replaceLinePipe\"; \r\nimport { _HttpClient } from \"./net/http.client\";\r\n\r\nconst icons = [\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  FormOutline,\r\n  DashboardOutline,\r\n  MinusSquareFill,\r\n  MinusSquareOutline,\r\n  MinusSquareTwoTone,\r\n  MinusOutline,\r\n  InboxOutline\r\n];\r\nregisterLocaleData(zh);\r\n\r\n//ç§æç\r\nconst entryComponent = [\r\n  VXFormDesignField,\r\n  VXFormDesignFieldLabel,\r\n  VXFormDesignTable,\r\n  VXFormDesignTables,\r\n  VXFormDrawerComponent,\r\n\r\n  VXFormPrivateTree,\r\n  VXFormPrivateTable,\r\n  \r\n\r\n  \r\n  VXFormTree,\r\n  VXFormEmployee,\r\n  VXFormEmployee,\r\n  VXFormOrg,\r\n  VXFormPostion,\r\n  VXFormArea\r\n];\r\n\r\n//å¬å¼ç\r\nconst publicComponent = [\r\n  VXFormDesignDetail,\r\n  // VXLanguageComponent,\r\n  // VXFormEmployeeComponent,\r\n  // VXFormOrgComponent,\r\n  // VXFormPostionComponent,\r\n  // VXFormAreaComponent,\r\n  // VXCardSelfComponent,\r\n  // VXCardSubComponent,\r\n  // VXCardEmpComponent,\r\n  // VXCardLimitComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FIELD_TYPE_COMPONENTS,\r\n    entryComponent,\r\n    publicComponent,\r\n    ReplaceLinePipe\r\n  ],\r\n  imports: [\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    DragDropModule,\r\n    OverlayModule,\r\n    NgZorroAntdModule,\r\n    VXFormModule.forChild(BOOTSTRAP_VXFORM_CONFIG),\r\n    VXFormModule.forRoot(validationConfig)\r\n  ],\r\n  entryComponents: [entryComponent],\r\n  exports: [TranslateModule, publicComponent],\r\n  providers: [ \r\n    { provide: NZ_I18N, useValue: zh_CN },\r\n    { provide: NZ_ICONS, useValue: icons }, \r\n    _HttpClient, \r\n    VXFormAntService,\r\n    VXDialogService,\r\n    VXToFormFieldService,\r\n    VXDesginToFormService\r\n  ]\r\n})\r\nexport class VXFormAntModule {}\r\n"],"names":["EventEmitter","Injectable","tslib_1.__extends","Component","FieldType","ViewChild","CdkOverlayOrigin","HostListener","Guid","Observable","NzMessageService","NzModalService","http","HttpParams","tap","catchError","throwError","HttpClient","_.cloneDeep","_.get","Input","Output","ChangeDetectorRef","FieldWrapper","FieldArrayType","Inject","clone","message","FormGroup","VXFormCommonService","_","NG_VALUE_ACCESSOR","forwardRef","Pipe","DomSanitizer","icons","MenuFoldOutline","MenuUnfoldOutline","FormOutline","DashboardOutline","MinusSquareFill","MinusSquareOutline","MinusSquareTwoTone","MinusOutline","InboxOutline","registerLocaleData","zh_CN","NgModule","HttpModule","HttpClientModule","FormsModule","ReactiveFormsModule","CommonModule","DragDropModule","OverlayModule","NgZorroAntdModule","VXFormModule","TranslateModule","NZ_I18N","NZ_ICONS"],"mappings":"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"}
