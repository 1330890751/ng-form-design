{"version":3,"file":"vx-form-survey.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@vx-form/survey/lib/tools/service.ts","ng://@vx-form/survey/lib/types/radiogroup.ts","ng://@vx-form/survey/lib/types/drag-drop.ts","ng://@vx-form/survey/lib/types/basic/radio.ts","ng://@vx-form/survey/lib/types/basic/checkbox.ts","ng://@vx-form/survey/lib/types/basic/dropdown.ts","ng://@vx-form/survey/lib/service/dialog.service.ts","ng://@vx-form/survey/lib/components/edit-cascader/index.component.ts","ng://@vx-form/survey/lib/types/basic/cascader.ts","ng://@vx-form/survey/lib/types/basic/scaler.ts","ng://@vx-form/survey/lib/types/basic/score.ts","ng://@vx-form/survey/lib/types/basic/line.ts","ng://@vx-form/survey/lib/types/basic/remark.ts","ng://@vx-form/survey/lib/types/basic/input.ts","ng://@vx-form/survey/lib/types/basic/date.ts","ng://@vx-form/survey/lib/types/basic/time.ts","ng://@vx-form/survey/lib/types/basic/nps.ts","ng://@vx-form/survey/lib/types/basic/proportion.ts","ng://@vx-form/survey/lib/components/edit-evaluation/index.component.ts","ng://@vx-form/survey/lib/types/basic/evaluation.ts","ng://@vx-form/survey/lib/types/basic/matrix_radio.ts","ng://@vx-form/survey/lib/types/basic/matrix_checkbox.ts","ng://@vx-form/survey/lib/types/basic/matrix_score.ts","ng://@vx-form/survey/lib/types/basic/matrix_input.ts","ng://@vx-form/survey/lib/types/basic/input_group.ts","ng://@vx-form/survey/lib/wrappers/form-field.wrapper.ts","ng://@vx-form/survey/lib/templates/group.ts","ng://@vx-form/survey/lib/templates/repeat.ts","ng://@vx-form/survey/lib/bootstrap.config.ts","ng://@vx-form/survey/lib/validation.config.ts","ng://@vx-form/survey/lib/net/http.client.ts","ng://@vx-form/survey/lib/service/data.service.ts","ng://@vx-form/survey/lib/tools/radio_Service.ts","ng://@vx-form/survey/lib/tools/checkbox_Service.ts","ng://@vx-form/survey/lib/tools/input_Service.ts","ng://@vx-form/survey/lib/tools/cascader_Service.ts","ng://@vx-form/survey/lib/tools/other_Service.ts","ng://@vx-form/survey/lib/tools/matrix_Service.ts","ng://@vx-form/survey/lib/tools/transferService.ts","ng://@vx-form/survey/lib/design/detail/detail.component.ts","ng://@vx-form/survey/lib/components/question-type/index.component.ts","ng://@vx-form/survey/lib/components/question-list/index.component.ts","ng://@vx-form/survey/lib/components/basic/setting_cascader.ts","ng://@vx-form/survey/lib/components/basic/setting_checkbox.ts","ng://@vx-form/survey/lib/components/basic/setting_dropdown.ts","ng://@vx-form/survey/lib/components/basic/setting_input.ts","ng://@vx-form/survey/lib/components/basic/setting_line.ts","ng://@vx-form/survey/lib/components/basic/setting_radio.ts","ng://@vx-form/survey/lib/components/basic/setting_remark.ts","ng://@vx-form/survey/lib/components/basic/setting_scaler.ts","ng://@vx-form/survey/lib/components/basic/setting_score.ts","ng://@vx-form/survey/lib/components/basic/setting_date.ts","ng://@vx-form/survey/lib/components/basic/setting_time.ts","ng://@vx-form/survey/lib/components/basic/setting_nps.ts","ng://@vx-form/survey/lib/components/basic/setting_proportion.ts","ng://@vx-form/survey/lib/components/basic/setting_evaluation.ts","ng://@vx-form/survey/lib/components/basic/setting_matrix_radio.ts","ng://@vx-form/survey/lib/components/basic/setting_matrix_checkbox.ts","ng://@vx-form/survey/lib/components/basic/setting_matrix_score.ts","ng://@vx-form/survey/lib/components/basic/setting_matrix_input.ts","ng://@vx-form/survey/lib/components/basic/setting_input_group.ts","ng://@vx-form/survey/lib/components/setting.teplate.ts","ng://@vx-form/survey/lib/components/edit-cascader/cascader-item.ts","ng://@vx-form/survey/lib/components/inline-editor/contenteditable.ts","ng://@vx-form/survey/lib/components/inline-editor/inline-editor.comonent.ts","ng://@vx-form/survey/lib/components/first-page/index.component.ts","ng://@vx-form/survey/lib/components/last-page/index.component.ts","ng://@vx-form/survey/lib/tools/replaceLinePipe.ts","ng://@vx-form/survey/lib/pipes/safehtml.pipe.ts","ng://@vx-form/survey/lib/bootstrap.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXFormAntService {\r\n  btnEvent = new EventEmitter();\r\n  fieldEvent = new EventEmitter();\r\n  questionEvent = new EventEmitter();\r\n  optionEvent = new EventEmitter(); \r\n  dragDropEvent = new EventEmitter();\r\n\r\n  workList = [];\r\n\r\n  constructor() {}\r\n\r\n  fieldOperational(sign: string, field: VXFormFieldConfig) {\r\n    this.fieldEvent.emit({\r\n      sign: sign,\r\n      field: field\r\n    });\r\n  }\r\n  groupOperational(type: string, field: VXFormFieldConfig) {\r\n    this.btnEvent.emit({\r\n      type: type,\r\n      field: field\r\n    });\r\n  }\r\n  \r\n\r\n  \r\n  questionOperational(sign: string, field: VXFormFieldConfig) {\r\n    this.questionEvent.emit({\r\n      sign: sign,\r\n      field: field\r\n    });\r\n  }\r\n  \r\n  optionOperational(sign: string,option:any, field: VXFormFieldConfig) {\r\n    this.optionEvent.emit({\r\n      sign: sign,\r\n      option:option,\r\n      field: field\r\n    });\r\n  }\r\n\r\n  dragDropOperational(previousData:any,previousIndex:any,currentIndex:any) {\r\n    this.dragDropEvent.emit({\r\n      previousData: previousData,\r\n      previousIndex:previousIndex,\r\n      currentIndex: currentIndex\r\n    });\r\n  }\r\n  \r\n\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-radiogroup\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n        \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      \r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyRadioGroup extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  \r\n  dropOption(event: CdkDragDrop<string[]>) {\r\n     \r\n  }\r\n\r\n  //è®¾ç½®é»è¾\r\n  logicQuestion(){\r\n    this.service.questionOperational(\"logic\",this.field);\r\n  }\r\n  //æ·è´é¢ç®\r\n  copyQuestion(){ \r\n    this.service.questionOperational(\"copy\",this.field);\r\n  }\r\n  //å é¤é¢ç®\r\n  delQuestion()\r\n  {  \r\n    this.service.questionOperational(\"delete\",this.field);\r\n  }\r\n  //ç¹å»é¢ç®\r\n  activeQuestion(){\r\n    if(!this.active){ \r\n      this.service.questionOperational(\"active\",this.field);\r\n    }\r\n  }\r\n\r\n  //æ·»å éé¡¹\r\n  addOption(){\r\n    this.service.optionOperational(\"add\",\"\",this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions(){\r\n    this.service.optionOperational(\"adds\",\"\",this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option:any){ \r\n    this.service.optionOperational(\"delete\",option,this.field);\r\n  } \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n//cdkDrag\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n@Component({\r\n  selector: \"vxsurvey-drag-drop\",\r\n  template: `\r\n  <div class=\"formly-drag-drop\"  (cdkDropListDropped)=\"drop($event)\" cdkDropList [cdkDropListData]=\"field.fieldGroup\">\r\n  <div class=\"formly-drag-drop\">\r\n    <ng-container *ngFor=\"let field of field.fieldGroup;let index=index;\" > \r\n      <div  (click)=\"activeQuestion(field)\" *ngIf=\"field.active==true\" class=\"formly-drag-drop_wrap active\"> \r\n        <div class=\"field-operate\" >  \r\n          <span (click)=\"logicQuestion(field)\" nzTooltipTitle=\"é»è¾è®¾ç½®\" nzTooltipPlacement=\"top\" nz-tooltip>è®¾ç½®</span>\r\n          <span (click)=\"copyQuestion(field)\" nzTooltipTitle=\"å¤å¶é¢ç®\" nzTooltipPlacement=\"top\" nz-tooltip>å¤å¶</span>\r\n          <span (click)=\"delQuestion(field)\"  nzTooltipTitle=\"å é¤é¢ç®\" nzTooltipPlacement=\"top\" nz-tooltip>å é¤</span>\r\n        </div>\r\n        <div class=\"field-content\">\r\n        <vxform-field [field]=\"field\" [rownumber]=\"index+1\"></vxform-field>\r\n        </div>\r\n      </div>\r\n      \r\n      <div  (click)=\"activeQuestion(field)\" *ngIf=\"field.active!=true \" class=\"formly-drag-drop_wrap\" cdkDrag> \r\n         \r\n        <div class=\"field-content\">\r\n        <vxform-field [field]=\"field\" [rownumber]=\"index+1\"></vxform-field>\r\n        </div>\r\n      </div>\r\n    </ng-container> \r\n  </div>\r\n  \r\n  <ng-container *ngIf=\"field.fieldGroup==null || field.fieldGroup.length==0\" >\r\n  <div class=\"formly_empty\">\r\n    <div class=\"formly-drag-drop\"  (cdkDropListDropped)=\"drop($event)\" cdkDropList [cdkDropListData]=\"field.fieldGroup\">\r\n      è¯·æé¢åæå¥æ­¤åºå\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n  `\r\n})\r\nexport class VXSurveyDragDrop extends FieldType {\r\n  service: any;\r\n\r\n  get insertQuestionIndex(){\r\n    let result = -1;\r\n    if(this.to.index){\r\n      result = this.to.index;\r\n    }\r\n    return result;\r\n  };\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n  \r\n \r\n  drop(event: CdkDragDrop<string[]>) {\r\n   \r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      this.service.dragDropOperational(\r\n        event.previousContainer.data,\r\n        event.previousIndex,\r\n        event.currentIndex);\r\n    }\r\n  }\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  \r\n  //è®¾ç½®é»è¾\r\n  logicQuestion(field:any){\r\n    this.service.questionOperational(\"logic\",field);\r\n  }\r\n  //æ·è´é¢ç®\r\n  copyQuestion(field:any){ \r\n    this.service.questionOperational(\"copy\",field);\r\n  }\r\n  //å é¤é¢ç®\r\n  delQuestion(field:any)\r\n  {  \r\n    this.service.questionOperational(\"delete\",field);\r\n  }\r\n  //ç¹å»é¢ç®\r\n  activeQuestion(field:any){\r\n    if(!this.field.active){ \r\n      this.service.questionOperational(\"active\",field);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-radio\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\"  (cdkDropListDropped)=\"drop($event)\" cdkDropList  [cdkDropListData]=\"to.options\">\r\n          <div class=\"option_wrap basic_radio\" *ngFor=\"let item of to.options\" cdkDrag>\r\n            <div class=\"option\">\r\n              <label nz-radio nzDisabled=\"true\"></label> \r\n              <inline-editor  [(ngModel)]=\"item.label\" [active]=\"active\"></inline-editor>  \r\n            </div>\r\n            <div class=\"operate\"  (click)=\"deleteOption(item)\" *ngIf=\"active==true\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </div>\r\n          </div>\r\n        </div>  \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span> \r\n          <span (click)=\"addOptions()\">æ¹éæ·»å éé¡¹</span>\r\n        </div> \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-radio-group\r\n        [nzName]=\"'radiogroup-' + guid\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\"\r\n        [class.is-invalid]=\"showError\"\r\n      >\r\n        <ng-container *ngFor=\"let item of to.options\">\r\n          <label nz-radio [nzValue]=\"item.value\">{{ item.label }}</label>\r\n        </ng-container>\r\n      </nz-radio-group>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyRadio extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) { \r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } \r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-checkbox\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n      <div class=\"question-wrap_title\">\r\n        <div class=\"required\">\r\n          <span *ngIf=\"to.required\">*</span>\r\n        </div>\r\n        <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"></inline-editor>  \r\n      </div>\r\n      <div class=\"question-wrap_content\"  (cdkDropListDropped)=\"drop($event)\" cdkDropList  [cdkDropListData]=\"to.options\">\r\n        <div class=\"option_wrap basic_checkbox\" *ngFor=\"let item of to.options\" cdkDrag>\r\n          <div class=\"option\">\r\n            <label nz-checkbox nzDisabled=\"true\"></label> \r\n            <inline-editor [(ngModel)]=\"item.label\" [active]=\"active\"></inline-editor>  \r\n          </div>\r\n          <div class=\"operate\" (click)=\"deleteOption(item)\" *ngIf=\"active==true\">\r\n            <i class=\"icon-KT-Close\"></i>\r\n          </div>  \r\n        </div>\r\n      </div> \r\n      <div class=\"question-wrap_operate\">\r\n        <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span> \r\n        <span (click)=\"addOptions()\">æ¹éæ·»å éé¡¹</span>\r\n      </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-checkbox-wrapper\r\n        style=\"width: 100%;\"\r\n        (nzOnChange)=\"onChange($event)\"\r\n        [class.is-invalid]=\"showError\"\r\n      >\r\n        <ng-container *ngFor=\"let option of to.options; let i = index\">\r\n          <label\r\n            nz-checkbox\r\n            [nzValue]=\"option.value\"\r\n            [ngModel]=\"getControlChecked(formControl.value, option)\"\r\n            [vxFormAttributes]=\"field\"\r\n            >{{ option.label }}</label>\r\n        </ng-container>\r\n      </nz-checkbox-wrapper> \r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyCheckBox extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n \r\n  //æ·»å éé¡¹\r\n  addOption(){\r\n    this.service.optionOperational(\"add\",\"\",this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions(){\r\n    this.service.optionOperational(\"adds\",\"\",this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option:any){ \r\n    this.service.optionOperational(\"delete\",option,this.field);\r\n  }\r\n  \r\n  onChange(values: string[]) {\r\n    let res: any = [];\r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach(value => {\r\n        if (this.to.options !== undefined && this.to.options !== null) {\r\n          this.to.options.forEach((option: any) => {\r\n            if (option[\"value\"] === value) {\r\n              res.push(value);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this.formControl.patchValue(values);\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  getCheckStatus(option: any) {\r\n    this.formControl.value;\r\n  }\r\n\r\n  public getControlChecked(values: any, option: any) {\r\n    let result = false;\r\n    if (option && values) {\r\n      result = values.some((value: any) => {\r\n        return value == option.value;\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) { \r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } \r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-dropdown\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n      <div class=\"question-wrap_title\">\r\n        <div class=\"required\">\r\n          <span *ngIf=\"to.required\">*</span>\r\n        </div>\r\n        <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"></inline-editor>  \r\n      </div>\r\n      <div class=\"question-wrap_content\"  (cdkDropListDropped)=\"drop($event)\" cdkDropList  [cdkDropListData]=\"to.options\">\r\n        <div class=\"option_wrap basic_dropdown\" *ngFor=\"let item of to.options\" cdkDrag>\r\n          <div class=\"option\">\r\n          <span class=\"handle\"></span>\r\n            <inline-editor [(ngModel)]=\"item.label\"></inline-editor>  \r\n          </div>\r\n          <div class=\"operate\"  (click)=\"deleteOption(item)\">\r\n            <i class=\"icon-KT-Close\"></i>\r\n          </div>\r\n        </div>\r\n      </div> \r\n      <div class=\"question-wrap_operate\">\r\n        <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span> \r\n        <span (click)=\"addOptions()\">æ¹éæ·»å éé¡¹</span>\r\n      </div> \r\n    </ng-container> \r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-select \r\n        nzAllowClear \r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\"\r\n        [class.is-invalid]=\"showError\"\r\n        nzPlaceHolder=\"è¯·éæ©\" \r\n      >\r\n        <ng-container *ngFor=\"let item of to.options\">\r\n          <nz-option\r\n            [nzLabel]=\"item.label\"\r\n            [nzValue]=\"item.value\"\r\n          ></nz-option>\r\n        </ng-container>\r\n      </nz-select>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyDropdown extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n \r\n\r\n  //æ·»å éé¡¹\r\n  addOption(){\r\n    this.service.optionOperational(\"add\",\"\",this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions(){\r\n    this.service.optionOperational(\"adds\",\"\",this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option:any){ \r\n    this.service.optionOperational(\"delete\",option,this.field);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) { \r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } \r\n  } \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { NzModalService, UploadFile } from \"ng-zorro-antd\";\r\n\r\ntype ModalSizeType = \"small\" | \"medium\" | \"large\";\r\nexport interface ModalOptions {\r\n  nzContent: any; //ç»ä»¶\r\n  size: ModalSizeType; //å°/ä¸­/å¤§\r\n  nzTitle?: string; //æ é¢\r\n  primaryLabel?: string; //æé®âlabelâ,ä¸ä¼ é»è®¤ä¸ºâç¡®å®â\r\n  vertical?: boolean; //å¼¹æ¡æ¯å¦ä¸ºåç´å±ä¸­ï¼é»è®¤ä¸åç´å±ä¸­\r\n  hideBtn?: boolean; //æ¯å¦éèfooteræé®\r\n  showResetBtn?: boolean; //æ¯å¦æ¾ç¤ºéç½®æé®\r\n}\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class VXDialogService {\r\n  constructor(public modalService: NzModalService) {}\r\n  switchSize(size: any) {\r\n    const obj = {\r\n      width: 700,\r\n      height: 500\r\n    };\r\n    switch (size) {\r\n      case \"small\":\r\n        obj.width = 530;\r\n        obj.height = 400;\r\n        break;\r\n      case \"medium\":\r\n        obj.width = 700;\r\n        obj.height = 500;\r\n        break;\r\n      case \"large\":\r\n        obj.width = 950;\r\n        obj.height = 600;\r\n        break;\r\n      default:\r\n        obj.width = 700;\r\n        obj.height = 500;\r\n        break;\r\n    }\r\n    return obj;\r\n  }\r\n  public CreateModelDialog(\r\n    modalOptions: ModalOptions,\r\n    params: any,\r\n    callback: any\r\n  ) {\r\n    const width = this.switchSize(modalOptions.size).width;\r\n    const height = this.switchSize(modalOptions.size).height;\r\n    const modal: any = this.modalService.create({\r\n      nzTitle: modalOptions.nzTitle ? modalOptions.nzTitle : \"æç¤º\",\r\n      nzWidth: width + \"px\",\r\n      nzClosable: true,\r\n      nzMaskClosable: false,\r\n      nzWrapClassName: modalOptions[\"vertical\"] ? \"vertical-center-modal\" : \"\",\r\n      nzBodyStyle: {\r\n        padding: \"0\",\r\n        height: !modalOptions[\"hideBtn\"]\r\n          ? height - 107 + \"px\"\r\n          : height - 54 + \"px\"\r\n      },\r\n      nzContent: modalOptions.nzContent,\r\n      nzFooter: !modalOptions[\"hideBtn\"]\r\n        ? [\r\n            {\r\n              show: true,\r\n              label: \"åæ¶\",\r\n              type: \"default\",\r\n              onClick: componentInstance => {\r\n                modal.destroy();\r\n              }\r\n            },\r\n            {\r\n              show: modalOptions[\"showResetBtn\"],\r\n              label: \"éç½®\",\r\n              type: \"default\",\r\n              onClick: componentInstance => callback(componentInstance, modal)\r\n            },\r\n            {\r\n              show: true,\r\n              label: modalOptions[\"primaryLabel\"]\r\n                ? modalOptions[\"primaryLabel\"]\r\n                : \"ç¡®å®\",\r\n              type: \"primary\",\r\n              onClick: componentInstance => callback(componentInstance, modal)\r\n            }\r\n          ]\r\n        : null,\r\n      nzOnOk: data => {},\r\n      nzOnCancel: data => {},\r\n      nzComponentParams: params\r\n    });\r\n\r\n    modal.afterClose.subscribe((result: any) => {\r\n      if (result) {\r\n        callback(result);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-editcascader\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXSurveyEditCascader implements OnInit, OnChanges {\r\n  \r\n  cascaderData: any[] = [];\r\n\r\n  @Input() set fieldConfig(value:VXFormFieldConfig){\r\n    if(value!=undefined && value!=null && value.templateOptions !=undefined && value.templateOptions!=null && value.templateOptions.options!=undefined && value.templateOptions.options!=null){\r\n      if(Array.isArray(value.templateOptions.options)){\r\n        this.cascaderData = _.cloneDeep(value.templateOptions.options);\r\n      }else{\r\n        this.cascaderData = []; \r\n      }\r\n    }\r\n    this.row1.data = this.cascaderData;\r\n  };\r\n\r\n  @Input() set data(value: any[]) {\r\n    \r\n  }\r\n\r\n  get data() {\r\n    return this.cascaderData;\r\n  }\r\n\r\n  row1: any = {\r\n    cascader: 1,\r\n    current: \"\",\r\n    showadd: true,\r\n    data: []\r\n  }\r\n  row2: any = {\r\n    cascader: 2,\r\n    current: \"\",\r\n    showadd: false,\r\n    data: []\r\n  }\r\n  row3: any = {\r\n    cascader: 3,\r\n    current: \"\",\r\n    showadd: false,\r\n    data: []\r\n  }\r\n  row4: any = {\r\n    cascader: 4,\r\n    current: \"\",\r\n    showadd: false,\r\n    data: []\r\n  }\r\n\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n  } \r\n\r\n  cascaderItem(item: any, type: number) {\r\n    let showadd = true; \r\n    switch (type) {\r\n      case 1:\r\n        this.row1.current = item.value;\r\n        this.row2.cascader = 2;\r\n        this.row2.showadd = showadd;\r\n        this.row2.data = item.children ? item.children : [];\r\n\r\n        this.row3.current = \"\";\r\n        this.row3.showadd = false;\r\n        this.row3.data = [];\r\n\r\n        this.row4.current = \"\";\r\n        this.row4.showadd = false;\r\n        this.row4.data = [];\r\n        break;\r\n      case 2:\r\n        this.row2.current = item.value;\r\n        this.row3.cascader = 3;\r\n        this.row3.showadd = showadd;\r\n        this.row3.data = item.children ? item.children : [];\r\n\r\n        this.row4.current = \"\";\r\n        this.row4.showadd = false;\r\n        this.row4.data = [];\r\n        break;\r\n      case 3:\r\n        this.row3.current = item.value;\r\n        this.row4.cascader = 4;\r\n        this.row4.showadd = showadd;\r\n        this.row4.data = item.children ? item.children : [];\r\n        break;\r\n      case 4:\r\n        this.row4.current = item.value;\r\n        break;\r\n    }\r\n  }\r\n\r\n  addOption(e: number) {\r\n\r\n  }\r\n\r\n  delOption(e: any, type: number) {\r\n    if (e) {\r\n      switch (type) {\r\n        case 1:\r\n          this.row1.data.forEach((item: any, index: number, obj: any) => {\r\n            if (e.value == item.value) {\r\n              obj.splice(index, 1);\r\n            }\r\n          });\r\n          this.row2 = [];\r\n          this.row3 = [];\r\n          this.row4 = [];\r\n          break;\r\n        case 2:\r\n          this.row2.data.forEach((item: any, index: number, obj: any) => {\r\n            if (e.value == item.value) {\r\n              obj.splice(index, 1);\r\n            }\r\n          });\r\n          this.row3 = [];\r\n          this.row4 = [];\r\n          break;\r\n        case 3:\r\n          this.row3.data.forEach((item: any, index: number, obj: any) => {\r\n            if (e.value == item.value) {\r\n              obj.splice(index, 1);\r\n            }\r\n          });\r\n          this.row4 = [];\r\n          break;\r\n        case 4:\r\n          this.row4.data.forEach((item: any, index: number, obj: any) => {\r\n            if (e.value == item.value) {\r\n              obj.splice(index, 1);\r\n            }\r\n          });\r\n          break;\r\n      }\r\n\r\n    }\r\n  }\r\n}","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { NzModalService } from \"ng-zorro-antd/modal\";\r\nimport { VXDialogService } from \"../../service/dialog.service\";\r\n\r\nimport { VXSurveyEditCascader } from \"../../components/edit-cascader/index.component\";\r\n@Component({\r\n  selector: \"vxsurvey-cascader\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"></inline-editor>   \r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap select_cascader\">\r\n            <nz-cascader [nzOptions]=\"to.options\" [nzShowSearch]=\"true\" [nzDisabled]=\"true\">\r\n            </nz-cascader>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addOption()\">ç¼è¾éé¡¹</span>  \r\n        </div> \r\n    </ng-container>\r\n\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-cascader nzChangeOnSelect [nzOptions]=\"to.options\" nzPlaceHolder=\"è¯·éæ©\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\">\r\n      </nz-cascader>\r\n       \r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyCascader extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  values: string[] | null = null;\r\n  constructor(\r\n    dyService: VXFormAntService,\r\n    private modal: NzModalService,\r\n    public vxDialogService: VXDialogService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n \r\n  //æ·»å éé¡¹\r\n  addOption() { \r\n    let para = {\r\n      fieldConfig: this.field\r\n    }; \r\n    this.vxDialogService.CreateModelDialog(\r\n      {\r\n        nzTitle: \"éé¡¹ç¼è¾\",\r\n        size: \"large\",\r\n        nzContent: VXSurveyEditCascader\r\n      },\r\n      para,\r\n      (instance: any, modal: any) => {\r\n        let optionlist = instance.cascaderData;\r\n        this.to.options = optionlist;\r\n        \r\n        modal.destroy();\r\n      }\r\n    );\r\n\r\n  }  \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-scaler\",\r\n  template: `\r\n    \r\n  `\r\n})\r\nexport class VXSurveyScaler extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  get scalerData(){\r\n    let result:any[]=[];\r\n    if(this.to!=undefined && this.to!=null && this.to.beginNumber !=undefined && this.to.beginNumber!=null  && this.to.max !=undefined && this.to.max!=null ){\r\n     \r\n      let begin=this.to.beginNumber;\r\n      for(let i=0;i<this.to.max;i++){\r\n        result.push({\r\n          value:begin,\r\n          label:begin\r\n        });\r\n        begin=begin+1;\r\n      }\r\n    }\r\n    console.log(result)\r\n    return result;\r\n  }\r\n \r\n}\r\n\r\n// <ng-container *ngIf=\"formStatus !== 0\"> \r\n//       <div class=\"question-wrap_title\">\r\n//         <div class=\"required\">\r\n//           <span *ngIf=\"to.required\">*</span>\r\n//         </div>\r\n//         <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"></inline-editor>   \r\n//       </div>\r\n//       <div class=\"question-wrap_content\">\r\n//         <div class=\"option_wrap basic_scaler\">\r\n//           <ng-container *ngIf=\"to.type=='number'\">\r\n//             <nz-radio-group> \r\n//               <label nz-radio nzValue=\"A\">A</label>\r\n//               <label nz-radio nzValue=\"B\">B</label>\r\n//               <label nz-radio nzValue=\"C\">C</label>\r\n//               <label nz-radio nzValue=\"D\">D</label>  \r\n//             </nz-radio-group>\r\n//           </ng-container>\r\n//         </div>\r\n//       </div> \r\n//       <div class=\"question-wrap_operate\">\r\n//         <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span> \r\n//         <span (click)=\"addOptions()\">æ¹éæ·»å éé¡¹</span>\r\n//       </div> \r\n//     </ng-container>\r\n\r\n//     <ng-container *ngIf=\"formStatus === 0\">\r\n//       <ng-container *ngIf=\"editor === true\">\r\n//         <nz-radio-group\r\n//           [nzName]=\"'radiogroup-' + guid\"\r\n//           [formControl]=\"formControl\"\r\n//           [vxFormAttributes]=\"field\"\r\n//           [class.is-invalid]=\"showError\"\r\n//         >\r\n//           <ng-container *ngFor=\"let item of to.options\">\r\n//             <label nz-radio [nzValue]=\"item.value\">{{ item.label }}</label>\r\n//           </ng-container>\r\n//         </nz-radio-group>\r\n//         <div class=\"tips\">\r\n//           <i\r\n//             class=\"icon-bangzhu\"\r\n//             [nzTooltipTitle]=\"tips\"\r\n//             nzTooltipPlacement=\"top\"\r\n//             nz-tooltip\r\n//             *ngIf=\"tips != ''\"\r\n//           ></i>\r\n//         </div>\r\n//       </ng-container>\r\n\r\n//       <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ textSingle }}</div>\r\n//     </ng-container>","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-score\",\r\n  template: `\r\n    \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"></inline-editor>  \r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap basic_score\">\r\n            \r\n            <nz-rate *ngIf=\"to.type=='start'\" nzAllowHalf [nzCount]=\"to.setting.max\"></nz-rate>\r\n            <nz-rate *ngIf=\"to.type=='heart'\" nzAllowHalf [nzCharacter]=\"characterIconHeart\" [nzCount]=\"to.setting.max\"></nz-rate>\r\n            <nz-rate *ngIf=\"to.type=='good'\" nzAllowHalf [nzCharacter]=\"characterIconGood\" [nzCount]=\"to.setting.max\"></nz-rate>\r\n            <nz-rate *ngIf=\"to.type=='other'\" nzAllowHalf [nzCharacter]=\"characterIconOther\" [nzCount]=\"to.setting.max\"></nz-rate> \r\n            <ng-template #characterIconHeart> \r\n              å¿ \r\n            </ng-template>\r\n            <ng-template #characterIconGood>\r\n              èµ  \r\n            </ng-template>\r\n            <ng-template #characterIconOther>\r\n              {{to.setting.label}}  \r\n            </ng-template>  \r\n          </div>\r\n        </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-rate *ngIf=\"to.type=='start'\" nzAllowHalf [nzCount]=\"to.setting.max\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\">\r\n      </nz-rate>\r\n      <nz-rate *ngIf=\"to.type=='heart'\" nzAllowHalf [nzCharacter]=\"characterIconHeart\" [nzCount]=\"to.setting.max\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\">\r\n      </nz-rate>\r\n      <nz-rate *ngIf=\"to.type=='good'\" nzAllowHalf [nzCharacter]=\"characterIconGood\" [nzCount]=\"to.setting.max\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\">\r\n      </nz-rate>\r\n      <nz-rate *ngIf=\"to.type=='other'\" nzAllowHalf [nzCharacter]=\"characterIconOther\" [nzCount]=\"to.setting.max\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\">\r\n      </nz-rate> \r\n      <ng-template #characterIconHeart> \r\n        å¿ \r\n      </ng-template>\r\n      <ng-template #characterIconGood>\r\n        èµ  \r\n      </ng-template>\r\n      <ng-template #characterIconOther>\r\n        {{to.setting.label}}  \r\n      </ng-template>  \r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyScore extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n \r\n  //æ·»å éé¡¹\r\n  addOption(){\r\n    this.service.optionOperational(\"add\",\"\",this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions(){\r\n    this.service.optionOperational(\"adds\",\"\",this.field);\r\n  }  \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-line\",\r\n  template: `\r\n  <ng-container *ngIf=\"formStatus !== 0\">\r\n    <div class=\"question-wrap_content\">\r\n      <div class=\"option_wrap basic_line\" >\r\n        <div class=\"line\"></div>\r\n      </div>\r\n    </div>   \r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"formStatus === 0\">\r\n    <div class=\"line\"></div>\r\n  </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyLine extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-remark\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"question-wrap_content\">\r\n        <div class=\"option_wrap basic_remark\" > \r\n            <inline-editor [(ngModel)]=\"to.label\"  [active]=\"active\"></inline-editor> \r\n        </div>\r\n      </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\"> \r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyRemark extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-input\",\r\n  template: `  \r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"question-wrap_title\">\r\n        <div class=\"required\">\r\n          <span *ngIf=\"to.required\">*</span>\r\n        </div>\r\n        <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"></inline-editor>   \r\n      </div>\r\n      <div class=\"question-wrap_content\">\r\n        <div class=\"option_wrap basic_input\" >\r\n          <ng-container *ngIf=\"to.setting.size=='small'\">\r\n            <input nz-input placeholder=\"\" [disabled]=\"true\" />\r\n          </ng-container>\r\n          <ng-container *ngIf=\"to.setting.size=='default'\">\r\n            <textarea rows=\"2\" nz-input [disabled]=\"true\" ></textarea>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"to.setting.size=='large'\">\r\n            <textarea rows=\"4\" nz-input [disabled]=\"true\" ></textarea>\r\n          </ng-container>\r\n        </div>\r\n      </div>   \r\n  </ng-container>\r\n\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"to.setting.size=='small'\">\r\n        <input nz-input  \r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\" />\r\n      </ng-container>\r\n      <ng-container *ngIf=\"to.setting.size=='default'\">\r\n        <textarea rows=\"2\" nz-input  \r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"  ></textarea>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"to.setting.size=='large'\">\r\n        <textarea rows=\"4\" nz-input  \r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"></textarea>\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyInput extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-date\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"question-wrap_title\">\r\n        <div class=\"required\">\r\n          <span *ngIf=\"to.required\">*</span>\r\n        </div>\r\n        <inline-editor [(ngModel)]=\"to.label\"></inline-editor>  \r\n      </div>\r\n      <div class=\"question-wrap_content\">\r\n        <div class=\"option_wrap date\" > \r\n          <nz-date-picker nzDisabled></nz-date-picker>\r\n        </div>\r\n      </div>   \r\n    </ng-container>\r\n\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-date-picker \r\n        nzShowTime\r\n        [nzFormat]=\"format\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\"\r\n        [class.is-invalid]=\"showError\"\r\n      ></nz-date-picker>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyDate extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  get format(){\r\n    let result=\"yyyy-MM-dd\"; \r\n    if(this.to[\"format\"]!=undefined && this.to[\"format\"]!=null && this.to[\"format\"]!=\"\"){\r\n      result = this.to[\"format\"];\r\n    }\r\n    return result;\r\n  }\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-time\",\r\n  template: `\r\n    \r\n    \r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"question-wrap_title\">\r\n        <div class=\"required\">\r\n          <span *ngIf=\"to.required\">*</span>\r\n        </div>\r\n        <inline-editor [(ngModel)]=\"to.label\"></inline-editor>  \r\n      </div>\r\n      <div class=\"question-wrap_content\">\r\n        <div class=\"option_wrap time\" > \r\n          <nz-time-picker nzFormat=\"HH:mm\" [nzDisabled]=\"true\"></nz-time-picker>\r\n        </div>\r\n      </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\"> \r\n      <nz-time-picker nzFormat=\"HH:mm\"\r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\"\r\n        [class.is-invalid]=\"showError\">\r\n      </nz-time-picker> \r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyTime extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n   \r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-nps\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap basic_nps\">\r\n            <div class=\"option\" *ngFor=\"let item of to.options\"> \r\n               {{item.label}} \r\n            </div> \r\n          </div>\r\n          \r\n          <div class=\"option_wrap_text\">\r\n            <span class=\"fl\">ä¸å¯è½</span>\r\n            <span class=\"fr\">ææå¯è½</span>\r\n          </div>\r\n        </div>  \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <div class=\"option_wrap\">\r\n        <nz-radio-group\r\n          [nzName]=\"'radiogroup-' + guid\"\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n        >\r\n          <ng-container *ngFor=\"let item of to.options\"> \r\n            <label nz-radio-button [nzValue]=\"item.value\">{{ item.label }}</label>\r\n          </ng-container>\r\n        </nz-radio-group> \r\n      </div> \r\n      <div class=\"option_wrap_text\">\r\n        <span>ä¸å¯è½</span>\r\n        <span>ææå¯è½</span>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyNPS extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-proportion\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap basic_radio\"  *ngFor=\"let item of to.options\">\r\n            <div class=\"option\">\r\n            \r\n            </div>\r\n            <div class=\"operate\"  (click)=\"deleteOption(item)\" *ngIf=\"active==true\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span> \r\n          <span (click)=\"addOptions()\">æ¹éæ·»å éé¡¹</span>\r\n        </div> \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <ng-container *ngIf=\"editor === true\">\r\n        <nz-radio-group\r\n          [nzName]=\"'radiogroup-' + guid\"\r\n          [formControl]=\"formControl\"\r\n          [vxFormAttributes]=\"field\"\r\n          [class.is-invalid]=\"showError\"\r\n        >\r\n          <ng-container *ngFor=\"let item of to.options\">\r\n            <label nz-radio [nzValue]=\"item.value\">{{ item.label }}</label>\r\n          </ng-container>\r\n        </nz-radio-group>\r\n        <div class=\"tips\">\r\n          <i\r\n            class=\"icon-bangzhu\"\r\n            [nzTooltipTitle]=\"tips\"\r\n            nzTooltipPlacement=\"top\"\r\n            nz-tooltip\r\n            *ngIf=\"tips != ''\"\r\n          ></i>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"fieldtext\" *ngIf=\"editor === false\">{{ textSingle }}</div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyProportion extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n  marks: any = {\r\n    0: '0',\r\n    20: '20',\r\n    40: '40',\r\n    60: '60',\r\n    80: '80', \r\n    100: '100'\r\n  };\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-editevaluation\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXSurveyEditEvaluation implements OnInit, OnChanges {\r\n  \r\n  start=1;\r\n  optionSelectedIndex=0;\r\n  currentSelected:any={};\r\n \r\n  editevaluationData: any[] = [];\r\n\r\n  @Input() set fieldConfig(value:VXFormFieldConfig){\r\n    console.log(JSON.stringify(value))\r\n    if(value!=undefined && value!=null && value.templateOptions !=undefined && value.templateOptions!=null && value.templateOptions.options!=undefined && value.templateOptions.options!=null){\r\n      if(Array.isArray(value.templateOptions.options)){\r\n        this.editevaluationData = _.cloneDeep(value.templateOptions.options);\r\n        this.currentSelected = this.editevaluationData[0]\r\n      }else{\r\n        this.editevaluationData = []; \r\n      }\r\n    }else{\r\n      this.editevaluationData =[];\r\n    }\r\n\r\n  }; \r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n  } \r\n\r\n  optionClick(event:any){\r\n    this.start = event+1;\r\n    this.currentSelected = this.editevaluationData[event]\r\n  }\r\n\r\n  getOptionTag(){\r\n    return this.currentSelected.tag.split(/[\\s\\n]/);\r\n  }\r\n}","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { NzTreeHigherOrderServiceToken } from \"ng-zorro-antd\";\r\nimport { VXDialogService } from \"../../service/dialog.service\";\r\nimport { VXSurveyEditEvaluation } from \"../../components/edit-evaluation/index.component\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-evaluation\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap basic_evaluation\">\r\n            <nz-rate [(ngModel)]=\"start\" [nzCount]=\"5\"\t(ngModelChange)=\"numberChange()\"></nz-rate>\r\n            <div class=\"label\">\"{{startContent.label}}\"</div>\r\n            <div class=\"tag\">\r\n              <ng-container *ngFor=\"let item of startContent.tags\">\r\n                <span>{{item}}</span>\r\n              </ng-container>\r\n              <label (click)=\"editStart()\">\r\n                ç¼è¾\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div> \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <nz-rate [nzCount]=\"5\" [(ngModel)]=\"start\" \t(ngModelChange)=\"numberChange()\" \r\n        [formControl]=\"formControl\"\r\n        [vxFormAttributes]=\"field\">\r\n      </nz-rate>\r\n      <div class=\"label\">\"{{startContent.label}}\"</div>\r\n      <div class=\"tag\">\r\n        <ng-container *ngFor=\"let item of startContent.tags\">\r\n          <span>{{item}}</span>\r\n        </ng-container> \r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyEvaluation extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  start: number = 0;\r\n  _startContent: any = {\r\n    label: \"\",\r\n    tags: []\r\n  }\r\n\r\n  get startContent() {\r\n    if (this._startContent.label == \"\" && this.to.options != undefined) {\r\n      this.to.options.forEach((item: any) => {\r\n        if (item.value == this.start) {\r\n          this._startContent.label = item.label;\r\n\r\n          this._startContent.tags = item.tag.split(/[\\s\\n]/);\r\n        }\r\n      });\r\n    }\r\n    return this._startContent;\r\n  }\r\n\r\n  constructor(dyService: VXFormAntService,\r\n    public vxDialogService: VXDialogService) {\r\n    super();\r\n    this.service = dyService;\r\n    this.start = 1;\r\n  }\r\n\r\n  numberChange() {\r\n    if (this.to.options != undefined) {\r\n      this.to.options.forEach((item: any) => {\r\n        if (item.value == this.start) {\r\n          this._startContent.label = item.label;\r\n\r\n          this._startContent.tags = item.tag.split(/[\\s\\n]/);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  editStart() {\r\n    let para = {\r\n      fieldConfig: this.field\r\n    };\r\n    this.vxDialogService.CreateModelDialog(\r\n      {\r\n        nzTitle: \"éé¡¹ç¼è¾\",\r\n        size: \"large\",\r\n        nzContent: VXSurveyEditEvaluation\r\n      },\r\n      para,\r\n      (instance: any, modal: any) => {\r\n        this.to.options = instance.editevaluationData;\r\n        this.numberChange();\r\n        modal.destroy();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-matrix_radio\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap matrix_radio\">\r\n            <div class=\"option_table\">\r\n              <table>\r\n                <tr>\r\n                  <td></td>\r\n                  <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let itemTR of to.subtitle\">\r\n                  <td>{{itemTR.label}}</td>\r\n                  <td *ngFor=\"let itemTD of to.options\">\r\n                  <label nz-radio nzDisabled=\"true\"></label> \r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"option_vertical\">\r\n              <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addSubTitle()\">æ·»å åç©éµè¡</span>  \r\n        </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <table class=\"option_wrap\">\r\n        <tr>\r\n          <td></td>\r\n          <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n        </tr>\r\n        <tr *ngFor=\"let itemTR of to.subtitle\">\r\n          <td>{{itemTR.label}}</td>\r\n          <td *ngFor=\"let itemTD of to.options\"> \r\n            <input [id]=\"itemTR.value+'-'+itemTD.value\" type=\"radio\" [value]=\"itemTD.value\" [name]=\"itemTR.value\" [ngModel]=\"getControlChecked(itemTR,itemTD)\"  (ngModelChange)=\"controlModelChange($event,itemTR,itemTD)\">\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyMatrixRadio extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n\r\n  \r\n  \r\n  controlModelChange(value:any,subtitle:any,option:any){ \r\n    let values:any = this.formControl.value || [];\r\n\r\n    if (values != undefined && values != null && values.length > 0) {\r\n\r\n      if(!values.some((item:any)=>{return item.groupid==subtitle.value})){\r\n        values.push({\r\n          groupid:subtitle.value,\r\n          options:[{\r\n            optionid:option.value,\r\n            optionvalue:true\r\n          }]\r\n        })\r\n      }else{\r\n        values.forEach((item:any)=>{\r\n          if(item.groupid==subtitle.value){\r\n            item.options=[{\r\n              optionid:option.value,\r\n              optionvalue:true\r\n            }]\r\n          }\r\n        });\r\n      } \r\n    }else{\r\n      values.push({\r\n        groupid:subtitle.value,\r\n        options:[{\r\n          optionid:option.value,\r\n          optionvalue:true\r\n        }]\r\n      })\r\n    }\r\n    this.formControl.patchValue(values);\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  getControlChecked(subtitle: any, option: any) {\r\n  \r\n    let result = \"\";\r\n    let values = this.formControl.value; \r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach((value:any)=>{\r\n        if(value.groupid==subtitle.value){\r\n          result = value.options[0].optionid ;\r\n        }\r\n      });\r\n    }  \r\n    return result;\r\n  } \r\n\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ·»å è¡\r\n  addSubTitle() {\r\n    this.service.optionOperational(\"subtitle\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-matrix_checkbox\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap matrix_checkbox\">\r\n            <div class=\"option_table\">\r\n              <table>\r\n                <tr>\r\n                  <td></td>\r\n                  <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let itemTR of to.subtitle\">\r\n                  <td>{{itemTR.label}}</td>\r\n                  <td *ngFor=\"let itemTD of to.options\">\r\n                  <label nz-checkbox nzDisabled=\"true\"></label> \r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"option_vertical\">\r\n              <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addSubTitle()\">æ·»å åç©éµè¡</span>  \r\n        </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n    <nz-checkbox-wrapper\r\n      style=\"width: 100%;\"\r\n      (nzOnChange)=\"onChange($event)\"\r\n      [class.is-invalid]=\"showError\">\r\n      <table class=\"option_wrap\">\r\n        <tr>\r\n          <td></td>\r\n          <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n        </tr>\r\n        <tr *ngFor=\"let itemTR of to.subtitle\">\r\n          <td>{{itemTR.label}}</td>\r\n          <td *ngFor=\"let itemTD of to.options\">\r\n          <label nz-checkbox\r\n            [nzValue]=\"getMatrixOption(itemTR,itemTD)\"\r\n            [ngModel]=\"getControlChecked(itemTR,itemTD)\">\r\n          </label> \r\n          </td>\r\n        </tr> \r\n      </table>\r\n      </nz-checkbox-wrapper>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyMatrixCheckBox extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  getMatrixOption(subtitle:any,option:any){\r\n    return {\r\n      groupid:subtitle.value,\r\n      optionid:option.value\r\n    }\r\n  }\r\n\r\n  onChange(values: any[]){\r\n    let res: any = [];\r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach((value:any)=>{\r\n        if(!res.some((item:any)=>{return item.groupid==value.groupid})){\r\n          res.push(\r\n            {\r\n              groupid:value.groupid,\r\n              options:[{\r\n                optionid:value.optionid,\r\n                optionvalue:true\r\n              }]\r\n            }\r\n          )\r\n        }else{\r\n          res.forEach((item:any)=>{\r\n            if(item.groupid==value.groupid){\r\n              item.options.push({\r\n                optionid:value.optionid,\r\n                optionvalue:true\r\n              })\r\n            }\r\n          })\r\n        } \r\n      })\r\n    }\r\n    this.formControl.patchValue(res);\r\n    this.formControl.markAsTouched();\r\n  }\r\n  \r\n  getControlChecked(subtitle: any, option: any) {\r\n  \r\n    let result = false;\r\n    let values = this.formControl.value; \r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach((value:any)=>{\r\n        if(value.groupid==subtitle.value){\r\n          value.options.forEach((item:any)=>{\r\n            if(item.optionid==option.value){\r\n              result=item.optionvalue;\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }  \r\n    return result;\r\n  }\r\n\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ·»å è¡\r\n  addSubTitle() {\r\n    this.service.optionOperational(\"subtitle\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-matrix_score\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap matrix_score\">\r\n            <div class=\"option_table\">\r\n              <table>\r\n                <tr>\r\n                  <td></td>\r\n                  <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let itemTR of to.subtitle\">\r\n                  <td>{{itemTR.label}}</td>\r\n                  <td *ngFor=\"let itemTD of to.options\">\r\n                    <nz-rate [nzCount]=\"5\"></nz-rate>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"option_vertical\">\r\n              <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addSubTitle()\">æ·»å åç©éµè¡</span>  \r\n        </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <table class=\"option_wrap\">\r\n        <tr>\r\n          <td></td>\r\n          <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n        </tr>\r\n        <tr *ngFor=\"let itemTR of to.subtitle\">\r\n          <td>{{itemTR.label}}</td>\r\n          <td *ngFor=\"let itemTD of to.options\">\r\n            <nz-rate [nzCount]=\"5\" [ngModel]=\"getControlChecked(itemTR,itemTD)\" (ngModelChange)=\"controlModelChange($event,itemTR,itemTD)\"></nz-rate>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyMatrixScore extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n\r\n  controlModelChange(value:any,subtitle:any,option:any){ \r\n    let values:any = this.formControl.value || [];\r\n\r\n    if (values != undefined && values != null && values.length > 0) {\r\n\r\n      if(!values.some((item:any)=>{return item.groupid==subtitle.value})){\r\n        values.push({\r\n          groupid:subtitle.value,\r\n          options:[{\r\n            optionid:option.value,\r\n            optionvalue:value\r\n          }]\r\n        })\r\n      }else{\r\n        values.forEach((item:any)=>{\r\n          if(item.groupid==subtitle.value){\r\n            if(!item.options.some((op:any)=>{return op.optionid==option.value})){\r\n              item.options.push({\r\n                optionid:option.value,\r\n                optionvalue:value\r\n              })\r\n            }else{\r\n              item.options.forEach((op:any)=>{\r\n                if(op.optionid==option.value){\r\n                  op.optionvalue=value\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } \r\n    }else{\r\n      values.push({\r\n        groupid:subtitle.value,\r\n        options:[{\r\n          optionid:option.value,\r\n          optionvalue:value\r\n        }]\r\n      })\r\n    }\r\n    this.formControl.patchValue(values);\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  getControlChecked(subtitle: any, option: any) {\r\n  \r\n    let result = 0;\r\n    let values = this.formControl.value; \r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach((value:any)=>{\r\n        if(value.groupid==subtitle.value){\r\n          value.options.forEach((item:any)=>{\r\n            if(item.optionid==option.value){\r\n              result=item.optionvalue;\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }  \r\n    return result;\r\n  }\r\n\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ·»å è¡\r\n  addSubTitle() {\r\n    this.service.optionOperational(\"subtitle\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-matrix_input\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap matrix_input\">\r\n            <div class=\"option_table\">\r\n              <table>\r\n                <tr>\r\n                  <td></td>\r\n                  <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let itemTR of to.subtitle\">\r\n                  <td>{{itemTR.label}}</td>\r\n                  <td *ngFor=\"let itemTD of to.options\">\r\n                    <input nz-input placeholder=\"\" [disabled]=\"true\" />\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"option_vertical\">\r\n              <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addSubTitle()\">æ·»å åç©éµè¡</span>  \r\n        </div>   \r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <table class=\"option_wrap\">\r\n        <tr>\r\n          <td></td>\r\n          <td *ngFor=\"let itemTD of to.options\">{{itemTD.label}}</td>\r\n        </tr>\r\n        <tr *ngFor=\"let itemTR of to.subtitle\">\r\n          <td>{{itemTR.label}}</td>\r\n          <td *ngFor=\"let itemTD of to.options\">\r\n            <input nz-input [ngModel]=\"getControlChecked(itemTR,itemTD)\"  (ngModelChange)=\"controlModelChange($event,itemTR,itemTD)\"/>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyMatrixInput extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }  \r\n  \r\n  controlModelChange(value:any,subtitle:any,option:any){ \r\n    let values:any = this.formControl.value || [];\r\n\r\n    if (values != undefined && values != null && values.length > 0) {\r\n\r\n      if(!values.some((item:any)=>{return item.groupid==subtitle.value})){\r\n        values.push({\r\n          groupid:subtitle.value,\r\n          options:[{\r\n            optionid:option.value,\r\n            optionvalue:value\r\n          }]\r\n        })\r\n      }else{\r\n        values.forEach((item:any)=>{\r\n          if(item.groupid==subtitle.value){\r\n            if(!item.options.some((op:any)=>{return op.optionid==option.value})){\r\n              item.options.push({\r\n                optionid:option.value,\r\n                optionvalue:value\r\n              })\r\n            }else{\r\n              item.options.forEach((op:any)=>{\r\n                if(op.optionid==option.value){\r\n                  op.optionvalue=value\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n      } \r\n    }else{\r\n      values.push({\r\n        groupid:subtitle.value,\r\n        options:[{\r\n          optionid:option.value,\r\n          optionvalue:value\r\n        }]\r\n      })\r\n    }\r\n    this.formControl.patchValue(values);\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  getControlChecked(subtitle: any, option: any) {\r\n  \r\n    let result = null;\r\n    let values = this.formControl.value; \r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach((value:any)=>{\r\n        if(value.groupid==subtitle.value){\r\n          value.options.forEach((item:any)=>{\r\n            if(item.optionid==option.value){\r\n              result=item.optionvalue;\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }  \r\n    return result;\r\n  }\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ·»å è¡\r\n  addSubTitle() {\r\n    this.service.optionOperational(\"subtitle\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType, Guid } from \"@vx-form/core\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: \"vxsurvey-input_group\",\r\n  template: ` \r\n    <ng-container *ngIf=\"formStatus !== 0\"> \r\n        <div class=\"question-wrap_title\">\r\n          <div class=\"required\">\r\n            <span *ngIf=\"to.required\">*</span>\r\n          </div>\r\n          <inline-editor [(ngModel)]=\"to.label\" [active]=\"active\"\r\n          ></inline-editor>\r\n        </div>\r\n        <div class=\"question-wrap_content\">\r\n          <div class=\"option_wrap basic_input_group\"  *ngFor=\"let item of to.options\">\r\n            <div class=\"option\">\r\n              <inline-editor  [(ngModel)]=\"item.label\" [active]=\"active\"></inline-editor> \r\n              <input nz-input placeholder=\"\" [disabled]=\"true\" /> \r\n            </div>\r\n            <div class=\"operate\"  (click)=\"deleteOption(item)\" *ngIf=\"active==true\">\r\n              <i class=\"icon-KT-Close\"></i>\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <div class=\"question-wrap_operate\">\r\n          <span (click)=\"addOption()\">æ·»å åä¸ªéé¡¹</span> \r\n          <span (click)=\"addOptions()\">æ¹éæ·»å éé¡¹</span>\r\n        </div> \r\n    </ng-container>\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <div class=\"inputlist\"  *ngFor=\"let item of to.options\">\r\n        <div class=\"title\">\r\n          {{item.label}} \r\n        </div> \r\n        <input nz-input [ngModel]=\"getControlChecked(item)\"  (ngModelChange)=\"controlModelChange($event,item)\"/>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXSurveyInputGroup extends FieldType {\r\n  service: any;\r\n  guid: any = Guid.create()[\"value\"];\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  } \r\n   \r\n  controlModelChange(value:any,option:any){ \r\n    let values:any = this.formControl.value || [];\r\n\r\n    if (values != undefined && values != null && values.length > 0) {\r\n\r\n      if(!values.some((item:any)=>{return item.optionid==option.value})){\r\n        values.push({\r\n          optionid:option.value,\r\n          optionvalue:value\r\n        })\r\n      }else{\r\n        values.forEach((item:any)=>{\r\n          if(item.optionid==option.value){\r\n            item.optionvalue=value\r\n          }\r\n        });\r\n      } \r\n    }else{\r\n      values.push({\r\n        optionid:option.value,\r\n        optionvalue:value\r\n      })\r\n    }\r\n    this.formControl.patchValue(values);\r\n    this.formControl.markAsTouched();\r\n  }\r\n\r\n  getControlChecked(option: any) {\r\n    let result = null;\r\n    let values = this.formControl.value; \r\n    if (values != undefined && values != null && values.length > 0) {\r\n      values.forEach((value:any)=>{\r\n        if(value.optionid==option.value){\r\n          result=value.optionvalue;\r\n        } \r\n      });\r\n    }  \r\n    return result;\r\n  }\r\n\r\n  //æ·»å éé¡¹\r\n  addOption() {\r\n    this.service.optionOperational(\"add\", \"\", this.field);\r\n  }\r\n  //æ¹éæ·»å \r\n  addOptions() {\r\n    this.service.optionOperational(\"adds\", \"\", this.field);\r\n  }\r\n  //å é¤éé¡¹\r\n  deleteOption(option: any) {\r\n    this.service.optionOperational(\"delete\", option, this.field);\r\n  }\r\n}","import { Component } from \"@angular/core\";\r\nimport { FieldWrapper } from \"@vx-form/core\";\r\n\r\n@Component({\r\n  selector: \"vxfield-wrapper\",\r\n  template: `\r\n    <ng-container\r\n      *ngIf=\"formStatus !== 0 || field.type == 'line' || field.type == 'html'\"\r\n    >\r\n      <ng-template #fieldComponent></ng-template>\r\n    </ng-container>\r\n    <ng-container\r\n      *ngIf=\"formStatus === 0 && field.type != 'line' && field.type != 'html'\"\r\n    >\r\n      <div class=\"fieldlabel\">\r\n        <span class=\"required\" *ngIf=\"to.required\">*</span>\r\n        <span class=\"question_no\" *ngIf=\"to.queno\">{{to.queno}}.&nbsp;</span>\r\n        {{ to.label }}\r\n      </div>\r\n      <div class=\"fieldcontrol\" [class.has-error]=\"showError\">\r\n        <ng-template #fieldComponent></ng-template>\r\n        <div class=\"invalid-feedback\" [style.display]=\"'block'\">\r\n          <vxform-validation-message\r\n            *ngIf=\"showError\"\r\n            style=\"color:red\"\r\n            [field]=\"field\"\r\n          ></vxform-validation-message>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class VXFormWrapperFormField extends FieldWrapper {}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"@vx-form/core\";\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"group\",\r\n  template: `\r\n    <vxform-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></vxform-field>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    \"[class]\": 'field.className || \"\"',\r\n    cdkDrag: \"\"\r\n  }\r\n})\r\nexport class VXFormFieldGroup extends FieldType {}\r\n","import { Component, AfterViewChecked, AfterViewInit } from \"@angular/core\";\r\nimport { FieldArrayType } from \"@vx-form/core\";\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { VXFormAntService } from \"../tools/service\";\r\n\r\n@Component({\r\n  selector: \"vxform-repeat\",\r\n  template: `\r\n    <ng-container *ngIf=\"formStatus !== 0\">\r\n      <div class=\"fieldOperational\">\r\n        <!--\r\n        <div class=\"fieldcheckbox\">\r\n          <label nz-checkbox [(ngModel)]=\"field.checked\"></label>\r\n        </div>\r\n        -->\r\n        <div class=\"reportControl\">\r\n          <div class=\"report-header\">\r\n            <div class=\"left\">\r\n              <ul>\r\n                <li><label nz-checkbox [(ngModel)]=\"field.checked\"></label></li>\r\n                <li (click)=\"groupOperational('item')\">\r\n                  <i class=\"icon-TianJiaZiDuan\"></i>æ·»å å­æ®µ\r\n                </li>\r\n                <li (click)=\"groupOperational('remark')\">\r\n                  <i class=\"icon-other-WenBen\"></i>æ·»å ææ¬\r\n                </li>\r\n                <li (click)=\"groupOperational('line')\">\r\n                  <i class=\"icon-FenGeXian\"></i>æ·»å åå²çº¿\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"right\">\r\n              <ul>\r\n                <li (click)=\"groupOperational('delete')\">\r\n                  <i class=\"icon-N_delete2\"></i>å é¤\r\n                </li>\r\n                <li (click)=\"groupOperational('up')\">\r\n                  <i class=\"icon-ShangYi\"></i>ä¸ç§»\r\n                </li>\r\n                <li (click)=\"groupOperational('down')\">\r\n                  <i class=\"icon-XiaYi\"></i>ä¸ç§»\r\n                </li>\r\n                <li (click)=\"fieldOperational('delete')\">\r\n                  <button class=\"btnDel\">\r\n                    <i class=\"icon-KT-Close\"></i>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"report-body\">\r\n            <ng-container *ngFor=\"let field of field.fieldGroup; let i = index\">\r\n              <vxform-field class=\"col\" [field]=\"field\"></vxform-field>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"formStatus === 0\">\r\n      <div *ngFor=\"let field of field.fieldGroup; let i = index\" class=\"row\">\r\n        <vxform-field class=\"col\" [field]=\"field\"></vxform-field>\r\n\r\n        <span (click)=\"delete(i)\" class=\"del\">å é¤</span>\r\n\r\n        <div class=\"tips\"></div>\r\n      </div>\r\n      <div class=\"add\">\r\n        <span (click)=\"add()\">æ°å¢</span>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  host: {\r\n    \"[class]\": 'field.className || \"\"',\r\n    cdkDrag: \"\"\r\n  }\r\n})\r\nexport class VXFormFieldRepeat extends FieldArrayType {\r\n  service: any;\r\n\r\n  constructor(dyService: VXFormAntService) {\r\n    super();\r\n    this.service = dyService;\r\n  }\r\n\r\n  fieldOperational(sign: string) {\r\n    this.service.fieldOperational(sign, this.field);\r\n  }\r\n\r\n  groupOperational(type: string) {\r\n    this.service.groupOperational(type, this.field);\r\n  }\r\n\r\n  delete(i: any) {\r\n    if (this.field.fieldGroup && this.field.fieldGroup.length > 1) {\r\n      this.remove(i);\r\n    } else {\r\n    }\r\n  }\r\n}\r\n","import { ConfigOption } from \"@vx-form/core\";\r\nimport {\r\n  VXSurveyRadioGroup,\r\n  VXSurveyDragDrop,\r\n\r\n  VXSurveyRadio,\r\n  VXSurveyCheckBox,\r\n  VXSurveyDropdown,\r\n  VXSurveyCascader,\r\n  VXSurveyScaler,\r\n  VXSurveyScore,\r\n  VXSurveyLine,\r\n  VXSurveyRemark,\r\n  VXSurveyInput,\r\n  VXSurveyDate,\r\n  VXSurveyTime,\r\n  VXSurveyNPS,\r\n  VXSurveyProportion,\r\n  VXSurveyEvaluation,\r\n  VXSurveyMatrixRadio,\r\n  VXSurveyMatrixCheckBox,\r\n  VXSurveyMatrixScore,\r\n  VXSurveyMatrixInput,\r\n  VXSurveyInputGroup\r\n\r\n} from \"./types/types\";\r\n\r\n\r\n\r\nimport { VXFormWrapperFormField } from \"./wrappers/wrappers\";\r\nimport { VXFormFieldGroup } from \"./templates/group\";\r\nimport { VXFormFieldRepeat } from \"./templates/repeat\";\r\n\r\nexport const FIELD_TYPE_COMPONENTS = [\r\n\r\n  VXSurveyRadio,\r\n  VXSurveyCheckBox,\r\n  VXSurveyDropdown,\r\n  VXSurveyCascader,\r\n  VXSurveyScaler,\r\n  VXSurveyScore,\r\n  VXSurveyLine,\r\n  VXSurveyRemark,\r\n  VXSurveyInput,\r\n  VXSurveyDate,\r\n  VXSurveyTime,\r\n  VXSurveyNPS,\r\n  VXSurveyProportion,\r\n  VXSurveyEvaluation,\r\n  VXSurveyMatrixRadio,\r\n  VXSurveyMatrixCheckBox,\r\n  VXSurveyMatrixScore,\r\n  VXSurveyMatrixInput,\r\n  VXSurveyInputGroup,\r\n\r\n  // types \r\n  VXSurveyRadioGroup, \r\n\r\n  //templates\r\n  VXSurveyDragDrop,\r\n  VXFormFieldGroup,\r\n  VXFormFieldRepeat,\r\n\r\n  // wrappers\r\n  VXFormWrapperFormField\r\n];\r\n\r\nexport const BOOTSTRAP_VXFORM_CONFIG: ConfigOption = {\r\n  types: [\r\n    {\r\n      name: \"radio\", component: VXSurveyRadio,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"checkbox\", component: VXSurveyCheckBox,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"dropdown\", component: VXSurveyDropdown,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"cascader\", component: VXSurveyCascader,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"scaler\", component: VXSurveyScaler,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"score\", component: VXSurveyScore,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"line\", component: VXSurveyLine,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"remark\", component: VXSurveyRemark,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"input\", component: VXSurveyInput,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"date\", component: VXSurveyDate,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"time\", component: VXSurveyTime,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"nps\", component: VXSurveyNPS,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"proportion\", component: VXSurveyProportion,wrappers: [\"form-field\"]\r\n    },  \r\n    {\r\n      name: \"evaluation\", component: VXSurveyEvaluation,wrappers: [\"form-field\"]\r\n    }, \r\n    {\r\n      name: \"matrix_radio\", component: VXSurveyMatrixRadio,wrappers: [\"form-field\"]\r\n    }, \r\n    {\r\n      name: \"matrix_checkbox\", component: VXSurveyMatrixCheckBox,wrappers: [\"form-field\"]\r\n    },\r\n    {\r\n      name: \"matrix_score\", component: VXSurveyMatrixScore,wrappers: [\"form-field\"]\r\n    }, \r\n    {\r\n      name: \"matrix_input\", component: VXSurveyMatrixInput,wrappers: [\"form-field\"]\r\n    },  \r\n    {\r\n      name: \"input_group\", component: VXSurveyInputGroup,wrappers: [\"form-field\"]\r\n    },  \r\n    {\r\n      name: \"drag-drop\", component: VXSurveyDragDrop\r\n    },\r\n    { name: \"group\", component: VXFormFieldGroup },\r\n    { name: \"repeat\", component: VXFormFieldRepeat },\r\n\r\n    {\r\n      name: \"radiogroup\",\r\n      component: VXSurveyRadioGroup,\r\n      wrappers: [\"form-field\"]\r\n    } \r\n  ],\r\n  wrappers: [{ name: \"form-field\", component: VXFormWrapperFormField }]\r\n};\r\n","import { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nexport function getFieldPro(field: VXFormFieldConfig, key: string) {\r\n  return _.get(field, \"templateOptions.\" + key + \"\");\r\n}\r\nexport function requiredValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}ä¸è½ä¸ºç©º`;\r\n}\r\nexport function minlengthValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå°é¿åº¦ä¸º${getFieldPro(\r\n    field,\r\n    \"minLength\"\r\n  )}`;\r\n}\r\nexport function maxlengthValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå¤§é¿åº¦ä¸º${getFieldPro(\r\n    field,\r\n    \"maxLength\"\r\n  )}`;\r\n}\r\nexport function minValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå°å¼ä¸º${getFieldPro(field, \"min\")}`;\r\n}\r\nexport function maxValidationMessage(err: any, field: VXFormFieldConfig) {\r\n  return `${getFieldPro(field, \"label\")}æå¤§å¼ä¸º${getFieldPro(field, \"max\")}`;\r\n}\r\n\r\nexport let validationConfig = {\r\n  validationMessages: [\r\n    { name: \"required\", message: requiredValidationMessage },\r\n    { name: \"null\", message: \"ä¸è½ä¸ºNULL\" },\r\n    { name: \"minlength\", message: minlengthValidationMessage },\r\n    { name: \"maxlength\", message: maxlengthValidationMessage },\r\n    { name: \"min\", message: minValidationMessage },\r\n    { name: \"max\", message: maxValidationMessage },\r\n    { name: \"multipleOf\", message: \"ssss\" },\r\n    { name: \"exclusiveMinimum\", message: \"ssss\" },\r\n    { name: \"exclusiveMaximum\", message: \"ssss\" },\r\n    { name: \"minItems\", message: \"ssss\" },\r\n    { name: \"maxItems\", message: \"ssss\" },\r\n    { name: \"uniqueItems\", message: \"should NOT have duplicate items\" },\r\n    { name: \"const\", message: \"ssss\" },\r\n    { name: \"pattern\", message: \"ä¸æ»¡è¶³è¿åè¡¨è¾¾å¼\" }\r\n  ],\r\n  types: [\r\n    // { name: \"string\", extends: \"input\" },\r\n    // {\r\n    //   name: \"number\",\r\n    //   extends: \"input\",\r\n    //   defaultOptions: {\r\n    //     templateOptions: {\r\n    //       type: \"number\"\r\n    //     }\r\n    //   }\r\n    // },\r\n    // {\r\n    //   name: \"integer\",\r\n    //   extends: \"input\",\r\n    //   defaultOptions: {\r\n    //     templateOptions: {\r\n    //       type: \"number\"\r\n    //     }\r\n    //   }\r\n    // },\r\n    // { name: \"boolean\", extends: \"checkbox\" },\r\n    // { name: \"enum\", extends: \"select\" },\r\n     { name: \"array\", extends: \"array\" },\r\n     { name: \"object\", extends: \"object\" }\r\n  ]\r\n};\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { tap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class _HttpClient {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private _loading = false;\r\n\r\n  get loading(): boolean {\r\n    return this._loading;\r\n  }\r\n\r\n  parseParams(params: any): HttpParams {\r\n    /*const newParams = {};\r\n    Object.keys(params).forEach(key => {\r\n      let _data = params[key];\r\n\r\n      newParams[key] = _data;\r\n    });*/\r\n    if (params === undefined || params === null) {\r\n      params = {};\r\n    }\r\n    return new HttpParams({ fromObject: params });\r\n  }\r\n\r\n  formEncode(obj: any) {\r\n    var encodedString = \"\";\r\n    for (var key in obj) {\r\n      if (encodedString.length !== 0) {\r\n        encodedString += \"&\";\r\n      }\r\n      encodedString += key + \"=\" + encodeURIComponent(obj[key]);\r\n    }\r\n    return encodedString;\r\n  }\r\n\r\n  appliedUrl(url: string, params?: any) {\r\n    if (!params) return url;\r\n    url += ~url.indexOf(\"?\") ? \"\" : \"?\";\r\n    const arr: string[] = [];\r\n    for (const key in params) {\r\n      arr.push(`${key}=${params[key]}`);\r\n    }\r\n    return url + arr.join(\"&\");\r\n  }\r\n\r\n  begin() {\r\n    setTimeout(() => (this._loading = true));\r\n  }\r\n\r\n  end() {\r\n    setTimeout(() => (this._loading = false));\r\n  }\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `T` ç±»å\r\n   */\r\n  /*   get<T>(\r\n    url: string,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>; */\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  get(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  get(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /*   get<T>(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<T>>;\r\n */\r\n  /**\r\n   * GETï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  get(\r\n    url: string,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * GET è¯·æ±\r\n   */\r\n  get(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"GET\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  // #region post\r\n\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  post(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `HttpResponse<JSON>` ç±»å\r\n   */\r\n  post(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /* post<T>(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>;\r\n */\r\n  /**\r\n   * POSTï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  post(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * POST è¯·æ±\r\n   */\r\n  post(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"POST\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          body,\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * DELETEï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  delete(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * DELETEï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  delete(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * DELETEï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  delete(\r\n    url: string,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * DELETE è¯·æ±\r\n   */\r\n  delete(\r\n    url: string,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"DELETE\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * `jsonp` è¯·æ±\r\n   *\r\n   * @param url URLå°å\r\n   * @param params è¯·æ±åæ°\r\n   * @param callbackParam CALLBACKå¼ï¼é»è®¤ï¼JSONP_CALLBACK\r\n   */\r\n  jsonp(\r\n    url: string,\r\n    params?: any,\r\n    callbackParam: string = \"JSONP_CALLBACK\"\r\n  ): Observable<any> {\r\n    return this.http.jsonp(this.appliedUrl(url, params), callbackParam).pipe(\r\n      tap(() => {\r\n        this.end();\r\n      }),\r\n      catchError(res => {\r\n        this.end();\r\n        return throwError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  // #region patch\r\n\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  patch(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `HttpResponse<JSON>` ç±»å\r\n   */\r\n  patch(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /*   patch<T>(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>;\r\n */\r\n  /**\r\n   * PATCHï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  patch(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * PATCH è¯·æ±\r\n   */\r\n  patch(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"PATCH\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          body,\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region put\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `string` ç±»å\r\n   */\r\n  put(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\";\r\n      reportProgress?: boolean;\r\n      responseType: \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<string>;\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `HttpResponse<JSON>` ç±»å\r\n   */\r\n  put(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `JSON` ç±»å\r\n   */\r\n  /*   put<T>(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe: \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"json\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<T>; */\r\n\r\n  /**\r\n   * PUTï¼è¿åä¸ä¸ª `any` ç±»å\r\n   */\r\n  put(\r\n    url: string,\r\n    body?: any,\r\n    params?: any,\r\n    options?: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any>;\r\n\r\n  /**\r\n   * PUT è¯·æ±\r\n   */\r\n  put(\r\n    url: string,\r\n    body: any,\r\n    params: any,\r\n    options: {\r\n      headers?: HttpHeaders | { [header: string]: string | string[] };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      reportProgress?: boolean;\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    return this.request(\r\n      \"PUT\",\r\n      url,\r\n      Object.assign(\r\n        {\r\n          body,\r\n          params\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   * `request` è¯·æ±\r\n   *\r\n   * @param method è¯·æ±æ¹æ³ç±»å\r\n   * @param url URLå°å\r\n   * @param options åæ°\r\n   */\r\n  request<R>(\r\n    method: string,\r\n    url: string,\r\n    options?: {\r\n      body?: any;\r\n      headers?:\r\n        | HttpHeaders\r\n        | {\r\n            [header: string]: string | string[];\r\n          };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      params?:\r\n        | HttpParams\r\n        | {\r\n            [param: string]: string | string[];\r\n          };\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      reportProgress?: boolean;\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<R>;\r\n  /**\r\n   * `request` è¯·æ±\r\n   *\r\n   * @param method è¯·æ±æ¹æ³ç±»å\r\n   * @param url URLå°å\r\n   * @param options åæ°\r\n   */\r\n  request(\r\n    method: string,\r\n    url: string,\r\n    options?: {\r\n      body?: any;\r\n      headers?:\r\n        | HttpHeaders\r\n        | {\r\n            [header: string]: string | string[];\r\n          };\r\n      observe?: \"body\" | \"events\" | \"response\";\r\n      params?:\r\n        | HttpParams\r\n        | {\r\n            [param: string]: string | string[];\r\n          };\r\n      responseType?: \"arraybuffer\" | \"blob\" | \"json\" | \"text\";\r\n      reportProgress?: boolean;\r\n      withCredentials?: boolean;\r\n    }\r\n  ): Observable<any> {\r\n    this.begin();\r\n    if (options) {\r\n      if (options.params) options.params = this.parseParams(options.params);\r\n      if (options.body) {\r\n        // options.body = this.formEncode(options.body)\r\n      }\r\n    }\r\n    return this.http.request(method, url, options).pipe(\r\n      tap(() => {\r\n        this.end();\r\n      }),\r\n      catchError(res => {\r\n        this.end();\r\n        return throwError(res);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Observable, of } from \"rxjs\";\r\nimport { _HttpClient } from \"../net/http.client\"\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class DataService {\r\n  constructor(private _http: _HttpClient) { }\r\n\r\n  //æ ¹æ®Id|å¶ä» è·åç¸å³è¡¨ä¿¡æ¯\r\n  getBusinessTables(url: string, params = {}): Observable<any> {\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  getFormInfo(url: string, params = {}): Observable<any> {\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  //ç³»ç»æ§ä»¶-äººå\r\n  getSysCtrEmployee(params = {}): Observable<any> {\r\n    //let url = \"emptable.json\";\r\n    let url = this.getWebAPIName(\"employee\");\r\n    let result = this._http.get(url, params);\r\n    return result;\r\n  }\r\n\r\n  //ç³»ç»æ§ä»¶-ç»ç»\r\n  getSysCtrOrgTree(params = {}): Observable<any> {\r\n    //let url = \"org-tree.json\";\r\n    let url = this.getWebAPIName(\"organization\");\r\n    return this._http.get(url, params);\r\n  } \r\n\r\n  //ç³»ç»æ§ä»¶-èä½\r\n  getSysCtrPostionTable(params = {}): Observable<any> {\r\n    //let url = \"postiontable.json\";\r\n    let url = this.getWebAPIName(\"postion\");\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  //ç³»ç»æ§ä»¶-å°åº\r\n  getSysCtrArea(params = {}): Observable<any> {\r\n    let url = \"tables.json\";\r\n\r\n    return this._http.get(url, params);\r\n  }\r\n\r\n  //æ å½¢æ°æ®\r\n  getTreeData(params = {}): Observable<any> {\r\n    //let url = \"tree.json\";\r\n    let url = this.getWebAPIName(\"tree\");\r\n    return this._http.get(url, params);\r\n  } \r\n\r\n  getWebAPIName(type: string) {\r\n    let result = \"\";\r\n    let res = localStorage.getItem(\"VXFORM:WEBAPI\");\r\n    if (res != undefined && res != null && res != \"\") {\r\n      let webapi = JSON.parse(res);\r\n      result = webapi[type];\r\n    }\r\n    if (result == undefined || result == null) {\r\n      result = \"\";\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, Guid } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXRadioService {\r\n  constructor() { }\r\n\r\n  /*\r\n    åéé¢\r\n    radio  åéé¢ãæ§å«ãå¹´é¾ãå­¦åãèä¸\r\n\r\n  */ \r\n  create_radio(questionType: any) { \r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"radio\"\r\n    }\r\n    switch (questionType.tag) {\r\n      case \"default\":\r\n        this.createRadio_default(question);\r\n        break;\r\n      case \"gender\":\r\n        this.createRadio_gender(question);\r\n        break;\r\n      case \"age\":\r\n        this.createRadio_age(question);\r\n        break;\r\n      case \"education\":\r\n        this.createRadio_education(question);\r\n        break;\r\n      case \"occupation\":\r\n        this.createRadio_occupation(question);\r\n        break;\r\n      case \"votefont\":\r\n        this.createRadio_votefont(question);\r\n        break;\r\n      default:\r\n        this.createRadio_default(question);\r\n        break;\r\n    } \r\n    return question;\r\n  }\r\n\r\n  //åéé¢\r\n  private createRadio_default(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·éæ©ä¸ä¸ªéé¡¹\", \r\n      required: false, \r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      },\r\n      options: [{\r\n        label: \"éé¡¹1\",\r\n        value: \"1\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"éé¡¹2\",\r\n        value: \"2\",\r\n        score: 0\r\n      }]\r\n    }\r\n  }\r\n\r\n  //æ§å«\r\n  private createRadio_gender(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"æ§å«\", \r\n      required: false, \r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      },\r\n      options: [{\r\n        label: \"ç·\",\r\n        value: \"1\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"å¥³\",\r\n        value: \"2\",\r\n        score: 0\r\n      }]\r\n    }\r\n  }\r\n\r\n  //å¹´é¾\r\n  private createRadio_age(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"æ¨çå¹´é¾æ¯ï¼\", \r\n      required: false, \r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      },\r\n      options: [{\r\n        label: \"18~24å²\",\r\n        value: \"1\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"25~30å²\",\r\n        value: \"2\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"31~40å²\",\r\n        value: \"3\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"41~50å²\",\r\n        value: \"4\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"51~60å²\",\r\n        value: \"5\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"61å²åä»¥ä¸\",\r\n        value: \"6\",\r\n        score: 0\r\n      }]\r\n    }\r\n  }\r\n\r\n  //å­¦å\r\n  private createRadio_education(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"å­¦å\",\r\n      required: false, \r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      },\r\n      options: [{\r\n        label: \"å°å­¦çº§ä»¥ä¸\",\r\n        value: \"1\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"åä¸­\",\r\n        value: \"2\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"é«ä¸­/ä¸­ä¸/ææ ¡\",\r\n        value: \"3\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"å¤§å­¦ä¸ç§\",\r\n        value: \"4\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"å¤§å­¦æ¬ç§\",\r\n        value: \"5\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"ç¡å£«ç ç©¶çåä»¥ä¸\",\r\n        value: \"6\",\r\n        score: 0\r\n      }]\r\n    }\r\n  }\r\n\r\n  //èä¸ \r\n  private createRadio_occupation(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"æ¨ç®åæå¤è¡ä¸æ¯ï¼\",\r\n      required: false, \r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      },\r\n      options: [\r\n        {\r\n          label: \"å¨æ ¡å­¦ç\",\r\n          value: \"1\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"æ¿åº/æºå³å¹²é¨/å¬å¡å\",\r\n          value: \"2\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"ä¼ä¸ç®¡çèï¼åæ¬åºå±åä¸­é«å±ç®¡çèï¼\",\r\n          value: \"3\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"æ®éèåï¼åå¬å®¤/åå­æ¥¼å·¥ä½äººåï¼\",\r\n          value: \"4\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"ä¸ä¸äººåï¼å¦å»ç/å¾å¸/æä½/è®°è/èå¸ç­ï¼\",\r\n          value: \"5\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"æ®éå·¥äººï¼å¦å·¥åå·¥äºº/ä½åå³å¨èç­ï¼\",\r\n          value: \"6\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"åä¸æå¡ä¸èå·¥ï¼å¦éå®äººå/ååºèå/æå¡åç­ï¼\",\r\n          value: \"7\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"ä¸ªä½ç»è¥è/æ¿åå\",\r\n          value: \"8\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"èªç±èä¸è\",\r\n          value: \"9\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"åæç§æ¸å³å¨è\",\r\n          value: \"10\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"éä¼\",\r\n          value: \"11\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"ææ èä¸\",\r\n          value: \"12\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"å¶ä»èä¸äººåï¼è¯·æ³¨æï¼\",\r\n          value: \"13\",\r\n          score: 0\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  //æå­æç¥¨\r\n  private createRadio_votefont(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·ç»ä»¥ä¸éé¡¹æç¥¨\",\r\n      required: false, \r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      },\r\n      options: [{\r\n        label: \"éé¡¹1\",\r\n        value: \"1\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"éé¡¹2\",\r\n        value: \"2\",\r\n        score: 0\r\n      }]\r\n    }\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, Guid } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXCheckboxService {\r\n  constructor() { }\r\n\r\n \r\n  create_checkbox(questionType: any) { \r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"checkbox\"\r\n    }\r\n    switch (questionType.tag) {\r\n      case \"default\":\r\n        this.createCheckbox_default(question);\r\n        break; \r\n      default:\r\n        this.createCheckbox_default(question);\r\n        break;\r\n    }  \r\n    return question;\r\n  }\r\n  \r\n  //å¤éé¢\r\n  private createCheckbox_default(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·éæ©ä»¥ä¸éé¡¹ (å¤é)\", \r\n      required: false,\r\n      setting: { \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\",\r\n        max:2,\r\n        min:0\r\n      },\r\n      options: [{\r\n        label: \"éé¡¹1\",\r\n        value: \"1\",\r\n        score: 0\r\n      },\r\n      {\r\n        label: \"éé¡¹2\",\r\n        value: \"2\",\r\n        score: 0\r\n      }]\r\n    }\r\n  }\r\n\r\n   \r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, Guid } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXInputService {\r\n  constructor() { }\r\n\r\n  /*\r\n    ç´æ¥è¾å¥\r\n    input  å§åãææºãé®ç®±\r\n\r\n  */ \r\n  create_input(questionType: any) {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"input\"\r\n    }\r\n    switch (questionType.tag) {\r\n      case \"default\":\r\n        this.createInput_default(question);\r\n        break;\r\n      case \"name\":\r\n        this.createInput_name(question);\r\n        break;\r\n      case \"mobile\":\r\n        this.createInput_mobile(question);\r\n        break;\r\n      case \"email\":\r\n        this.createInput_email(question);\r\n        break;\r\n      case \"remark\":\r\n          this.createInput_remark(question);\r\n          break;  \r\n      default:\r\n        this.createInput_default(question);\r\n        break;\r\n    }  \r\n    return question;\r\n  } \r\n\r\n  //é»è®¤\r\n  private createInput_default(question: VXFormFieldConfig) {\r\n    question.templateOptions={\r\n        type:\"default\",\r\n        label: \"è¯·å¡«åæ¬é¡¹åå®¹\",\r\n        required: false,\r\n        setting: { \r\n          size: \"small\", \r\n          minLength: 0, \r\n          maxLength: 200\r\n        }\r\n      } \r\n    return question;\r\n  }\r\n\r\n  //å§å\r\n  private createInput_name(question: VXFormFieldConfig) {\r\n    question.templateOptions={\r\n        type:\"default\",\r\n        label: \"è¯·å¡«åå§å\",\r\n        required: false,\r\n        setting: { \r\n          size: \"small\", \r\n          minLength: 0, \r\n          maxLength: 200\r\n        }\r\n      } \r\n    return question;\r\n  }\r\n\r\n  //é®ç®±\r\n  private createInput_email(question: VXFormFieldConfig) {\r\n    question.templateOptions={\r\n        type:\"email\",\r\n        label: \"è¯·å¡«åé®ç®±\",\r\n        required: false,\r\n        setting: { \r\n          size: \"small\", \r\n          minLength: 0, \r\n          maxLength: 200\r\n        }\r\n      } \r\n    return question;\r\n  }\r\n\r\n  //ææº\r\n  private createInput_mobile(question: VXFormFieldConfig) {\r\n    question.templateOptions={\r\n        type:\"mobile\",\r\n        label: \"è¯·å¡«åææºå·ç \",\r\n        required: false,\r\n        setting: { \r\n          size: \"small\", \r\n          minLength: 0, \r\n          maxLength: 200\r\n        }\r\n      } \r\n    return question;\r\n  }\r\n\r\n    //å¤è¡ææ¬\r\n    private createInput_remark(question: VXFormFieldConfig) {\r\n      question.templateOptions={\r\n          type:\"default\",\r\n          label: \"è¯·å¡«åæ¬é¡¹åå®¹\",\r\n          required: false,\r\n          setting: { \r\n            size: \"large\", \r\n            minLength: 0, \r\n            maxLength: 200\r\n          }\r\n        } \r\n      return question;\r\n    }\r\n \r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, Guid } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXCascaderService {\r\n  constructor() { }\r\n\r\n  /*\r\n    çº§èéæ©\r\n    cascader  çº§è ãä¸ä¸ãé¢æ ¡ãè¡ä¸\r\n\r\n  */ \r\n  create_cascader(questionType: any) { \r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"cascader\"\r\n    }\r\n    switch (questionType.tag) {\r\n      case \"default\":\r\n        this.createCascader_default(question);\r\n        break;\r\n      case \"major\":\r\n        this.createCascader_major(question);\r\n        break;\r\n      case \"industry\":\r\n        this.createCascader_industry(question);\r\n        break;\r\n      case \"university\":\r\n        this.createCascader_university(question);\r\n        break; \r\n      default:\r\n        this.createCascader_default(question);\r\n        break;\r\n    }\r\n    return question;\r\n  }\r\n\r\n  //çº§è\r\n  private createCascader_default(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·éæ©ä»¥ä¸éé¡¹\",\r\n      options: [\r\n        {\r\n          label:\"è¯·éæ©\",\r\n          value:\"-1\"\r\n        },\r\n        {\r\n          label:\"éé¡¹1\",\r\n          value:\"1\",\r\n          children:[\r\n            {\r\n              label:\"éé¡¹1-1\",\r\n              value:\"1-1\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label:\"éé¡¹2\",\r\n          value:\"2\",\r\n          children:[\r\n            {\r\n              label:\"éé¡¹2-1\",\r\n              value:\"2-1\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  } \r\n\r\n  //ä¸ä¸\r\n  private createCascader_major(question: VXFormFieldConfig) {\r\n    question.templateOptions={\r\n        label: \"æ¨å¤§å­¦æå­¦ä¸ä¸æ¯ï¼\",\r\n        options: [ \r\n          {\r\n            label:\"éé¡¹1\",\r\n            value:\"1\",\r\n            children:[\r\n              {\r\n                label:\"éé¡¹1-1\",\r\n                value:\"1-1\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            label:\"éé¡¹2\",\r\n            value:\"2\",\r\n            children:[\r\n              {\r\n                label:\"éé¡¹2-1\",\r\n                value:\"2-1\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n    } \r\n    return question;\r\n  }\r\n\r\n  //è¡ä¸\r\n  private createCascader_industry(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n        label: \"æ¨ç®åæå¤è¡ä¸æ¯ï¼\",\r\n        options: [ \r\n          {\r\n            label:\"éé¡¹1\",\r\n            value:\"1\",\r\n            children:[\r\n              {\r\n                label:\"éé¡¹1-1\",\r\n                value:\"1-1\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            label:\"éé¡¹2\",\r\n            value:\"2\",\r\n            children:[\r\n              {\r\n                label:\"éé¡¹2-1\",\r\n                value:\"2-1\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      } \r\n    return question; \r\n  } \r\n\r\n  //é¢æ ¡\r\n  private createCascader_university(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n        label: \"æ¨æå°±è¯»çå­¦æ ¡æ¯ï¼\",\r\n        options: [ \r\n          {\r\n            label:\"éé¡¹1\",\r\n            value:\"1\",\r\n            children:[\r\n              {\r\n                label:\"éé¡¹1-1\",\r\n                value:\"1-1\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            label:\"éé¡¹2\",\r\n            value:\"2\",\r\n            children:[\r\n              {\r\n                label:\"éé¡¹2-1\",\r\n                value:\"2-1\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      } \r\n    return question; \r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, Guid } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXOtherService {\r\n  constructor() { }\r\n\r\n  \r\n   //åå²çº¿\r\n   create_line() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"line\",\r\n      templateOptions: {\r\n        label: \"åå²çº¿\"\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //å¤æ³¨è¯´æ\r\n  create_remark() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"remark\",\r\n      templateOptions: {\r\n        label: \"è¯·éè¯»æ¬é¡¹è¯´æï¼ç¶ååç­é®é¢\" \r\n      }\r\n    };\r\n    return question;\r\n  }\r\n \r\n   //æ¥æ\r\n   create_date() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"date\",\r\n      templateOptions: {\r\n        label: \"æ¥æ\",\r\n        required: false\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //æ¶é´\r\n  create_time() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"time\",\r\n      templateOptions: {\r\n        label: \"æ¶é´\",\r\n        required: false\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //æåé¢\r\n  create_score() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"score\",\r\n      templateOptions: {\r\n        type:\"start\",\r\n        label: \"è¯·ç»æ¬é¡¹æå\",\r\n        setting:{\r\n          label:\"\", \r\n          score: 0,   \r\n          min: 0, \r\n          max: 5\r\n        }\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //ä¸æé¢\r\n  create_dropdown() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"dropdown\",\r\n      templateOptions: { \r\n        label: \"è¯·éæ©ä¸ä¸ªé\",\r\n        setting:{\r\n          score: 0\r\n        },\r\n        options: [{\r\n          label: \"éé¡¹1\",\r\n          value: \"1\",\r\n          score: 0\r\n        },\r\n        {\r\n          label: \"éé¡¹2\",\r\n          value: \"2\",\r\n          score: 0\r\n        }]\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  \r\n  //NPSé¢\r\n  create_nps() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"nps\",\r\n      templateOptions: { \r\n        label: \"æ¨åæåæåäºæ¨èæä»¬çå¯è½æ§æå¤å¤§ï¼\",\r\n        required: false,\r\n        options: [{\r\n          label: \"0\",\r\n          value: \"0\"\r\n        },\r\n        {\r\n          label: \"1\",\r\n          value: \"1\"\r\n        },\r\n        {\r\n          label: \"2\",\r\n          value: \"2\"\r\n        },\r\n        {\r\n          label: \"3\",\r\n          value: \"3\"\r\n        },\r\n        {\r\n          label: \"4\",\r\n          value: \"4\"\r\n        },\r\n        {\r\n          label: \"5\",\r\n          value: \"5\"\r\n        },\r\n        {\r\n          label: \"6\",\r\n          value: \"6\"\r\n        },\r\n        {\r\n          label: \"7\",\r\n          value: \"7\"\r\n        },\r\n        {\r\n          label: \"8\",\r\n          value: \"8\"\r\n        },\r\n        {\r\n          label: \"9\",\r\n          value: \"9\"\r\n        },\r\n        {\r\n          label: \"10\",\r\n          value: \"10\"\r\n        }]\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //æ¯éé¢\r\n  create_proportion() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"proportion\",\r\n      templateOptions: { \r\n        label: \"è¯·éæ©ä¸ä¸ªé\",\r\n        layout: \"row1\",\r\n        order: false,\r\n        score: 0,\r\n        required: false,\r\n        options: [{\r\n          label: \"éé¡¹1\",\r\n          value: \"1\",\r\n          score: 0,\r\n          input: false\r\n        },\r\n        {\r\n          label: \"éé¡¹2\",\r\n          value: \"2\",\r\n          score: 0,\r\n          input: false\r\n        }]\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //è¯ä»·é¢\r\n  create_evaluation() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"evaluation\",\r\n      templateOptions: { \r\n        label: \"è¯·éæ©ä¸ä¸ªé\",\r\n        required: false,\r\n        setting:{ \r\n          score: 0 \r\n        },\r\n        options: [{\r\n          label: \"éå¸¸ä¸æ»¡æ\",\r\n          value: \"1\",\r\n          tag:\"æåº¦å·æ·¡\\næ¨éå¤\\nææ¯å·®\"\r\n        },\r\n        {\r\n          label: \"æ¯è¾ä¸æ»¡æ\",\r\n          value: \"2\",\r\n          tag:\"éåº¦æ¢\\nä»ªè¡¨ä¹±\\nä¸ä¸ä¸\"\r\n        },\r\n        {\r\n          label: \"ä¸è¬\",\r\n          value: \"3\",\r\n          tag:\"æ äºå¨\\nä¸ç§¯æ\\nä¸å¡ä¸ç²¾\"\r\n        },\r\n        {\r\n          label: \"æ¯è¾æ»¡æ\",\r\n          value: \"4\",\r\n          tag:\"ææç¤¼è²\\néåº¦å¿«\\nè¾ä¸ä¸\"\r\n        },\r\n        {\r\n          label: \"éå¸¸æ»¡æ\",\r\n          value: \"5\",\r\n          tag:\"ç­æå¥½å®¢\\næ¬ä¸ç²¾ç¥\\næè½ä¸ä¸\"\r\n        },]\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n\r\n  //å¤é¡¹å¡«ç©º\r\n  create_inputGroup() {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: \"input_group\",\r\n      templateOptions: { \r\n        label: \"è¯·å¡«åä»¥ä¸åå®¹\", \r\n        required: false,\r\n        options: [{\r\n          label: \"å¡«ç©º1\",\r\n          value: \"1\"\r\n        },\r\n        {\r\n          label: \"å¡«ç©º2\",\r\n          value: \"2\"\r\n        }]\r\n      }\r\n    };\r\n    return question;\r\n  }\r\n  \r\n}\r\n","import { Injectable, EventEmitter } from \"@angular/core\";\r\nimport { VXTableFieldConfig, VXFormFieldConfig, Guid } from \"@vx-form/core\";\r\n\r\n@Injectable()\r\nexport class VXMatrixService {\r\n  constructor() { }\r\n\r\n  /*\r\n     ç©éµ\r\n  */\r\n  create_matrix(questionType: any) {\r\n    let question: VXFormFieldConfig = {\r\n      status: 1,\r\n      key: Guid.create()[\"value\"],\r\n      type: questionType.type\r\n    }\r\n    switch (questionType.type) {\r\n      case \"matrix_radio\":\r\n        this.createMatrix_radio(question);\r\n        break;\r\n      case \"matrix_checkbox\":\r\n        this.createMatrix_radio(question);\r\n        break;\r\n      case \"matrix_score\":\r\n        this.createMatrix_score(question);\r\n        break;\r\n      case \"matrix_input\":\r\n        this.createMatrix_input(question);\r\n        break;\r\n      default:\r\n        question.type = \"matrix_radio\";\r\n        this.createMatrix_radio(question);\r\n        break;\r\n    } \r\n    return question;\r\n  }\r\n\r\n  //ç©éµåé\r\n  private createMatrix_radio(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·éæ©ä»¥ä¸éé¡¹\",\r\n      required: false,\r\n      subtitle: [{\r\n        label: \"ç©éµè¡1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        label: \"ç©éµè¡2\",\r\n        value: \"2\",\r\n      }],\r\n      options: [{\r\n        label: \"éé¡¹1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        label: \"éé¡¹2\",\r\n        value: \"2\"\r\n      }]\r\n    }\r\n    return question;\r\n  }\r\n\r\n  //ç©éµæå\r\n  private createMatrix_score(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·ç»ä»¥ä¸åé¡¹æå\", \r\n      required: false,\r\n      subtitle: [{\r\n        label: \"ç©éµè¡1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        label: \"ç©éµè¡2\",\r\n        value: \"2\",\r\n      }],\r\n      options: [{\r\n        label: \"æå1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        label: \"æå1\",\r\n        value: \"2\"\r\n      }]\r\n    }\r\n    return question;\r\n  }\r\n\r\n  //ç©éµå¡«ç©º\r\n  private createMatrix_input(question: VXFormFieldConfig) {\r\n    question.templateOptions = {\r\n      label: \"è¯·å¡«åä»¥ä¸åå®¹\", \r\n      required: false,\r\n      subtitle: [{\r\n        label: \"ç©éµè¡1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        label: \"ç©éµè¡2\",\r\n        value: \"2\",\r\n      }], \r\n      options: [{\r\n        label: \"å¡«ç©º1\",\r\n        value: \"1\"\r\n      },\r\n      {\r\n        label: \"å¡«ç©º1\",\r\n        value: \"2\"\r\n      }]\r\n    }\r\n    return question;\r\n  }\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  VXTableFieldConfig,\r\n  VXFormFieldConfig,\r\n  Guid,\r\n  clone\r\n} from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport { VXRadioService } from './radio_Service';\r\nimport { VXCheckboxService } from './checkbox_Service';\r\nimport { VXInputService } from './input_Service';\r\nimport { VXCascaderService } from './cascader_Service';\r\nimport { VXOtherService } from './other_Service';\r\nimport { VXMatrixService } from './matrix_Service';\r\n\r\n@Injectable()\r\nexport class VXTransferService {\r\n  constructor(\r\n    private vxRadioService: VXRadioService,\r\n    private vxCheckboxService: VXCheckboxService,\r\n    private vxInputService: VXInputService,\r\n    private vxCascaderService: VXCascaderService,\r\n    private vxOtherService: VXOtherService,\r\n    private vxMatrixService: VXMatrixService\r\n  ) { }\r\n\r\n  transferQuestionByType(questionType: any, form_fields: VXFormFieldConfig[], currentIndex: number) {\r\n\r\n    if (questionType != undefined && questionType != null && questionType.type != undefined && questionType.type != null) {\r\n      let obj: VXFormFieldConfig = this.initQuestion(questionType);\r\n      if (currentIndex > -1) {\r\n        form_fields.splice(currentIndex, 0, obj);\r\n      } else {\r\n        form_fields.push(obj);\r\n      }\r\n    }\r\n  }\r\n\r\n  private initQuestion(questionType: any) {\r\n    let question: VXFormFieldConfig = {};\r\n    switch (questionType.type) {\r\n      case \"radio\":\r\n        question = this.vxRadioService.create_radio(questionType);\r\n        break;\r\n\r\n      case \"checkbox\":\r\n        question = this.vxCheckboxService.create_checkbox(questionType);\r\n        break;\r\n\r\n      case \"cascader\":\r\n        question = this.vxCascaderService.create_cascader(questionType);\r\n        break;\r\n\r\n      case \"input\":\r\n        question = this.vxInputService.create_input(questionType);\r\n        break;\r\n\r\n      case \"line\":\r\n        question = this.vxOtherService.create_line();\r\n        break;\r\n\r\n      case \"remark\":\r\n        question = this.vxOtherService.create_remark();\r\n        break;\r\n\r\n      case \"date\":\r\n        question = this.vxOtherService.create_date();\r\n        break;\r\n\r\n      case \"time\":\r\n        question = this.vxOtherService.create_time();\r\n        break;\r\n\r\n      case \"dropdown\":\r\n        question = this.vxOtherService.create_dropdown();\r\n        break;\r\n\r\n      case \"score\":\r\n        question = this.vxOtherService.create_score();\r\n        break;\r\n\r\n      case \"nps\":\r\n        question = this.vxOtherService.create_nps();\r\n        break;\r\n\r\n      case \"proportion\":\r\n        question = this.vxOtherService.create_proportion();\r\n        break;\r\n\r\n      case \"evaluation\":\r\n        question = this.vxOtherService.create_evaluation();\r\n        break;\r\n\r\n      case \"matrix_radio\": \r\n      case \"matrix_checkbox\":\r\n      case \"matrix_score\":\r\n      case \"matrix_input\":\r\n        question = this.vxMatrixService.create_matrix(questionType);\r\n        break;\r\n\r\n      case \"input_group\":\r\n          question = this.vxOtherService.create_inputGroup();\r\n      break;\r\n\r\n    }\r\n    return question;\r\n  }\r\n\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXTableFieldConfig,\r\n  VXSurveyInfo,\r\n  VXSurveyPage,\r\n  clone,\r\n  VXTableConfig,\r\n  VXFormCommonService\r\n} from \"@vx-form/core\";\r\nimport { NzModalService } from \"ng-zorro-antd/modal\";\r\nimport { NzMessageService } from \"ng-zorro-antd/message\";\r\nimport * as _ from \"lodash\";\r\nimport { VXFormAntService } from \"../../tools/service\";\r\nimport {\r\n  FormLayout,\r\n  LayoutPanel,\r\n  LayoutColumn,\r\n  VXTableBusiness,\r\n  ICheckedField,\r\n  IBusinessTable,\r\n  Itable,\r\n  IDesignFormAPI\r\n} from \"../../tools/util\";\r\nimport {\r\n  CdkDragDrop,\r\n  moveItemInArray,\r\n  transferArrayItem\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { VXDialogService } from \"../../service/dialog.service\";\r\nimport { DataService } from \"../../service/data.service\";\r\nimport { VXTransferService } from \"../../tools/transferService\";\r\nimport { group } from \"@angular/animations\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { Guid } from \"@vx-form/core\";\r\nimport { NzTreeHigherOrderServiceToken } from \"ng-zorro-antd\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-design-detail\",\r\n  templateUrl: \"./detail.component.html\",\r\n  styleUrls: [\"./detail.component.less\"],\r\n  providers: [DataService, VXTransferService]\r\n})\r\nexport class VXSurveyDesignDetail implements OnInit, OnChanges, OnDestroy {\r\n  @Input() formCode: string = \"\";\r\n  @Input() api: IDesignFormAPI = {\r\n    form: { url: \"assets/mockData/survey.json\" }\r\n  };\r\n  @Output() saveEvent: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() cancelEvent: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() previewEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  pageStatus: number = 1;\r\n\r\n  form_model: any = {};\r\n  form_group = new FormGroup({});\r\n  form_fields: VXFormFieldConfig[] = [];\r\n\r\n  vxSurveyInfo: VXSurveyInfo = {\r\n    code: \"\",\r\n    name: \"\",\r\n    first: {\r\n      title: \"\",\r\n      text: \"\"\r\n    },\r\n    last: {\r\n      title: \"\",\r\n      text: \"\"\r\n    },\r\n    pages: [\r\n      {\r\n        code: \"page1\",\r\n        name: \"ç¬¬1é¡µ\",\r\n        questions: []\r\n      }\r\n    ]\r\n  };\r\n  show_setting = false;\r\n  questionField: VXFormFieldConfig = {};\r\n  pageSelectedIndex: number = 0;\r\n  constructor(\r\n    private message: NzMessageService,\r\n    private modalService: NzModalService,\r\n    private vxFormAntService: VXFormAntService,\r\n    public vxDialogService: VXDialogService,\r\n    public dataService: DataService,\r\n    public vxTransferService: VXTransferService,\r\n    public vxFormCommonService: VXFormCommonService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.vxFormAntService.questionEvent.subscribe((res: any) => {\r\n      this.questionOperational(res);\r\n    });\r\n\r\n    this.vxFormAntService.optionEvent.subscribe((res: any) => {\r\n      this.optionOperational(res);\r\n    });\r\n\r\n    this.vxFormAntService.dragDropEvent.subscribe((res: any) => {\r\n      this.addQuestionDragDrop(res);\r\n    });\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.formCode) {\r\n      this.initFormInfo();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n  /*æé®åºå---begin*/\r\n\r\n  saveSurvey() {\r\n    let objSurvey = clone(this.vxSurveyInfo);\r\n    objSurvey.pages.forEach((item: any) => {\r\n      this.vxFormCommonService.initFormFieldProperty(item.questions);\r\n    })\r\n    this.saveEvent.emit(JSON.stringify(objSurvey));\r\n  }\r\n\r\n\r\n  initFormInfo() {\r\n    this.dataService.getFormInfo(this.api.form.url, { formcode: this.formCode }).subscribe(res => {\r\n      this.vxSurveyInfo = {\r\n        code: res.code,\r\n        name: res.name,\r\n        type: res.type,\r\n        first: res.first,\r\n        last: res.last,\r\n        pages: res.pages\r\n      };\r\n      if (this.vxSurveyInfo.pages != undefined && (this.vxSurveyInfo.pages == null || this.vxSurveyInfo.pages.length == 0)) {\r\n        this.vxSurveyInfo.pages.push({\r\n          \"code\": \"pageCode1\",\r\n          \"name\": \"ç¬¬1é¡µ\",\r\n          \"questions\": []\r\n        })\r\n      }\r\n      this.getQuestionListByPageIndex(0);\r\n    });\r\n  }\r\n\r\n  pageClick(e: number) {\r\n    // if (this.vxSurveyInfo.pages != undefined) {\r\n    //   if (e == 0 || this.vxSurveyInfo.pages.length == e - 1) {\r\n    //     this.show_setting = false;\r\n    //   }\r\n    //   else {\r\n    //     if (e > 0) {\r\n    //       this.getQuestionListByPageIndex(e - 1);\r\n    //     }\r\n    //   }\r\n    // }\r\n    this.getQuestionListByPageIndex(e);\r\n  }\r\n\r\n  addPage() {\r\n    if (this.vxSurveyInfo.pages != undefined) {\r\n      let newPage = {\r\n        code: `pagecode_${this.vxSurveyInfo.pages.length + 1}`,\r\n        name: `ç¬¬${this.vxSurveyInfo.pages.length + 1}é¡µ`,\r\n        questions: []\r\n      }\r\n      this.vxSurveyInfo.pages.push(newPage);\r\n    }\r\n  }\r\n\r\n  deletePage(index: number) {\r\n    if (this.vxSurveyInfo.pages != undefined) {\r\n      this.vxSurveyInfo.pages.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getQuestionListByPageIndex(pageIndex: number) {\r\n    if (this.vxSurveyInfo.pages != undefined && this.vxSurveyInfo.pages.length > 0 && this.vxSurveyInfo.pages[pageIndex].questions != undefined) {\r\n      this.form_fields = [{\r\n        \"type\": \"drag-drop\",\r\n        \"key\": \"drag-droplist\",\r\n        \"fieldGroup\": this.vxSurveyInfo.pages[pageIndex].questions\r\n      }]\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //é¢ç®\r\n  questionOperational(res: any) {\r\n    let resType: any = res[\"sign\"];\r\n    let resField: any = res[\"field\"];\r\n    let rQuestion: any;\r\n    let rIndex: any;\r\n    this.formFieldGroup.forEach((item: any, index: any, object: any) => {\r\n      item.active = false;\r\n      if (item.key == resField.key) {\r\n        item.active = true;\r\n        rQuestion = item;\r\n        rIndex = index;\r\n      }\r\n    });\r\n\r\n    switch (resType) {\r\n      case \"active\":\r\n        this.questionField = rQuestion;\r\n        this.show_setting = true;\r\n        break;\r\n      case \"logic\":\r\n        this.message.success(\"é»è¾è®¾ç½®\")\r\n        break;\r\n      case \"copy\":\r\n        let copyQuestion = _.cloneDeep(rQuestion);\r\n        copyQuestion.key = Guid.create()[\"value\"];\r\n        copyQuestion.active = false;\r\n        this.formFieldGroup.splice(rIndex + 1, 0, copyQuestion);\r\n        this.message.success(\"æ·è´é¢ç®\")\r\n        break;\r\n      case \"delete\":\r\n        this.formFieldGroup.splice(rIndex, 1)\r\n        this.message.success(\"å é¤é¢ç®\");\r\n        this.questionField = {};\r\n        this.show_setting = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  //é¢ç®éé¡¹\r\n  optionOperational(res: any) {\r\n    let resType: any = res[\"sign\"];\r\n    let resOption: any = res[\"option\"];\r\n    let resField: any = res[\"field\"];\r\n    let rQuestion: any;\r\n    let rIndex: any;\r\n    this.formFieldGroup.forEach((item: any, index: any, object: any) => {\r\n      item.active = false;\r\n      rIndex = index;\r\n      if (item.key == resField.key) {\r\n        item.active = true;\r\n        rQuestion = item;\r\n      }\r\n    });\r\n    switch (resType) {\r\n      case \"add\":\r\n        resField.templateOptions.options.push({\r\n          \"label\": \"éé¡¹\",\r\n          \"value\": Guid.create()[\"value\"],\r\n          \"score\": 0,\r\n          \"input\": false\r\n        });\r\n        this.message.success(\"æ·»å éé¡¹\")\r\n        break;\r\n      case \"adds\":\r\n        this.message.success(\"æ¹éæ·»å \")\r\n        break;\r\n      case \"delete\":\r\n        resField.templateOptions.options.forEach((item: any, index: any, object: any) => {\r\n          if (item.value == resOption.value) {\r\n            object.splice(index, 1);\r\n          }\r\n        });\r\n        this.message.success(\"å é¤éé¡¹\")\r\n        break;\r\n\r\n      case \"subtitle\":\r\n        resField.templateOptions.subtitle.push({\r\n          \"label\": \"ç©éµè¡\",\r\n          \"value\": Guid.create()[\"value\"]\r\n        });\r\n        this.message.success(\"æ·»å ç©éµè¡\")\r\n        break;\r\n    }\r\n  }\r\n\r\n  //æ·»å é¢ç®\r\n  addQuestionType(data: any, index: any = -1) {\r\n    this.vxTransferService.transferQuestionByType(data, this.formFieldGroup, index);\r\n  }\r\n\r\n  //ææ½æ·»å é¢ç®\r\n  addQuestionDragDrop(res: any) {\r\n    let data = res[\"previousData\"][res[\"previousIndex\"]];\r\n    this.vxTransferService.transferQuestionByType(data, this.formFieldGroup, res[\"currentIndex\"])\r\n  }\r\n\r\n  get formFieldGroup() {\r\n    let result: any[] = [];\r\n    if (this.form_fields != null && this.form_fields.length > 0 && this.form_fields[0].fieldGroup != undefined) {\r\n      result = this.form_fields[0].fieldGroup;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\nimport { ITreeData, ICheckedTree } from \"../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vx-question-type\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXQuestionType implements OnInit, OnChanges {\r\n  \r\n  @Output() questionTypeEvent = new EventEmitter<any>();\r\n  @Output() addPageEvent = new EventEmitter<any>();\r\n  @Output() saveSurveyEvent = new EventEmitter<any>();\r\n\r\n  questionTypeList:any=[\r\n    {\r\n      label:\"éæ©é¢\",\r\n      child:[ \r\n        {\r\n          type:\"radio\",\r\n          label:\"å é é¢\",\r\n          tag:\"default\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"checkbox\",\r\n          label:\"å¤ é é¢\",\r\n          show:true\r\n        },\r\n        // {\r\n        //   type:\"select_image\",\r\n        //   label:\"å¾çéæ©\"\r\n        // },\r\n        // {\r\n        //   type:\"select_voteimage\",\r\n        //   label:\"å¾çæç¥¨\"\r\n        // },\r\n        {\r\n          type:\"radio\",\r\n          label:\"æå­æç¥¨\",\r\n          tag:\"votefont\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"dropdown\",\r\n          label:\"ä¸ æ é¢\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"cascader\",\r\n          label:\"çº§ è é¢\",\r\n          tag:\"default\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"scaler\",\r\n          label:\"é è¡¨ é¢\",\r\n          tag:\"default\"\r\n        },\r\n        // {\r\n        //   type:\"select_classification\",\r\n        //   label:\"å ç±» é¢\"\r\n        // }\r\n      ]\r\n    },\r\n    {\r\n      label:\"å¡«ç©ºé¢\",\r\n      child:[\r\n        {\r\n          type:\"input\",\r\n          label:\"å¡« ç©º é¢\",\r\n          tag:\"default\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"input_group\",\r\n          label:\"å¤é¡¹å¡«ç©º\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"input\",\r\n          label:\"å¤è¡ææ¬\",\r\n          tag:\"remark\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"blank_horizontal\",\r\n          label:\"æ¨ªåå¡«ç©º\"\r\n        },\r\n        {\r\n          type:\"blank_table\",\r\n          label:\"èªå¨è¡¨æ ¼\"\r\n        }\r\n      ]\r\n    }, \r\n    {\r\n      label:\"æåæåº\",\r\n      child:[\r\n        {\r\n          type:\"score\",\r\n          label:\"æ å é¢\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"evaluation\",\r\n          label:\"è¯ ä»· é¢\",\r\n          show:true \r\n        },\r\n        {\r\n          type:\"score_sort\",\r\n          label:\"æ åº é¢\"\r\n        },\r\n        {\r\n          type:\"nps\",\r\n          label:\"NPS é¢\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"proportion\",\r\n          label:\"æ¯ é é¢\",\r\n          show:false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label:\"å¤æ³¨è¯´æ\",\r\n      child:[\r\n        {\r\n          type:\"line\",\r\n          label:\"å å² çº¿\",\r\n          show:true\r\n        }, \r\n        {\r\n          type:\"remark\",\r\n          label:\"å¤æ³¨è¯´æ\",\r\n          show:true\r\n        }, \r\n        {\r\n          type:\"other_upload\",\r\n          label:\"æä»¶ä¸ä¼ \"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label:\"ä¸ªäººä¿¡æ¯\",\r\n      child:[\r\n        {\r\n          type:\"input\",\r\n          label:\"å§ å\",\r\n          tag:\"name\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"input\",\r\n          label:\"æ æº\",\r\n          tag:\"mobile\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"input\",\r\n          label:\"é® ç®±\",\r\n          tag:\"email\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"radio\",\r\n          label:\"æ§ å«\",\r\n          tag:\"gender\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"date\",\r\n          label:\"æ¥ æ\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"time\",\r\n          label:\"æ¶ é´\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"radio\",\r\n          label:\"å¹´ é¾\",\r\n          tag:\"age\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"radio\",\r\n          label:\"å­¦ å\",\r\n          tag:\"education\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"cascader\",\r\n          label:\"ä¸ ä¸\", \r\n          tag:\"major\",\r\n          show:true\r\n        },\r\n        { \r\n          type:\"cascader\",\r\n          label:\"é¢ æ ¡\",\r\n          tag:\"university\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"cascader\",\r\n          label:\"è¡ ä¸\",\r\n          tag:\"industry\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"radio\",\r\n          label:\"è ä¸\",\r\n          tag:\"occupation\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"emp_address\",\r\n          label:\"åå¸å°å\"\r\n        },\r\n        {\r\n          type:\"emp_geography\",\r\n          label:\"å°çä½ç½®\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label:\"å¶ä»é¢å\",\r\n      child:[ \r\n        {\r\n          type:\"matrix_radio\",\r\n          label:\"ç©éµåé\", \r\n          show:true\r\n        },\r\n        {\r\n          type:\"matrix_checkbox\",\r\n          label:\"ç©éµå¤é\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"matrix_score\",\r\n          label:\"ç©éµæå\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"matrix_input\",\r\n          label:\"ç©éµå¡«ç©º\",\r\n          show:true\r\n        },\r\n        {\r\n          type:\"matrix_scale\",\r\n          label:\"ç©éµéè¡¨\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n  \r\n\r\n  constructor(public dataService: DataService) {}\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n     \r\n  }\r\n \r\n  addQuestionType(type:any){\r\n    this.questionTypeEvent.emit(type);\r\n  } \r\n\r\n  addPage(){\r\n    this.addPageEvent.emit();\r\n  }\r\n  \r\n  saveSurvey(){\r\n    this.saveSurveyEvent.emit();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig, VXSurveyInfo } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\nimport { ITreeData, ICheckedTree } from \"../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vx-question-list\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXQuestionList implements OnInit, OnChanges {\r\n  @Input() vxSurveyInfo: VXSurveyInfo = {};\r\n  @Output() questionTypeEvent = new EventEmitter<any>();\r\n  @Output() addPageEvent = new EventEmitter<any>();\r\n\r\n\r\n\r\n  constructor(public dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n  }\r\n\r\n  dropQuestion(event: CdkDragDrop<string[]>) { \r\n    if (_.get(event, \"container.data.questions\")) {\r\n      if (event.previousContainer === event.container) {\r\n        moveItemInArray(_.get(event, \"container.data.questions\"), event.previousIndex, event.currentIndex);\r\n      } else {\r\n        if (_.get(event, \"previousContainer.data.questions\")) {\r\n          transferArrayItem( \r\n            _.get(event, \"previousContainer.data.questions\"),\r\n            _.get(event, \"container.data.questions\"),\r\n            event.previousIndex,\r\n            event.currentIndex);\r\n        }\r\n      }\r\n    } \r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-cascader\",\r\n  template: ` \r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div>\r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>{{field|json}}\r\n      </div>    \r\n    </div>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingCascader implements OnInit, OnChanges {\r\n\r\n  questionField:any = { \r\n    key: \"\",\r\n    type: \"cascader\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      required: false\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() {\r\n   this.questionField = { \r\n      key: \"\",\r\n      type: \"cascader\",\r\n      templateOptions: {\r\n        label: \"\",\r\n        required: false\r\n      }\r\n    };\r\n   }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-checkbox\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div  class=\"item\">\r\n          <span>å¸å±</span>\r\n          <nz-radio-group [nzSize]=\"'small'\" [(ngModel)]=\"questionField['templateOptions']['setting']['layout']\">\r\n              <label nz-radio-button nzValue=\"1\">åå</label>\r\n              <label nz-radio-button nzValue=\"2\">2å</label>\r\n              <label nz-radio-button nzValue=\"3\">3å</label>\r\n            </nz-radio-group>\r\n      </div>\r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div  class=\"item\">\r\n          <span>éæºæå</span> \r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['setting']['random']\"></nz-switch>\r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div> \r\n      <div class=\"item\">\r\n          <span>é¢ç®æ»åæ°</span> \r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['setting']['score']\"></nz-input-number>\r\n      </div>\r\n      <div  class=\"item\">\r\n          <span>æå°å¯é</span> \r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['setting']['min']\"></nz-input-number>\r\n      </div>\r\n      <div  class=\"item\">\r\n          <span>æå¤å¯é</span> \r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\"  [(ngModel)]=\"questionField.templateOptions['setting']['max']\"></nz-input-number>\r\n      </div>  \r\n    </div> \r\n    <div class=\"setting_wrap_option\"> \r\n      <div class=\"title\">éé¡¹è®¾ç½®</div>\r\n      <ng-container *ngFor=\"let item of questionField.templateOptions['options']\">\r\n      <div class=\"item q_title\">\r\n          <span>{{item.label}}</span>\r\n      </div>\r\n      <div class=\"item q_sore\">\r\n          <span>éé¡¹åæ°</span>\r\n          <span>å</span>\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"item['score']\"></nz-input-number>\r\n      </div> \r\n      </ng-container>\r\n    </div>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingCheckBox implements OnInit, OnChanges { \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"checkbox\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false,\r\n      setting:{ \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\", \r\n        min: 0, //æå°éNé¡¹\r\n        max: 0, //æå¤éNé¡¹ \r\n      }, \r\n      options: []\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-dropdown\",\r\n  template: `\r\n  <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>\r\n      <div  class=\"item\">\r\n          <span>é¢ç®æ»åæ°</span> \r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['setting']['score']\"></nz-input-number>\r\n      </div>  \r\n    </div> \r\n    <div class=\"setting_wrap_option\"> \r\n      <div class=\"title\">éé¡¹è®¾ç½®</div>\r\n      <ng-container *ngFor=\"let item of questionField.templateOptions['options']\">\r\n      <div class=\"item q_title\">\r\n          <span>{{item.label}}</span>\r\n      </div>\r\n      <div class=\"item q_sore\">\r\n          <span>éé¡¹åæ°</span>\r\n          <span>å</span>\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" style=\"width: 40px;\"  [(ngModel)]=\"item['score']\"></nz-input-number>\r\n      </div> \r\n      </ng-container>\r\n    </div>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingDropdown implements OnInit, OnChanges { \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"dropdown\",\r\n    templateOptions: {\r\n      label: \"\",  \r\n      setting:{ \r\n        score: 0\r\n      }, \r\n      options: []\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-input\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div>\r\n      <div class=\"item\">\r\n          <span>è¾å¥æ¡å¤§å°</span>\r\n          <nz-radio-group [nzSize]=\"'small'\" [(ngModel)]=\"questionField['templateOptions']['setting']['size']\">\r\n              <label nz-radio-button nzValue=\"large\">å¤§</label>\r\n              <label nz-radio-button nzValue=\"default\">ä¸­</label>\r\n              <label nz-radio-button nzValue=\"small\">å°</label>\r\n            </nz-radio-group>\r\n      </div>\r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>{{field|json}}\r\n      </div>\r\n      <div class=\"item q_sore\">\r\n          <span>åå®¹éå¶</span> \r\n          <nz-select [nzSize]=\"'small'\" [(ngModel)]=\"questionField['templateOptions']['type']\">\r\n            <nz-option nzValue=\"default\" nzLabel=\"ä¸é\"></nz-option>\r\n            <nz-option nzValue=\"number\" nzLabel=\"æ°å­\"></nz-option>\r\n            <nz-option nzValue=\"alphabet\" nzLabel=\"å­æ¯\"></nz-option> \r\n            <nz-option nzValue=\"chinese\" nzLabel=\"ä¸­æ\"></nz-option> \r\n            <nz-option nzValue=\"email\" nzLabel=\"é®ç®±\"></nz-option> \r\n            <nz-option nzValue=\"mobile\" nzLabel=\"ææº\"></nz-option> \r\n          </nz-select>\r\n      </div>\r\n      <div class=\"item q_sore\">\r\n          <span>æå°å¡«å</span>\r\n          <span>å­</span>\r\n          <nz-input-number [nzMin]=\"0\"  [nzMax]=\"9999999\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['setting']['minLength']\"></nz-input-number>\r\n      </div>  \r\n      <div class=\"item q_sore\">\r\n          <span>æå¤å¡«å</span>\r\n          <span>å­</span>\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"9999999\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['setting']['maxLength']\"></nz-input-number>\r\n      </div> \r\n    </div>  \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingInput implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"input\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      type:\"default\", \r\n      setting:{    \r\n        minLength: 0, \r\n        maxLength: 0, \r\n      }\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-line\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n    <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n    <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>ææ </span> \r\n      </div> \r\n    </div>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingLine implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"line\"\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-radio\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div  class=\"item\">\r\n          <span>å¸å±</span>\r\n          <nz-radio-group [nzSize]=\"'small'\" [(ngModel)]=\"questionField['templateOptions']['setting']['layout']\">\r\n              <label nz-radio-button nzValue=\"1\">åå</label>\r\n              <label nz-radio-button nzValue=\"2\">2å</label>\r\n              <label nz-radio-button nzValue=\"3\">3å</label>\r\n            </nz-radio-group>\r\n      </div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div  class=\"item\">\r\n          <span>éæºæå</span> \r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['setting']['random']\"></nz-switch>\r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div> \r\n      <div  class=\"item\">\r\n          <span>é¢ç®æ»åæ°</span> \r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['setting']['score']\"></nz-input-number>\r\n      </div>  \r\n    </div> \r\n    <div class=\"setting_wrap_option\"> \r\n      <div class=\"title\">éé¡¹è®¾ç½®</div>\r\n      <ng-container *ngFor=\"let item of questionField.templateOptions['options']\">\r\n      <div class=\"item q_title\">\r\n          <span>{{item.label}}</span>\r\n      </div>\r\n      <div class=\"item q_sore\">\r\n          <span>éé¡¹åæ°</span>\r\n          <span>å</span>\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" style=\"width: 40px;\"  [(ngModel)]=\"item['score']\"></nz-input-number>\r\n      </div> \r\n      </ng-container> \r\n    </div>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingRadio implements OnInit, OnChanges {\r\n \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"radio\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false,\r\n      setting:{ \r\n        score: 0, \r\n        random: false,\r\n        layout:\"1\"\r\n      }, \r\n      options: []\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-remark\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingRemark implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"remark\",\r\n    templateOptions: {\r\n      label: \"\" \r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-scaler\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div>\r\n      <div class=\"item\">\r\n          <span>é¢å</span>\r\n          <nz-radio-group [nzSize]=\"'small'\">\r\n              <label nz-radio-button nzValue=\"A\">åé</label>\r\n              <label nz-radio-button nzValue=\"B\">å¤é</label>\r\n            </nz-radio-group>\r\n      </div>\r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>{{field|json}}\r\n      </div>  \r\n    </div>\r\n    <div class=\"setting_wrap_model\"> \r\n      <div class=\"title\">éé¡¹è®¾ç½®</div>\r\n      <div  class=\"item\">\r\n          <span>å¸å±</span>\r\n          <nz-radio-group [nzSize]=\"'small'\" [(ngModel)]=\"questionField['templateOptions']['layout']\">\r\n              <label nz-radio-button nzValue=\"row1\">åå</label>\r\n              <label nz-radio-button nzValue=\"row2\">2å</label>\r\n              <label nz-radio-button nzValue=\"row3\">3å</label>\r\n            </nz-radio-group>\r\n      </div>\r\n      <div  class=\"item\">\r\n          <span>éæºæå</span> \r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['order']\"></nz-switch>\r\n      </div>\r\n    </div>\r\n    <div class=\"setting_wrap_option\"> \r\n      <div class=\"title\">éé¡¹åè¡¨</div>\r\n      <ng-container *ngFor=\"let item of questionField.templateOptions['options']\">\r\n      <div class=\"item q_title\">\r\n          <span>{{item.label}}</span>\r\n      </div>\r\n      <div class=\"item q_sore\">\r\n          <span>éé¡¹åæ°</span>\r\n          <span>å</span>\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" style=\"width: 40px;\"  [(ngModel)]=\"item['score']\"></nz-input-number>\r\n      </div>\r\n      <div class=\"item q_other\">\r\n          <span>æ·»å è¾å¥æ¡</span>\r\n          <nz-switch nzSize=\"small\"  [(ngModel)]=\"item['input']\"></nz-switch>\r\n      </div>\r\n      </ng-container>\r\n    </div>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingScaler implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"scaler\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      description: \"\", \r\n      maxLength: 500,\r\n      minLength: 0,\r\n      max: 0,\r\n      min: 0,\r\n      precision: 0,\r\n      placeholder: \"\",\r\n      required: false,\r\n      tips: \"\",\r\n      pattern: \"\",\r\n      options:[] \r\n    },\r\n    origin: {\r\n      refdatasourcetype: \"\",\r\n      datatype: \"\"\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-score\",\r\n  template: `\r\n  <div class=\"setting_wrap_title\">\r\n    <span>é¢ç®è®¾ç½®</span>\r\n  </div> \r\n  <div class=\"setting_wrap_block\">\r\n    <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n    <div class=\"item\">\r\n        <span>æ­¤é¢å¿å¡«</span>\r\n        <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions.required\"></nz-switch> \r\n    </div>\r\n    <div class=\"item\">\r\n        <span>é»è¾è®¾ç½®</span>\r\n        <label>è®¾ç½®</label>\r\n    </div>\r\n    <div  class=\"item\">\r\n        <span>é¢ç®æ»åæ°</span> \r\n        <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions.setting.score\"></nz-input-number>\r\n    </div>\r\n    <div  class=\"item\">\r\n        <span>æä½åæ°</span> \r\n        <nz-input-number [nzMin]=\"0\" [nzMax]=\"10\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions.setting.min\"></nz-input-number>\r\n    </div>\r\n    <div  class=\"item\">\r\n        <span>æé«åæ°</span> \r\n        <nz-input-number [nzMin]=\"0\" [nzMax]=\"10\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions.setting.max\"></nz-input-number>\r\n    </div>\r\n    <div class=\"item\">\r\n      <span>å¾æ </span>\r\n        <nz-radio-group [nzSize]=\"'small'\" [(ngModel)]=\"questionField.templateOptions.type\">\r\n            <label nz-radio-button nzValue=\"start\">æ</label>\r\n            <label nz-radio-button nzValue=\"heart\">å¿</label>\r\n            <label nz-radio-button nzValue=\"good\">èµ</label> \r\n            <label nz-radio-button nzValue=\"other\">å¶</label>\r\n          </nz-radio-group>\r\n    </div>\r\n    <div class=\"item\" *ngIf=\"questionField.templateOptions.type=='other'\">\r\n      <span>èªå®ä¹æå­</span>  \r\n      <input nz-input [(ngModel)]=\"questionField.templateOptions.setting.label\" maxlength=\"1\" nzSize=\"small\" />\r\n    </div> \r\n  </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingScore implements OnInit, OnChanges {\r\n  \r\n  questionField:any={ \r\n    key: \"\",\r\n    type: \"score\",\r\n    templateOptions: {\r\n      type:\"start\",\r\n      label: \"\", \r\n      required: false,\r\n      setting:{\r\n        label:\"\", \r\n        score: 0,   \r\n        min: 0, \r\n        max: 5\r\n      },\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-date\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div> \r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingDate implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"date\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      required:false \r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-time\",\r\n  template: `\r\n  <div class=\"setting_wrap_title\">\r\n    <span>é¢ç®è®¾ç½®</span>\r\n  </div> \r\n  <div class=\"setting_wrap_block\">\r\n    <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n    <div class=\"item\">\r\n        <span>æ­¤é¢å¿å¡«</span>\r\n        <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n    </div>  \r\n    <div class=\"item\">\r\n        <span>é»è¾è®¾ç½®</span>\r\n        <label>è®¾ç½®</label>\r\n    </div>  \r\n  </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingTime implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"time\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      required:false \r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-nps\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>  \r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingNPS implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"nps\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      required: false,\r\n      options:[] \r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-proportion\",\r\n  template: `\r\n  <div class=\"setting_wrap_title\">\r\n    <span>é¢ç®è®¾ç½®</span>\r\n  </div> \r\n  <div class=\"setting_wrap_block\">\r\n    <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n    <div class=\"item\">\r\n        <span>æ­¤é¢å¿å¡«</span>\r\n        <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n    </div> \r\n    <div  class=\"item\">\r\n        <span>é¢ç®æ»åæ°</span> \r\n        <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['score']\"></nz-input-number>\r\n    </div>\r\n    <div class=\"item\">\r\n        <span>é»è¾è®¾ç½®</span>\r\n        <label>è®¾ç½®</label>\r\n    </div>  \r\n  </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingProportion implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"proportion\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      description: \"\", \r\n      maxLength: 500,\r\n      minLength: 0,\r\n      max: 0,\r\n      min: 0,\r\n      precision: 0,\r\n      placeholder: \"\",\r\n      required: false,\r\n      tips: \"\",\r\n      pattern: \"\",\r\n      score: 0,\r\n      options:[] \r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-evaluation\",\r\n  template: `\r\n  <div class=\"setting_wrap_title\">\r\n    <span>é¢ç®è®¾ç½®</span>\r\n  </div> \r\n  <div class=\"setting_wrap_block\">\r\n    <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n    <div class=\"item\">\r\n        <span>æ­¤é¢å¿å¡«</span>\r\n        <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n    </div> \r\n    <div  class=\"item\">\r\n        <span>é¢ç®æ»åæ°</span> \r\n        <nz-input-number [nzMin]=\"0\" [nzMax]=\"100\" [nzStep]=\"1\"  nzSize=\"small\" [(ngModel)]=\"questionField.templateOptions['setting']['score']\"></nz-input-number>\r\n    </div>\r\n    <div class=\"item\">\r\n        <span>é»è¾è®¾ç½®</span>\r\n        <label>è®¾ç½®</label>\r\n    </div>  \r\n  </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingEvaluation implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"evaluation\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false,\r\n      setting:{\r\n        score: 0,\r\n      },\r\n      options:[] \r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-matrix_radio\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingMatrixRadio implements OnInit, OnChanges {\r\n \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"matrix_radio\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false, \r\n      options: [],\r\n      subtitle:[]\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-matrix_checkbox\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingMatrixCheckBox implements OnInit, OnChanges {\r\n \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"matrix_checkbox\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false, \r\n      options: [],\r\n      subtitle:[]\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-matrix_score\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingMatrixScore implements OnInit, OnChanges {\r\n \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"matrix_score\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false, \r\n      options: [],\r\n      subtitle:[]\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-matrix_input\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>\r\n      </div>  \r\n    </div> \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingMatrixInput implements OnInit, OnChanges {\r\n \r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"matrix_input\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false, \r\n      options: [],\r\n      subtitle:[]\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\"; \r\n\r\n@Component({\r\n  selector: \"vxsurvey-setting-input_group\",\r\n  template: `\r\n    <div class=\"setting_wrap_title\">\r\n      <span>é¢ç®è®¾ç½®</span>\r\n    </div> \r\n    <div class=\"setting_wrap_block\">\r\n      <div class=\"title\">æ´é¢è®¾ç½®</div> \r\n      <div class=\"item\">\r\n          <span>æ­¤é¢å¿å¡«</span>\r\n          <nz-switch nzSize=\"small\" [(ngModel)]=\"questionField['templateOptions']['required']\"></nz-switch> \r\n      </div>\r\n      <div class=\"item\">\r\n          <span>é»è¾è®¾ç½®</span>\r\n          <label>è®¾ç½®</label>{{field|json}}\r\n      </div>  \r\n    </div> \r\n     \r\n  `\r\n\r\n})\r\nexport class VXSurveySettingInputGroup implements OnInit, OnChanges {\r\n  \r\n  questionField:any={\r\n    key: \"\",\r\n    type:\"input_group\",\r\n    templateOptions: {\r\n      label: \"\", \r\n      required: false, \r\n      options:[] \r\n    } \r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {  \r\n    if(value!=null && value!=undefined){\r\n      this.questionField = value; \r\n    }\r\n  } \r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {}\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewContainerRef,\r\n  ViewChild,\r\n  ComponentRef,\r\n  ComponentFactory,\r\n  ChangeDetectorRef,\r\n  ComponentFactoryResolver\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport { VXSurveySettingCascader } from \"./basic/setting_cascader\";\r\nimport { VXSurveySettingCheckBox } from \"./basic/setting_checkbox\";\r\nimport { VXSurveySettingDropdown } from \"./basic/setting_dropdown\";\r\nimport { VXSurveySettingInput } from \"./basic/setting_input\";\r\nimport { VXSurveySettingLine } from \"./basic/setting_line\";\r\nimport { VXSurveySettingRadio } from \"./basic/setting_radio\";\r\nimport { VXSurveySettingRemark } from \"./basic/setting_remark\";\r\nimport { VXSurveySettingScaler } from \"./basic/setting_scaler\";\r\nimport { VXSurveySettingScore } from \"./basic/setting_score\";\r\nimport { VXSurveySettingDate } from \"./basic/setting_date\";\r\nimport { VXSurveySettingTime } from \"./basic/setting_time\";\r\nimport { VXSurveySettingNPS } from \"./basic/setting_nps\";\r\nimport { VXSurveySettingProportion } from \"./basic/setting_proportion\";\r\nimport { VXSurveySettingEvaluation } from \"./basic/setting_evaluation\";\r\nimport { VXSurveySettingMatrixRadio } from \"./basic/setting_matrix_radio\";\r\nimport { VXSurveySettingMatrixCheckBox } from \"./basic/setting_matrix_checkbox\";\r\nimport { VXSurveySettingMatrixScore } from \"./basic/setting_matrix_score\";\r\nimport { VXSurveySettingMatrixInput } from \"./basic/setting_matrix_input\";\r\nimport { VXSurveySettingInputGroup } from \"./basic/setting_input_group\";\r\n\r\n@Component({\r\n  selector: \"setting-template\",\r\n  template: `\r\n    \r\n  \r\n  <ng-container #componentHost></ng-container>\r\n  `\r\n\r\n})\r\nexport class VXSurveySettingTemplate implements OnInit, OnChanges {\r\n\r\n  dynamicComponents: any = {\r\n    \"radio\": VXSurveySettingRadio,\r\n    \"checkbox\": VXSurveySettingCheckBox,\r\n    \"dropdown\": VXSurveySettingDropdown,\r\n    \"input\": VXSurveySettingInput,\r\n    \"line\": VXSurveySettingLine,\r\n    \"remark\": VXSurveySettingRemark,\r\n    \"cascader\": VXSurveySettingCascader,\r\n    \"scaler\": VXSurveySettingScaler,\r\n    \"score\": VXSurveySettingScore,\r\n    \"date\": VXSurveySettingDate,\r\n    \"time\": VXSurveySettingTime,\r\n    \"nps\": VXSurveySettingNPS,\r\n    \"proportion\": VXSurveySettingProportion,\r\n    \"evaluation\": VXSurveySettingEvaluation,\r\n    \"matrix_radio\": VXSurveySettingMatrixRadio,\r\n    \"matrix_checkbox\": VXSurveySettingMatrixCheckBox,\r\n    \"matrix_score\": VXSurveySettingMatrixScore,\r\n    \"matrix_input\": VXSurveySettingMatrixInput,\r\n    \"input_group\": VXSurveySettingInputGroup\r\n    // \"select_single\": VXSettingSelectSingle,\r\n    // \"select_multiple\": VXSettingSelectMultiple,\r\n    // \"select_image\": VXSettingSelectImage,\r\n    // \"select_voteimage\": VXSettingSelectVoteImage,\r\n    // \"select_votefont\": VXSettingSelectVoteFont,\r\n    // \"select_dropdown\": VXSettingSelectDropdown,\r\n    // \"select_cascader\": VXSettingSelectCascader,\r\n    // \"select_scaler\": VXSettingSelectScaler,\r\n    // \"select_classification\": VXSettingSelectClassification,\r\n\r\n    // \"blank\": VXSettingBlank,\r\n    // \"blank_multiple\": VXSettingBlankMultiple,\r\n    // \"blank_horizontal\": VXSettingBlankHorizontal,\r\n    // \"blank_table\": VXSettingBlankTable,\r\n    // //\"score\": VXSettingScore,\r\n    // \"score_sort\": VXSettingScoreSort,\r\n    // \"score_nps\": VXSettingScoreNPS,\r\n    // \"score_proportion\": VXSettingScoreProportion,\r\n    // \"score_evaluation\": VXSettingScoreEvaluation,\r\n    // \"other_page\": VXSettingOtherPage,\r\n    // \"other_line\": VXSettingOtherLine,\r\n    // \"other_upload\": VXSettingOtherUpload,\r\n    // \"other_remark\": VXSettingOtherRemark,\r\n    // \"emp_name\": VXSettingEmpName,\r\n    // \"emp_mobile\": VXSettingEmpMobile,\r\n    // \"emp_email\": VXSettingEmpEmail,\r\n    // \"emp_gender\": VXSettingEmpGender,\r\n    // \"emp_date\": VXSettingEmpDate,\r\n    // \"emp_time\": VXSettingEmpTime,\r\n    // \"emp_age\": VXSettingEmpAge,\r\n    // \"emp_education\": VXSettingEmpEducation,\r\n    // \"emp_major\": VXSettingEmpmajor,\r\n    // \"emp_university\": VXSettingEmpUniversity,\r\n    // \"emp_industry\": VXSettingIndustry,\r\n    // \"emp_occupation\": VXSettingEmpOccupation,\r\n    // \"emp_address\": VXSettingEmpAddress,\r\n    // \"emp_geography\": VXSettingEmpGeography,\r\n    // \"matrix_select\": VXSettingMatrixSelect,\r\n    // \"matrix_score\": VXSettingMatrixScore,\r\n    // \"matrix_blank\": VXSettingMatrixBlank,\r\n    // \"matrix_scale\": VXSettingMatrixScale\r\n  };\r\n\r\n  component: ComponentRef<any> | undefined;\r\n\r\n  @ViewChild('componentHost', { read: ViewContainerRef, static: true }) componentHost: ViewContainerRef | undefined;\r\n  questionField: any = {\r\n    key: \"\",\r\n    type: \"radio\",\r\n    templateOptions: {\r\n      label: \"\",\r\n      description: \"\",\r\n      maxLength: 500,\r\n      minLength: 0,\r\n      max: 0,\r\n      min: 0,\r\n      precision: 0,\r\n      placeholder: \"\",\r\n      required: false,\r\n      tips: \"\",\r\n      pattern: \"\",\r\n      options: []\r\n    },\r\n    origin: {\r\n      refdatasourcetype: \"\",\r\n      datatype: \"\"\r\n    }\r\n  };\r\n  @Input() set field(value: VXFormFieldConfig) {\r\n\r\n    if (value != null && value != undefined) {\r\n      this.questionField = value;\r\n    }\r\n    if (this.componentHost) {\r\n      this.componentHost.clear();\r\n      if (this.questionField != undefined && this.questionField != null && this.questionField.type != undefined && this.questionField.type != null) {\r\n        const compFactory: ComponentFactory<any> = this.componentFactoryResolver.resolveComponentFactory(\r\n          this.dynamicComponents[this.questionField.type],\r\n        );\r\n        this.component = this.componentHost.createComponent(compFactory);\r\n        this.component.instance.field = this.questionField;\r\n      }\r\n    }\r\n  }\r\n  constructor(\r\n    public componentFactoryResolver: ComponentFactoryResolver,\r\n    public changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\nimport { DataService } from \"../../service/data.service\";\r\n\r\nimport { ITreeData, ICheckedTree } from \"../../tools/util\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-editcascader-item\",\r\n  template:`\r\n    <div class=\"cascader_col_title\">\r\n      {{title}}\r\n    </div>\r\n    <div class=\"cascader_col_item vxsurvey-scrollbar\">\r\n      <ng-container *ngFor=\"let item of row.data;let index=index;\">\r\n        <div class=\"cascader_col_wrap\" [ngClass]=\"{' wrap_active':item.value == row.current}\" (click)=\"itemClick(item)\">\r\n      \r\n                <div class=\"cascader_col_wrap_order\">{{index+1}}.</div>\r\n                <div class=\"cascader_col_wrap_input\">\r\n                    <input type=\"text\" [(ngModel)]=\"item.label\" maxlength=\"50\">\r\n                </div>\r\n                <div class=\"cascader_col_wrap_limit\">\r\n                    {{item.label.length}}/50\r\n                </div>\r\n                <div class=\"cascader_col_wrap_delete\" (click)=\"delOption(item)\">\r\n                    <span><i class=\"icon-KT-Close\"></i></span>\r\n                </div> \r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n    <div class=\"cascader_col_add\" *ngIf=\"row?.showadd==true\"(click)=\"addOption()\">\r\n      <span></span>æ·»å éé¡¹\r\n    </div>  \r\n  `\r\n})\r\nexport class VXSurveyEditCascaderItem implements OnInit, OnChanges {\r\n  @Input() row:any={\r\n    cascader:1,\r\n    current:\"\",\r\n    showadd:false,\r\n    data:[]\r\n  };\r\n  @Input() title:string=\"\"; \r\n  @Output() itemEvent = new EventEmitter<any>();\r\n  @Output() addOptionEvent = new EventEmitter<any>();\r\n  @Output() delOptionEvent = new EventEmitter<any>();\r\n\r\n  constructor(public dataService: DataService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n     \r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n      \r\n  }\r\n\r\n  itemClick(e:any){\r\n    this.row.current = e.value;\r\n    this.itemEvent.emit(e);\r\n  }\r\n\r\n  addOption(){\r\n     \r\n    let index= 0;\r\n    if(this.row!=null && this.row.data!=null && this.row.data.length>0){\r\n      index= this.row.data.length;\r\n    }\r\n    index++;\r\n    let cascader = this.row.cascader;\r\n    this.row.data.push({\r\n      value:`${cascader}-${index}`,\r\n      label:`éé¡¹${index}`,\r\n      children:[]\r\n    });\r\n    this.addOptionEvent.emit();\r\n  }\r\n\r\n  delOption(e:any){\r\n    this.delOptionEvent.emit(e);\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  NgZone,\r\n  Output,\r\n  OnChanges,\r\n  HostListener,\r\n  ElementRef,\r\n  Directive,\r\n  EventEmitter,\r\n  OnInit,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\ndeclare var CKEDITOR: any; \r\nimport * as _ from 'lodash';\r\n\r\n@Directive({\r\n  selector: '[contenteditableModel]',\r\n})\r\nexport class ContenteditableModel implements OnChanges {\r\n  @Input('contenteditableModel') model: any={};\r\n  @Input() hasI18n = false;\r\n  @Output('contenteditableModelChange') change = new EventEmitter();\r\n  // @Output() limetValue: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() blur = new EventEmitter();\r\n  @Output() focus = new EventEmitter();\r\n  @Input() debounce: string=\"\";\r\n  @Input() placeholder = '';\r\n  @Input() brMode = false;\r\n\r\n  // changeBySelf = false;\r\n  // instance: any;\r\n  // cursor: any;\r\n  // splitIndex;\r\n  // debounceTimeout: any;\r\n  // lastRange: any;\r\n  // editableEle: any;\r\n  // priousV: string;\r\n  // languagetype = 1;\r\n  // private lastViewModel: any;\r\n  constructor(private elRef: ElementRef, public zone: NgZone) {}\r\n\r\n  ngAfterViewInit() {\r\n    //this.initEditor();\r\n  }\r\n\r\n  // initEditor() {\r\n  //   let config = {\r\n  //     startupFocus: false,\r\n  //     toolbar: 'Basic',\r\n  //     allowedContent: true,\r\n  //     placeholder: this.placeholder,\r\n  //     extraPlugins: '',\r\n  //     toolbar_Basic: [\r\n  //       [\r\n  //         'Font',\r\n  //         'FontSize',\r\n  //         'Bold',\r\n  //         'Underline',\r\n  //         'Italic',\r\n  //         '-',\r\n  //         'JustifyLeft',\r\n  //         'JustifyCenter',\r\n  //         'JustifyRight',\r\n  //         'TextColor',\r\n  //         'BGColor',\r\n  //       ],\r\n  //     ]\r\n  //   };\r\n  //   if (this.hasI18n) {\r\n  //     const pluginName = (config.extraPlugins ? ',' : '') + 'i18n';\r\n  //     config.extraPlugins = config.extraPlugins + pluginName;\r\n  //     config.toolbar_Basic[0].unshift('Chinese', '-', 'English');\r\n  //   }\r\n  //   // console.log('config==', config);\r\n  //   if (this.brMode) {\r\n  //     config['enterMode'] = CKEDITOR.ENTER_BR;\r\n  //     config['shiftEnterMode'] = CKEDITOR.ENTER_BR;\r\n  //   }\r\n  //   this.instance = CKEDITOR.inline(this.elRef.nativeElement, config);\r\n  //   // console.log('this.instance==', this.instance);\r\n\r\n  //   // è®¾ç½®å½éåè¯­è¨åä¾¦å¬\r\n  //   // this.languagetype = this.instance.element.getAttribute('data-i18n') || this.languagetype;\r\n  //   // this.instance.on('i18n', (evt: any) => {\r\n  //   //   // console.log('i18n change= ', evt);\r\n  //   //   if (evt.data != this.languagetype) {\r\n  //   //     this.languagetype = evt.data;\r\n  //   //     this.updateEditorValue();\r\n  //   //   }\r\n  //   // });\r\n\r\n  //   // æ´æ°è¡¨åå¼\r\n  //   this.updateEditorValue();\r\n\r\n  //   // CKEditor blur event\r\n  //   this.instance.on('blur', (evt: any) => {\r\n  //     this.blur.emit(evt);\r\n  //   });\r\n\r\n  //   // CKEditor focus event\r\n  //   this.instance.on('focus', (evt: any) => {\r\n  //     this.focus.emit(evt);\r\n  //   });\r\n\r\n  //   this.instance.on('change', (evt: any) => {\r\n  //     // console.log('onchange == ', evt);\r\n  //     let value = this.instance.getData();\r\n  //     if (this.model !== value) {\r\n  //       // Debounce update\r\n  //       if (this.debounce) {\r\n  //         if (this.debounceTimeout) clearTimeout(this.debounceTimeout);\r\n  //         this.debounceTimeout = setTimeout(() => {\r\n  //           this.updateValue(this.instance.getData());\r\n  //           this.debounceTimeout = null;\r\n  //         }, parseInt(this.debounce, 10));\r\n  //       } else {\r\n  //         this.updateValue(value);\r\n  //       }\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // doFocus() {\r\n  //   setTimeout(() => {\r\n  //     this.instance.focus();\r\n  //   }, 0);\r\n  // }\r\n\r\n  // insertAfter(newElement, targetElement) {\r\n  //   var parent = targetElement.parentNode;\r\n  //   if (parent.lastChild == targetElement) {\r\n  //     parent.appendChild(newElement);\r\n  //   } else {\r\n  //     parent.insertBefore(newElement, targetElement.nextSibling);\r\n  //   }\r\n  // }\r\n\r\n  ngOnChanges(changes:any) {\r\n    // this.lastViewModel = this.model;\r\n    // this.updateEditorValue();\r\n  }\r\n\r\n  // onKeyup() {\r\n  //   var value = this.elRef.nativeElement.innerHTML;\r\n  //   this.lastViewModel = value;\r\n  //   this.change.emit(value);\r\n  // }\r\n\r\n  // updateValue(value: any) {\r\n  //   // this.zone.run(() => {\r\n  //   //   this.lastViewModel = value;\r\n  //   //   this.changeBySelf = true;\r\n  //   //   if (_.isArray(this.model)) {\r\n  //   //     const found = this.model.find(item => {\r\n  //   //       return item.languagetype == this.languagetype; //zhcn\r\n  //   //     });\r\n  //   //     if (found) {\r\n  //   //       found.name = value;\r\n  //   //     }\r\n  //   //     this.change.emit(this.model);\r\n  //   //   } else {\r\n  //   //     this.change.emit(value);\r\n  //   //   }\r\n  //   // });\r\n  // }\r\n\r\n  // refreshView() {\r\n  //   if (this.instance) this.instance.setData(this.lastViewModel);\r\n  //   // this.elRef.nativeElement.innerHTML = this.lastViewModel\r\n  // }\r\n\r\n  // updateEditorValue() {\r\n  //   // if (this.instance) {\r\n  //   //   let model = this.model;\r\n  //   //   // console.log('this.model==', this.model);\r\n  //   //   if (_.isArray(this.model)) {\r\n  //   //     let foundItem = this.model.find(item => {\r\n  //   //       return item.languagetype == this.languagetype; //zhcn\r\n  //   //     });\r\n  //   //     if (!foundItem) {\r\n  //   //       foundItem = { languagetype: this.languagetype, id: 0, name: '' };\r\n  //   //       this.model.push(foundItem);\r\n  //   //     }\r\n  //   //     model = foundItem.name;\r\n  //   //   }\r\n  //   //   this.instance.setData(model);\r\n  //   // }\r\n  // }\r\n\r\n  // empty() {\r\n  //   this.model = '';\r\n  //   this.lastViewModel = '';\r\n  //   this.instance.setData('');\r\n  // }\r\n\r\n  /**\r\n   * On component destroy\r\n   */\r\n  ngOnDestroy() {\r\n    // if (this.debounceTimeout) {\r\n    //   clearTimeout(this.debounceTimeout);\r\n    //   this.debounceTimeout = null;\r\n    // }\r\n    // if (this.instance) {\r\n    //   setTimeout(() => {\r\n    //     this.instance.removeAllListeners();\r\n    //     let dom = document.querySelector('#cke_' + this.instance.name);\r\n    //     if (dom) {\r\n    //       dom.parentNode.removeChild(dom);\r\n    //     }\r\n    //     CKEDITOR.instances[this.instance.name].destroy(true);\r\n    //     this.instance.destroy(true);\r\n    //     this.instance = null;\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  // repeatStr(str, count) {\r\n  //   var ret = '';\r\n  //   for (var i = 0; i < count; i++) {\r\n  //     ret += str;\r\n  //   }\r\n  //   return ret;\r\n  // }\r\n\r\n  // checkAllIsUndline(input) {\r\n  //   let ret = true;\r\n  //   for (var i = 0; i < input.length; i++) {\r\n  //     if (input[i] != '_') {\r\n  //       ret = false;\r\n  //     }\r\n  //   }\r\n  //   return ret;\r\n  // }\r\n\r\n  // getTextNode(parent) {\r\n  //   var childNodes = parent.childNodes;\r\n  //   var childLen = childNodes.length;\r\n  //   if (childLen > 0) {\r\n  //     var child = childNodes[0];\r\n  //     if (child.childNodes.length > 0) {\r\n  //       return child.childNodes[0];\r\n  //     } else return child;\r\n  //   }\r\n  //   return parent;\r\n  // }\r\n\r\n  // prepareReplace() {\r\n  //   // è®¾ç½®æååæ å¯¹è±¡\r\n  //   //console.log(lastRange)\r\n  //   var startOffset = this.lastRange.startOffset;\r\n  //   var startText = this.lastRange.startContainer.data;\r\n  //   var parentTagName = this.lastRange.startContainer.parentNode.nodeName;\r\n  //   var isBlank = this.lastRange.startContainer.parentNode.className.indexOf('mod_fillblank') >= 0;\r\n  //   //console.log(\"startText:\"+startText)\r\n  //   if (parentTagName == 'P' || (isBlank && parentTagName == 'SPAN')) {\r\n  //     if (this.checkAllIsUndline(startText)) {\r\n  //       this.cursor = startOffset;\r\n  //     } else if (startText.substr(-1, 1) == '_') {\r\n  //       //æåä¸ä¸ªæ¯_\r\n  //       var flagCount = 0;\r\n  //       for (var i = 0; i < startOffset; i++) {\r\n  //         if (startText[i] == '_') flagCount++;\r\n  //       }\r\n  //       this.cursor = flagCount;\r\n  //     } else if (startText.indexOf('_') >= 0) {\r\n  //       //check first is _\r\n  //       if (startText[0] == '_') {\r\n  //         var flagCount = 0;\r\n  //         for (var i = 0; i < startOffset; i++) {\r\n  //           if (startText[i] == '_') flagCount++;\r\n  //         }\r\n  //         this.cursor = startOffset - flagCount;\r\n  //       } else {\r\n  //         var flagCount = 0;\r\n  //         for (var i = 0; i < startOffset; i++) {\r\n  //           if (startText[i] != '_') flagCount++;\r\n  //         }\r\n  //         this.cursor = startOffset - flagCount;\r\n  //       }\r\n\r\n  //       //å¤æ­å·¦è¾¹æ¯éå­æ¯çæåµ\r\n  //     } else {\r\n  //       this.cursor = startOffset;\r\n  //     }\r\n  //   } else {\r\n  //     this.cursor = startOffset;\r\n  //   }\r\n\r\n  //   // console.log('last cursor:' + this.cursor);\r\n  //   //æä¹åæ®µ\r\n  //   var childNodes = this.editableEle.childNodes;\r\n  //   var childNodeLen = childNodes.length;\r\n  //   //console.log(childNodes)\r\n  //   var findIndex;\r\n  //   var textNode;\r\n  //   for (var i = 0; i < childNodeLen; i++) {\r\n  //     textNode = this.getTextNode(childNodes[i]);\r\n  //     // console.log(textNode)\r\n  //     if (textNode == this.lastRange.startContainer) {\r\n  //       //console.log(\"match\")\r\n  //       findIndex = i;\r\n  //       var parentTagName = textNode.parentNode.nodeName;\r\n  //       var isBlank = textNode.parentNode.className.indexOf('mod_fillblank') >= 0;\r\n  //       if (\r\n  //         !this.checkAllIsUndline(textNode.data) &&\r\n  //         ((parentTagName == 'SPAN' && isBlank) || parentTagName == 'P')\r\n  //       ) {\r\n  //         if (textNode.data.indexOf('_') >= 0) {\r\n  //           findIndex = i + 1;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   this.splitIndex = findIndex;\r\n  //   // console.log('index:' + findIndex);\r\n  //   //this.doReplace()\r\n  // }\r\n\r\n  // doReplace() {\r\n  //   var innerHTML = this.editableEle.innerHTML;\r\n  //   //console.log(\"innerHTML:\"+innerHTML)\r\n  //   var replaceStr = this.getReplaceStr(innerHTML);\r\n  //   console.log(replaceStr);\r\n  //   // editableEle.innerHTML = replaceStr\r\n  //   //this.instance.setData(replaceStr);\r\n  //   var childNodes = this.editableEle.childNodes;\r\n  //   // console.log(childNodes);\r\n  //   //console.log(selection)\r\n  //   // å¤æ­æ¯å¦ææååæ å¯¹è±¡å­å¨\r\n  //   if (this.cursor) {\r\n  //     //console.log(\"exist range\")\r\n  //     //console.log(childNodes)\r\n  //     var selection = getSelection();\r\n  //     var textNode;\r\n  //     //var rangeNew = document.createRange();\r\n  //     var range = new CKEDITOR.dom.range(this.instance.document);\r\n  //     range.selectNodeContents(this.instance.document.getBody());\r\n  //     for (var i = 0; i < childNodes.length; i++) {\r\n  //       if (i == this.splitIndex) {\r\n  //         textNode = this.getTextNode(childNodes[i]);\r\n  //       }\r\n  //     }\r\n  //     // console.log('textNode:' + textNode);\r\n  //     if (textNode) {\r\n  //       //range.setStart(textNode, this.cursor)\r\n  //       // ä½¿åæ å¼å§ååæ ç»æéå \r\n  //       //range.collapse(true)\r\n  //     }\r\n\r\n  //     // æ¸é¤éå®å¯¹è±¡çææåæ å¯¹è±¡\r\n  //     //selection.removeAllRanges()\r\n  //     // æå¥æ°çåæ å¯¹è±¡\r\n  //     //selection.addRange(range)\r\n  //   }\r\n\r\n  //   // console.log(range)\r\n  // }\r\n\r\n  // getReplaceStr(str) {\r\n  //   // console.log(\"origin\")\r\n  //   //console.log(str)\r\n  //   var regex1 = /<span data-id=\"fillblank-[\\w]+\" class=\"mod_fillblank\">([\\w|\\u4e00-\\u9fa5a]+)<\\/span>/g;\r\n  //   // å®ä¹æååæ å¯¹è±¡\r\n  //   var lastEditRange;\r\n\r\n  //   str = str.replace(regex1, function(match, $1) {\r\n  //     // console.log(match)\r\n  //     //console.log($1)\r\n  //     // var formatStr = $1.replace(/[_]+/g,function(match){\r\n  //     // \t///console.log(match)\r\n  //     // \treturn '<span data-id=\"fillblank-w71E\" class=\"mod_fillblank\">'+match+'</span>'\r\n  //     // })\r\n  //     //console.log(str)\r\n  //     return $1;\r\n  //   });\r\n  //   //console.log(\"step1:\")\r\n  //   // console.log(str)\r\n  //   str = str.replace(/<([^>]+>)(\\w*[_]+\\w*)(<[^>]+>)/g, function(match, $1, $2) {\r\n  //     //console.log(match,$1,$2)\r\n  //     var formatStr = match.replace(/[_]+/g, function(match) {\r\n  //       // console.log(match)\r\n  //       return this.repeatStr('\\n', match.length);\r\n  //     });\r\n  //     return formatStr;\r\n  //   }); //å»æææçhtmlæ è®°\r\n  //   // console.log(str)\r\n  //   str = str.replace(/[_]+/g, function(match) {\r\n  //     //console.log(match)\r\n  //     return '<span data-id=\"fillblank-w71E\" class=\"mod_fillblank\">' + match + '</span>';\r\n  //   });\r\n  //   str = str.replace(/\\n+/g, function(match) {\r\n  //     return this.repeatStr('_', match.length);\r\n  //   });\r\n  //   //console.log(str)\r\n  //   return str;\r\n  // }\r\n\r\n  // insertText(text) {\r\n  //   this.instance.insertText(text);\r\n  // }\r\n}\r\n","import {\r\n  Component,\r\n  ViewChild,\r\n  EventEmitter,\r\n  ViewChildren,\r\n  Input,\r\n  Output,\r\n  forwardRef,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { ContenteditableModel } from './contenteditable'; \r\n\r\nconst EDITOR_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InlineEditorComponent),\r\n  multi: true,\r\n};\r\n\r\n// <div\r\n//       [(contenteditableModel)]=\"value\"\r\n//       [ngClass]=\"active==true?'inline_editor':'inline_editor_hidden'\"\r\n//       role=\"textbox\"\r\n//       [attr.contenteditable]=\"disabled ? 'false' : 'true'\"\r\n//       [class.disabled]=\"disabled\"\r\n//       (blur)=\"handleBlur($event)\"\r\n//       (focus)=\"handleFocus($event)\"\r\n//       [brMode]=\"brMode\"\r\n//       [placeholder]=\"placeholder\"\r\n//       [debounce]=\"debounce\"\r\n//       (contenteditableModelChange)=\"onContenteditableModelChange($event)\"\r\n//     ></div>\r\n\r\n@Component({\r\n  selector: 'inline-editor',\r\n  providers: [EDITOR_VALUE_ACCESSOR],\r\n  template: `\r\n    <input *ngIf=\"active==true\"  nz-input [(ngModel)]=\"value\" /> \r\n    <div *ngIf=\"active==false\" \r\n      class=\"inline_editor_show\"\r\n      [innerHTML]=\"value | safeHtml\">\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host ::ng-deep {\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class InlineEditorComponent implements ControlValueAccessor {\r\n  _value=\"\";\r\n  _classList = {};\r\n  @Input() debounce: string = '100';\r\n  @Input() placeholder: string = '';\r\n  @Input() className: string = 'inline_editor';\r\n  @Input() brMode = true;\r\n  @Output() blur = new EventEmitter();\r\n  @Output() focus = new EventEmitter();\r\n  @Input() disabled = false;\r\n  @Input() data:any=\"\";\r\n  @Input() active:boolean=false \r\n  //@ViewChild(ContenteditableModel,{static:true}) contenteditableModel: ContenteditableModel|undefined;\r\n\r\n  constructor() {}\r\n\r\n  //   focus() {\r\n  //     this.contenteditableModel.doFocus();\r\n  //   }\r\n\r\n  ngOnInit() {\r\n    // if (this.className) {\r\n    //   var splits = this.className.split(' ');\r\n    //   for (var i = 0; i < splits.length; i++) {\r\n    //     this._classList[splits[i]] = true;\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  handleFocus(evt:any) {\r\n    this.focus.emit(evt);\r\n  }\r\n\r\n  handleBlur(evt:any) {\r\n    this.blur.emit(evt);\r\n  }\r\n\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n  @Input()\r\n  set value(v:any) {\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this.onChange(v);\r\n    }\r\n  } \r\n  \r\n  onContenteditableModelChange(evt:any) {\r\n    this.onTouched();\r\n    this.onChange(evt);\r\n  }\r\n\r\n  /**\r\n   * Implements ControlValueAccessor\r\n   */\r\n  writeValue(value: any) {\r\n    this._value = value;\r\n    //if (this.contenteditableModel && this.contenteditableModel.instance) {\r\n      //this.contenteditableModel.instance.setData(value);\r\n    //}\r\n  }\r\n  onChange(_: any) {}\r\n  onTouched() {}\r\n  registerOnChange(fn: any) {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-first-page\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXSurveyFirstPage implements OnInit, OnChanges {\r\n  \r\n  @Input() firstpage:any={\r\n    title:\"é®å·æ é¢\",\r\n    text:\"ä¸ºäºç»æ¨æä¾æ´å¥½çæå¡ï¼å¸ææ¨è½æ½åºå åéæ¶é´ï¼å°æ¨çæååå»ºè®®åè¯æä»¬ï¼æä»¬éå¸¸éè§æ¯ä½ç¨æ·çå®è´µæè§ï¼æå¾æ¨çåä¸ï¼ç°å¨æä»¬å°±é©¬ä¸å¼å§å§ï¼\"\r\n  }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n  }  \r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from \"@angular/core\";\r\nimport { VXFormFieldConfig } from \"@vx-form/core\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Component({\r\n  selector: \"vxsurvey-last-page\",\r\n  templateUrl: \"./index.component.html\",\r\n  styleUrls: [\"./index.component.less\"]\r\n})\r\nexport class VXSurveyLastPage implements OnInit, OnChanges {\r\n    \r\n  @Input() lastpage:any={\r\n    title:\"\",\r\n    text:\"\"\r\n  }\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n  } \r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Pipe({ name: \"replaceLine\" })\r\nexport class ReplaceLinePipe implements PipeTransform {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value: string): string {\r\n    return value.replace(/\\n/g, \"<br/>\");\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n\r\n@Pipe({ name: 'safeHtml'})\r\nexport class SafeHtmlPipe implements PipeTransform  {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value:any) {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, registerLocaleData } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\r\nimport {\r\n  HttpClient,\r\n  HTTP_INTERCEPTORS,\r\n  HttpClientModule\r\n} from \"@angular/common/http\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { NgZorroAntdModule, NZ_I18N, zh_CN, NZ_ICONS } from \"ng-zorro-antd\";\r\nimport {\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  FormOutline,\r\n  DashboardOutline,\r\n  MinusSquareFill,\r\n  MinusSquareOutline,\r\n  MinusSquareTwoTone,\r\n  MinusOutline,\r\n  InboxOutline\r\n} from \"@ant-design/icons-angular/icons\";\r\n//import { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\n\r\nimport zh from \"@angular/common/locales/zh\"; \r\n\r\nimport { VXFormModule } from \"@vx-form/core\";\r\nimport {\r\n  BOOTSTRAP_VXFORM_CONFIG,\r\n  FIELD_TYPE_COMPONENTS\r\n} from \"./bootstrap.config\";\r\n\r\nimport { validationConfig } from \"./validation.config\";\r\nimport { VXSurveyDesignDetail } from \"./design/detail/detail.component\"; \r\n \r\nimport { VXQuestionType } from \"./components/question-type/index.component\"; \r\nimport { VXQuestionList } from \"./components/question-list/index.component\"; \r\nimport { VXSurveySettingTemplate } from \"./components/setting.teplate\";\r\n\r\nimport { VXSurveySettingCascader } from \"./components/basic/setting_cascader\";\r\nimport { VXSurveySettingCheckBox } from \"./components/basic/setting_checkbox\";\r\nimport { VXSurveySettingDropdown } from \"./components/basic/setting_dropdown\";\r\nimport { VXSurveySettingInput } from \"./components/basic/setting_input\";\r\nimport { VXSurveySettingLine } from \"./components/basic/setting_line\";\r\nimport { VXSurveySettingRadio } from \"./components/basic/setting_radio\";\r\nimport { VXSurveySettingRemark } from \"./components/basic/setting_remark\";\r\nimport { VXSurveySettingScaler } from \"./components/basic/setting_scaler\";\r\nimport { VXSurveySettingScore } from \"./components/basic/setting_score\";\r\nimport { VXSurveySettingDate } from \"./components/basic/setting_date\";\r\nimport { VXSurveySettingTime } from \"./components/basic/setting_time\";\r\nimport { VXSurveySettingNPS } from \"./components/basic/setting_nps\";\r\nimport { VXSurveySettingProportion } from \"./components/basic/setting_proportion\";\r\nimport { VXSurveySettingEvaluation } from \"./components/basic/setting_evaluation\";\r\nimport { VXSurveySettingMatrixRadio } from \"./components/basic/setting_matrix_radio\";\r\nimport { VXSurveySettingMatrixCheckBox } from \"./components/basic/setting_matrix_checkbox\";\r\nimport { VXSurveySettingMatrixScore } from \"./components/basic/setting_matrix_score\";\r\nimport { VXSurveySettingMatrixInput } from \"./components/basic/setting_matrix_input\";\r\nimport { VXSurveySettingInputGroup } from \"./components/basic/setting_input_group\";\r\n\r\nimport { VXSurveyEditCascader } from \"./components/edit-cascader/index.component\";\r\nimport { VXSurveyEditEvaluation } from \"./components/edit-evaluation/index.component\";\r\nimport { VXSurveyEditCascaderItem } from \"./components/edit-cascader/cascader-item\";\r\n \r\nimport { ContenteditableModel } from \"./components/inline-editor/contenteditable\";\r\nimport { InlineEditorComponent } from \"./components/inline-editor/inline-editor.comonent\";\r\nimport { VXSurveyFirstPage } from \"./components/first-page/index.component\";\r\nimport { VXSurveyLastPage } from \"./components/last-page/index.component\";\r\n\r\nimport { VXFormAntService } from \"./tools/service\";\r\nimport { VXRadioService } from \"./tools/radio_Service\";\r\nimport { VXCheckboxService } from './tools/checkbox_Service';\r\nimport { VXInputService } from \"./tools/input_Service\";\r\nimport { VXOtherService } from \"./tools/other_Service\";\r\nimport { VXCascaderService } from \"./tools/cascader_Service\";\r\nimport { VXMatrixService } from \"./tools/matrix_Service\";\r\n\r\nimport { VXDialogService } from \"./service/dialog.service\"; \r\nimport { ReplaceLinePipe } from \"./tools/replaceLinePipe\"; \r\nimport { _HttpClient } from \"./net/http.client\";\r\nimport { SafeHtmlPipe } from './pipes/safehtml.pipe';\r\nconst icons = [\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  FormOutline,\r\n  DashboardOutline,\r\n  MinusSquareFill,\r\n  MinusSquareOutline,\r\n  MinusSquareTwoTone,\r\n  MinusOutline,\r\n  InboxOutline\r\n];\r\nregisterLocaleData(zh);\r\n\r\n//ç§æç\r\nconst entryComponent = [ \r\n  VXQuestionType,\r\n  VXQuestionList,\r\n  VXSurveySettingTemplate, \r\n  \r\n  VXSurveySettingCascader,\r\n  VXSurveySettingCheckBox,\r\n  VXSurveySettingDropdown,\r\n  VXSurveySettingInput,\r\n  VXSurveySettingLine,\r\n  VXSurveySettingRadio,\r\n  VXSurveySettingRemark,\r\n  VXSurveySettingScaler,\r\n  VXSurveySettingScore,\r\n  VXSurveySettingDate,\r\n  VXSurveySettingTime,\r\n  VXSurveySettingNPS,\r\n  VXSurveySettingProportion,\r\n  VXSurveySettingEvaluation,\r\n  VXSurveySettingMatrixRadio,\r\n  VXSurveySettingMatrixCheckBox,\r\n  VXSurveySettingMatrixScore,\r\n  VXSurveySettingMatrixInput,\r\n  VXSurveySettingInputGroup,\r\n  \r\n  VXSurveyEditEvaluation,\r\n  VXSurveyEditCascader,\r\n\r\n  VXSurveyEditCascaderItem,\r\n  \r\n  VXSurveyFirstPage,\r\n  VXSurveyLastPage\r\n];\r\n\r\n//å¬å¼ç\r\nconst publicComponent = [\r\n  VXSurveyDesignDetail,\r\n  VXSurveyEditEvaluation\r\n];\r\nconst PIPES = [\r\n  SafeHtmlPipe\r\n];\r\nconst PROVIDES=[\r\n  VXRadioService,\r\n  VXCheckboxService,\r\n  VXInputService,\r\n  VXOtherService,\r\n  VXCascaderService,\r\n  VXMatrixService\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FIELD_TYPE_COMPONENTS,\r\n    entryComponent,\r\n    publicComponent,\r\n    ReplaceLinePipe,\r\n    ContenteditableModel,\r\n    InlineEditorComponent,\r\n    ...PIPES,\r\n  ],\r\n  imports: [\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    DragDropModule,\r\n    OverlayModule,\r\n    NgZorroAntdModule,\r\n    VXFormModule.forChild(BOOTSTRAP_VXFORM_CONFIG),\r\n    VXFormModule.forRoot(validationConfig)\r\n  ],\r\n  entryComponents: [entryComponent],\r\n  exports: [TranslateModule, publicComponent,ContenteditableModel,InlineEditorComponent,\r\n    ...PIPES],\r\n  providers: [ \r\n    { provide: NZ_I18N, useValue: zh_CN },\r\n    { provide: NZ_ICONS, useValue: icons }, \r\n    _HttpClient, \r\n    VXFormAntService,\r\n    VXDialogService,\r\n    ...PROVIDES\r\n  ]\r\n})\r\nexport class VXSurveyModule {}\r\n"],"names":["EventEmitter","Injectable","tslib_1.__extends","Guid","Component","FieldType","moveItemInArray","NzModalService","_.cloneDeep","Input","FieldWrapper","FieldArrayType","_.get","http","HttpParams","tap","catchError","throwError","HttpClient","message","FormGroup","clone","NzMessageService","VXFormCommonService","Output","transferArrayItem","ComponentFactoryResolver","ChangeDetectorRef","ViewChild","ViewContainerRef","Directive","ElementRef","NgZone","NG_VALUE_ACCESSOR","forwardRef","_","Pipe","DomSanitizer","icons","MenuFoldOutline","MenuUnfoldOutline","FormOutline","DashboardOutline","MinusSquareFill","MinusSquareOutline","MinusSquareTwoTone","MinusOutline","InboxOutline","registerLocaleData","zh_CN","NgModule","HttpModule","HttpClientModule","FormsModule","ReactiveFormsModule","CommonModule","DragDropModule","OverlayModule","NgZorroAntdModule","VXFormModule","TranslateModule","NZ_I18N","NZ_ICONS"],"mappings":";;;;;;;;IAAA;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/E,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AAEF,aAAgB,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AAED,aA0FgB,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;AAED,aAAgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;;;;;;AC5ID;QAaE;YARA,aAAQ,GAAG,IAAIA,eAAY,EAAE,CAAC;YAC9B,eAAU,GAAG,IAAIA,eAAY,EAAE,CAAC;YAChC,kBAAa,GAAG,IAAIA,eAAY,EAAE,CAAC;YACnC,gBAAW,GAAG,IAAIA,eAAY,EAAE,CAAC;YACjC,kBAAa,GAAG,IAAIA,eAAY,EAAE,CAAC;YAEnC,aAAQ,GAAG,EAAE,CAAC;SAEE;;;;;;QAEhB,2CAAgB;;;;;YAAhB,UAAiB,IAAY,EAAE,KAAwB;gBACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBACnB,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;;;;;;QACD,2CAAgB;;;;;YAAhB,UAAiB,IAAY,EAAE,KAAwB;gBACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACjB,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;;;;;;QAID,8CAAmB;;;;;YAAnB,UAAoB,IAAY,EAAE,KAAwB;gBACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBACtB,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;;;;;;;QAED,4CAAiB;;;;;;YAAjB,UAAkB,IAAY,EAAC,MAAU,EAAE,KAAwB;gBACjE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBACpB,IAAI,EAAE,IAAI;oBACV,MAAM,EAAC,MAAM;oBACb,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;;;;;;;QAED,8CAAmB;;;;;;YAAnB,UAAoB,YAAgB,EAAC,aAAiB,EAAC,YAAgB;gBACrE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBACtB,YAAY,EAAE,YAAY;oBAC1B,aAAa,EAAC,aAAa;oBAC3B,YAAY,EAAE,YAAY;iBAC3B,CAAC,CAAC;aACJ;;oBAhDFC,aAAU;;;;QAmDX,uBAAC;KAnDD;;;;;;;QCcwCC,sCAAS;QAG/C,4BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;QAGD,uCAAU;;;;YAAV,UAAW,KAA4B;aAEtC;;;;;;QAGD,0CAAa;;;;;YAAb;gBACE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;;;;;;QAED,yCAAY;;;;;YAAZ;gBACE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrD;;;;;;QAED,wCAAW;;;;;YAAX;gBAEE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,2CAAc;;;;;YAAd;gBACE,IAAG,CAAC,IAAI,CAAC,MAAM,EAAC;oBACd,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACvD;aACF;;;;;;QAGD,sCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrD;;;;;;QAED,uCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;;;;;;;QAED,yCAAY;;;;;;YAAZ,UAAa,MAAU;gBACrB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;oBAxDFC,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,kKAQT;qBACF;;;;;wBAdQ,gBAAgB;;;QA4DzB,yBAAC;KAAA,CA7CuCC,gBAAS;;;;;;;QCuBXH,oCAAS;QAU7C,0BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YADC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;QAVD,sBAAI,iDAAmB;;;gBAAvB;;oBACM,MAAM,GAAG,CAAC,CAAC;gBACf,IAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAC;oBACf,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;iBACxB;gBACD,OAAO,MAAM,CAAC;aACf;;;WAAA;;;;;QAOD,+BAAI;;;;YAAJ,UAAK,KAA4B;gBAE/B,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;oBAC/CI,wBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;iBAChF;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAC5B,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,YAAY,CAAC,CAAC;iBACvB;aACF;;;;;QACD,2CAAgB;;;;YAAhB,UAAiB,IAAY;gBAC3B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACjD;;;;;;;QAID,wCAAa;;;;;;YAAb,UAAc,KAAS;gBACrB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;aACjD;;;;;;;QAED,uCAAY;;;;;;YAAZ,UAAa,KAAS;gBACpB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAC,KAAK,CAAC,CAAC;aAChD;;;;;;;QAED,sCAAW;;;;;;YAAX,UAAY,KAAS;gBAEnB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAC,KAAK,CAAC,CAAC;aAClD;;;;;;;QAED,yCAAc;;;;;;YAAd,UAAe,KAAS;gBACtB,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAC,KAAK,CAAC,CAAC;iBAClD;aACF;;oBArFFF,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,8pDA+BT;qBACF;;;;;wBArCQ,gBAAgB;;;QA0FzB,uBAAC;KAAA,CApDqCC,gBAAS;;;;;;;QCOZH,iCAAS;QAG1C,uBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAGD,iCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,kCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,oCAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;;;;QAED,4BAAI;;;;YAAJ,UAAK,KAA4B;gBAC/B,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;oBAC/CG,wBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;iBAChF;aACF;;oBAnEFF,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,4nDAsCT;qBACF;;;;;wBA5CQ,gBAAgB;;;QAuEzB,oBAAC;KAAA,CA1BkCC,gBAAS;;;;;;;QCGNH,oCAAS;QAG7C,0BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAGD,oCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrD;;;;;;QAED,qCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;;;;;;;QAED,uCAAY;;;;;;YAAZ,UAAa,MAAU;gBACrB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;;;;QAED,mCAAQ;;;;YAAR,UAAS,MAAgB;gBAAzB,iBAeC;gBAbC,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAA,KAAK;wBAClB,IAAI,KAAI,CAAC,EAAE,CAAC,OAAO,KAAK,SAAS,IAAI,KAAI,CAAC,EAAE,CAAC,OAAO,KAAK,IAAI,EAAE;4BAC7D,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;;;+BAAC,UAAC,MAAW;gCAClC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE,CAE9B;6BACF,EAAC,CAAC;yBACJ;qBACF,EAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;;;;;QAED,yCAAc;;;;YAAd,UAAe,MAAW;gBACxB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aACxB;;;;;;QAEM,4CAAiB;;;;;YAAxB,UAAyB,MAAW,EAAE,MAAW;;oBAC3C,MAAM,GAAG,KAAK;gBAClB,IAAI,MAAM,IAAI,MAAM,EAAE;oBACpB,MAAM,GAAG,MAAM,CAAC,IAAI;;;uBAAC,UAAC,KAAU;wBAC9B,OAAO,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;qBAC9B,EAAC,CAAC;iBACJ;gBACD,OAAO,MAAM,CAAC;aACf;;;;;QAED,+BAAI;;;;YAAJ,UAAK,KAA4B;gBAC/B,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;oBAC/CG,wBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;iBAChF;aACF;;oBArGFF,YAAS,SAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,QAAQ,EAAE,8tDAyCT;qBACF;;;;;wBA/CQ,gBAAgB;;;QAyGzB,uBAAC;KAAA,CAzDqCC,gBAAS;;;;;;;QCATH,oCAAS;QAG7C,0BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAID,oCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrD;;;;;;QAED,qCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;;;;;;;QAED,uCAAY;;;;;;YAAZ,UAAa,MAAU;gBACrB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;;;;QAED,+BAAI;;;;YAAJ,UAAK,KAA4B;gBAC/B,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;oBAC/CG,wBAAe,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;iBAChF;aACF;;oBAvEFF,YAAS,SAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,QAAQ,EAAE,8kDAyCT;qBACF;;;;;wBA/CQ,gBAAgB;;;QA2EzB,uBAAC;KAAA,CA3BqCC,gBAAS;;;;;;AClD/C;QAiBE,yBAAmB,YAA4B;YAA5B,iBAAY,GAAZ,YAAY,CAAgB;SAAI;;;;;QACnD,oCAAU;;;;YAAV,UAAW,IAAS;;oBACZ,GAAG,GAAG;oBACV,KAAK,EAAE,GAAG;oBACV,MAAM,EAAE,GAAG;iBACZ;gBACD,QAAQ,IAAI;oBACV,KAAK,OAAO;wBACV,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC;wBAChB,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;wBACjB,MAAM;oBACR,KAAK,QAAQ;wBACX,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC;wBAChB,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;wBACjB,MAAM;oBACR,KAAK,OAAO;wBACV,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC;wBAChB,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;wBACjB,MAAM;oBACR;wBACE,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC;wBAChB,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;wBACjB,MAAM;iBACT;gBACD,OAAO,GAAG,CAAC;aACZ;;;;;;;QACM,2CAAiB;;;;;;YAAxB,UACE,YAA0B,EAC1B,MAAW,EACX,QAAa;;oBAEP,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK;;oBAChD,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM;;oBAClD,KAAK,GAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;oBAC1C,OAAO,EAAE,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,GAAG,IAAI;oBAC3D,OAAO,EAAE,KAAK,GAAG,IAAI;oBACrB,UAAU,EAAE,IAAI;oBAChB,cAAc,EAAE,KAAK;oBACrB,eAAe,EAAE,YAAY,CAAC,UAAU,CAAC,GAAG,uBAAuB,GAAG,EAAE;oBACxE,WAAW,EAAE;wBACX,OAAO,EAAE,GAAG;wBACZ,MAAM,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;8BAC5B,MAAM,GAAG,GAAG,GAAG,IAAI;8BACnB,MAAM,GAAG,EAAE,GAAG,IAAI;qBACvB;oBACD,SAAS,EAAE,YAAY,CAAC,SAAS;oBACjC,QAAQ,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;0BAC9B;4BACE;gCACE,IAAI,EAAE,IAAI;gCACV,KAAK,EAAE,IAAI;gCACX,IAAI,EAAE,SAAS;gCACf,OAAO;;;mCAAE,UAAA,iBAAiB;oCACxB,KAAK,CAAC,OAAO,EAAE,CAAC;iCACjB,CAAA;6BACF;4BACD;gCACE,IAAI,EAAE,YAAY,CAAC,cAAc,CAAC;gCAClC,KAAK,EAAE,IAAI;gCACX,IAAI,EAAE,SAAS;gCACf,OAAO;;;mCAAE,UAAA,iBAAiB,IAAI,OAAA,QAAQ,CAAC,iBAAiB,EAAE,KAAK,CAAC,GAAA,CAAA;6BACjE;4BACD;gCACE,IAAI,EAAE,IAAI;gCACV,KAAK,EAAE,YAAY,CAAC,cAAc,CAAC;sCAC/B,YAAY,CAAC,cAAc,CAAC;sCAC5B,IAAI;gCACR,IAAI,EAAE,SAAS;gCACf,OAAO;;;mCAAE,UAAA,iBAAiB,IAAI,OAAA,QAAQ,CAAC,iBAAiB,EAAE,KAAK,CAAC,GAAA,CAAA;6BACjE;yBACF;0BACD,IAAI;oBACR,MAAM;;;uBAAE,UAAA,IAAI,KAAM,CAAA;oBAClB,UAAU;;;uBAAE,UAAA,IAAI,KAAM,CAAA;oBACtB,iBAAiB,EAAE,MAAM;iBAC1B,CAAC;gBAEF,KAAK,CAAC,UAAU,CAAC,SAAS;;;mBAAC,UAAC,MAAW;oBACrC,IAAI,MAAM,EAAE;wBACV,QAAQ,CAAC,MAAM,CAAC,CAAC;qBAClB;iBACF,EAAC,CAAC;aACJ;;oBAtFFJ,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wBAdQM,0BAAc;;;;8BADvB;KAaA;;;;;;ACbA;QAmEE;YAhDA,iBAAY,GAAU,EAAE,CAAC;YAqBzB,SAAI,GAAQ;gBACV,QAAQ,EAAE,CAAC;gBACX,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,EAAE;aACT,CAAA;YACD,SAAI,GAAQ;gBACV,QAAQ,EAAE,CAAC;gBACX,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,EAAE;aACT,CAAA;YACD,SAAI,GAAQ;gBACV,QAAQ,EAAE,CAAC;gBACX,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,EAAE;aACT,CAAA;YACD,SAAI,GAAQ;gBACV,QAAQ,EAAE,CAAC;gBACX,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,EAAE;aACT,CAAA;SAMA;QAhDD,sBAAa,6CAAW;;;;gBAAxB,UAAyB,KAAuB;gBAC9C,IAAG,KAAK,IAAE,SAAS,IAAI,KAAK,IAAE,IAAI,IAAI,KAAK,CAAC,eAAe,IAAG,SAAS,IAAI,KAAK,CAAC,eAAe,IAAE,IAAI,IAAI,KAAK,CAAC,eAAe,CAAC,OAAO,IAAE,SAAS,IAAI,KAAK,CAAC,eAAe,CAAC,OAAO,IAAE,IAAI,EAAC;oBACxL,IAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,EAAC;wBAC9C,IAAI,CAAC,YAAY,GAAGC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;qBAChE;yBAAI;wBACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;qBACxB;iBACF;gBACD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;aACpC;;;WAAA;QAED,sBAAa,sCAAI;;;gBAIjB;gBACE,OAAO,IAAI,CAAC,YAAY,CAAC;aAC1B;;;;gBAND,UAAkB,KAAY;aAE7B;;;WAAA;;;;QAqCD,uCAAQ;;;YAAR;aACC;;;;;QAED,0CAAW;;;;YAAX,UAAY,OAAsB;aACjC;;;;;;QAED,2CAAY;;;;;YAAZ,UAAa,IAAS,EAAE,IAAY;;oBAC9B,OAAO,GAAG,IAAI;gBAClB,QAAQ,IAAI;oBACV,KAAK,CAAC;wBACJ,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;wBAEpD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;wBAEpB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;wBACpB,MAAM;oBACR,KAAK,CAAC;wBACJ,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;wBAEpD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;wBACpB,MAAM;oBACR,KAAK,CAAC;wBACJ,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;wBACpD,MAAM;oBACR,KAAK,CAAC;wBACJ,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC/B,MAAM;iBACT;aACF;;;;;QAED,wCAAS;;;;YAAT,UAAU,CAAS;aAElB;;;;;;QAED,wCAAS;;;;;YAAT,UAAU,CAAM,EAAE,IAAY;gBAC5B,IAAI,CAAC,EAAE;oBACL,QAAQ,IAAI;wBACV,KAAK,CAAC;4BACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;;;;;+BAAC,UAAC,IAAS,EAAE,KAAa,EAAE,GAAQ;gCACxD,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;oCACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iCACtB;6BACF,EAAC,CAAC;4BACH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;;;;;+BAAC,UAAC,IAAS,EAAE,KAAa,EAAE,GAAQ;gCACxD,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;oCACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iCACtB;6BACF,EAAC,CAAC;4BACH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;;;;;+BAAC,UAAC,IAAS,EAAE,KAAa,EAAE,GAAQ;gCACxD,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;oCACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iCACtB;6BACF,EAAC,CAAC;4BACH,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,MAAM;wBACR,KAAK,CAAC;4BACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;;;;;+BAAC,UAAC,IAAS,EAAE,KAAa,EAAE,GAAQ;gCACxD,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;oCACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iCACtB;6BACF,EAAC,CAAC;4BACH,MAAM;qBACT;iBAEF;aACF;;oBApJFJ,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,4mCAAqC;;qBAEtC;;;;;kCAKEK,QAAK;2BAWLA,QAAK;;QAiIR,2BAAC;KArJD;;;;;;;QC2BsCP,oCAAS;QAI7C,0BACE,SAA2B,EACnB,KAAqB,EACtB,eAAgC;YAHzC,YAIE,iBAAO,SAER;YAJS,WAAK,GAAL,KAAK,CAAgB;YACtB,qBAAe,GAAf,eAAe,CAAiB;YALzC,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YACnC,YAAM,GAAoB,IAAI,CAAC;YAM7B,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAID,oCAAS;;;;;YAAT;gBAAA,iBAmBC;;oBAlBK,IAAI,GAAG;oBACT,WAAW,EAAE,IAAI,CAAC,KAAK;iBACxB;gBACD,IAAI,CAAC,eAAe,CAAC,iBAAiB,CACpC;oBACE,OAAO,EAAE,MAAM;oBACf,IAAI,EAAE,OAAO;oBACb,SAAS,EAAE,oBAAoB;iBAChC,EACD,IAAI;;;;mBACJ,UAAC,QAAa,EAAE,KAAU;;wBACpB,UAAU,GAAG,QAAQ,CAAC,YAAY;oBACtC,KAAI,CAAC,EAAE,CAAC,OAAO,GAAG,UAAU,CAAC;oBAE7B,KAAK,CAAC,OAAO,EAAE,CAAC;iBACjB,EACF,CAAC;aAEH;;oBAhEFC,YAAS,SAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,QAAQ,EAAE,0/BA2BT;qBACF;;;;;wBApCQ,gBAAgB;wBAEhBG,iBAAc;wBACd,eAAe;;;QAoExB,uBAAC;KAAA,CAlCqCF,gBAAS;;;;;;;QC5BXH,kCAAS;QAG3C,wBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;QAED,sBAAI,sCAAU;;;gBAAd;;oBACM,MAAM,GAAO,EAAE;gBACnB,IAAG,IAAI,CAAC,EAAE,IAAE,SAAS,IAAI,IAAI,CAAC,EAAE,IAAE,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,WAAW,IAAG,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,WAAW,IAAE,IAAI,IAAK,IAAI,CAAC,EAAE,CAAC,GAAG,IAAG,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAE,IAAI,EAAE;;wBAEnJ,KAAK,GAAC,IAAI,CAAC,EAAE,CAAC,WAAW;oBAC7B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAC,CAAC,EAAE,EAAC;wBAC5B,MAAM,CAAC,IAAI,CAAC;4BACV,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,KAAK;yBACZ,CAAC,CAAC;wBACH,KAAK,GAAC,KAAK,GAAC,CAAC,CAAC;qBACf;iBACF;gBACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;gBACnB,OAAO,MAAM,CAAC;aACf;;;WAAA;;oBA7BFC,YAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,YAET;qBACF;;;;;wBARQ,gBAAgB;;;QAkCzB,qBAAC;KAAA,CAzBmCC,gBAAS;;;;;;;QCsDVH,iCAAS;QAG1C,uBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAGD,iCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrD;;;;;;QAED,kCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAC,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;;oBA3EFC,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,q6EAwDT;qBACF;;;;;wBA9DQ,gBAAgB;;;QA+EzB,oBAAC;KAAA,CAhBkCC,gBAAS;;;;;;;QC5CVH,gCAAS;QAGzC,sBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;oBAtBFC,YAAS,SAAC;wBACT,QAAQ,EAAE,eAAe;wBACzB,QAAQ,EAAE,mUAYT;qBACF;;;;;wBAlBQ,gBAAgB;;;QA0BzB,mBAAC;KAAA,CAPiCC,gBAAS;;;;;;;QCDPH,kCAAS;QAG3C,wBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;oBArBFC,YAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,+WAWT;qBACF;;;;;wBAjBQ,gBAAgB;;;QAyBzB,qBAAC;KAAA,CAPmCC,gBAAS;;;;;;;QCiCVH,iCAAS;QAG1C,uBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;oBAtDFC,YAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,guDA4CT;qBACF;;;;;wBAlDQ,gBAAgB;;;QA2DzB,oBAAC;KAAA,CARkCC,gBAAS;;;;;;;QCnBVH,gCAAS;QAUzC,sBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAXD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAUjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;QAVD,sBAAI,gCAAM;;;gBAAV;;oBACM,MAAM,GAAC,YAAY;gBACvB,IAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAE,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAE,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAE,EAAE,EAAC;oBAClF,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;iBAC5B;gBACD,OAAO,MAAM,CAAC;aACf;;;WAAA;;oBAtCFC,YAAS,SAAC;wBACT,QAAQ,EAAE,eAAe;wBACzB,QAAQ,EAAE,gwBAyBT;qBACF;;;;;wBA/BQ,gBAAgB;;;QA+CzB,mBAAC;KAAA,CAfiCC,gBAAS;;;;;;;QCDTH,gCAAS;QAGzC,sBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;oBAlCFC,YAAS,SAAC;wBACT,QAAQ,EAAE,eAAe;wBACzB,QAAQ,EAAE,wwBAwBT;qBACF;;;;;wBA9BQ,gBAAgB;;;QAwCzB,mBAAC;KAAA,CATiCC,gBAAS;;;;;;;QCiBVH,+BAAS;QAGxC,qBAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAGD,+BAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,gCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,kCAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBAhEFC,YAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,u7CAyCT;qBACF;;;;;wBA/CQ,gBAAgB;;;QAoEzB,kBAAC;KAAA,CApBgCC,gBAAS;;;;;;;QCSFH,sCAAS;QAG/C,4BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAKnC,WAAK,GAAQ;gBACX,CAAC,EAAE,GAAG;gBACN,EAAE,EAAE,IAAI;gBACR,EAAE,EAAE,IAAI;gBACR,EAAE,EAAE,IAAI;gBACR,EAAE,EAAE,IAAI;gBACR,GAAG,EAAE,KAAK;aACX,CAAC;YATA,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAUD,sCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,uCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,yCAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBAhFFC,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,wzDAkDT;qBACF;;;;;wBAxDQ,gBAAgB;;;QAoFzB,yBAAC;KAAA,CA3BuCC,gBAAS;;;;;;AC3DjD;QAwCE;YArBA,UAAK,GAAC,CAAC,CAAC;YACR,wBAAmB,GAAC,CAAC,CAAC;YACtB,oBAAe,GAAK,EAAE,CAAC;YAEvB,uBAAkB,GAAU,EAAE,CAAC;SAmB9B;QAjBD,sBAAa,+CAAW;;;;gBAAxB,UAAyB,KAAuB;gBAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;gBAClC,IAAG,KAAK,IAAE,SAAS,IAAI,KAAK,IAAE,IAAI,IAAI,KAAK,CAAC,eAAe,IAAG,SAAS,IAAI,KAAK,CAAC,eAAe,IAAE,IAAI,IAAI,KAAK,CAAC,eAAe,CAAC,OAAO,IAAE,SAAS,IAAI,KAAK,CAAC,eAAe,CAAC,OAAO,IAAE,IAAI,EAAC;oBACxL,IAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,EAAC;wBAC9C,IAAI,CAAC,kBAAkB,GAAGG,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;wBACrE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;qBAClD;yBAAI;wBACH,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;qBAC9B;iBACF;qBAAI;oBACH,IAAI,CAAC,kBAAkB,GAAE,EAAE,CAAC;iBAC7B;aAEF;;;WAAA;;;;QAMD,yCAAQ;;;YAAR;aACC;;;;;QAED,4CAAW;;;;YAAX,UAAY,OAAsB;aACjC;;;;;QAED,4CAAW;;;;YAAX,UAAY,KAAS;gBACnB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA;aACtD;;;;QAED,6CAAY;;;YAAZ;gBACE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACjD;;oBA7CFJ,YAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,6wDAAqC;;qBAEtC;;;;;kCASEK,QAAK;;QAiCR,6BAAC;KA9CD;;;;;;;QCqCwCP,sCAAS;QAsB/C,4BAAY,SAA2B,EAC9B,eAAgC;YADzC,YAEE,iBAAO,SAGR;YAJQ,qBAAe,GAAf,eAAe,CAAiB;YArBzC,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YACnC,WAAK,GAAW,CAAC,CAAC;YAClB,mBAAa,GAAQ;gBACnB,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;aACT,CAAA;YAkBC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;SAChB;QAlBD,sBAAI,4CAAY;;;gBAAhB;gBAAA,iBAWC;gBAVC,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,IAAI,SAAS,EAAE;oBAClE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;;;uBAAC,UAAC,IAAS;wBAChC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,EAAE;4BAC5B,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;4BAEtC,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;yBACpD;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,IAAI,CAAC,aAAa,CAAC;aAC3B;;;WAAA;;;;QASD,yCAAY;;;YAAZ;gBAAA,iBAUC;gBATC,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,IAAI,SAAS,EAAE;oBAChC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;;;uBAAC,UAAC,IAAS;wBAChC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,EAAE;4BAC5B,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;4BAEtC,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;yBACpD;qBACF,EAAC,CAAC;iBACJ;aACF;;;;QAED,sCAAS;;;YAAT;gBAAA,iBAiBC;;oBAhBK,IAAI,GAAG;oBACT,WAAW,EAAE,IAAI,CAAC,KAAK;iBACxB;gBACD,IAAI,CAAC,eAAe,CAAC,iBAAiB,CACpC;oBACE,OAAO,EAAE,MAAM;oBACf,IAAI,EAAE,OAAO;oBACb,SAAS,EAAE,sBAAsB;iBAClC,EACD,IAAI;;;;mBACJ,UAAC,QAAa,EAAE,KAAU;oBACxB,KAAI,CAAC,EAAE,CAAC,OAAO,GAAG,QAAQ,CAAC,kBAAkB,CAAC;oBAC9C,KAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAK,CAAC,OAAO,EAAE,CAAC;iBACjB,EACF,CAAC;aACH;;oBAnGFC,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,w5CAqCT;qBACF;;;;;wBA9CQ,gBAAgB;wBAGhB,eAAe;;;QAuGxB,yBAAC;KAAA,CA3DuCC,gBAAS;;;;;;;QCSRH,uCAAS;QAGhD,6BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;;QAID,gDAAkB;;;;;;YAAlB,UAAmB,KAAS,EAAC,QAAY,EAAC,MAAU;;oBAC9C,MAAM,GAAO,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;gBAE7C,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAE9D,IAAG,CAAC,MAAM,CAAC,IAAI;;;uBAAC,UAAC,IAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,CAAA,EAAC,EAAC,EAAC;wBACjE,MAAM,CAAC,IAAI,CAAC;4BACV,OAAO,EAAC,QAAQ,CAAC,KAAK;4BACtB,OAAO,EAAC,CAAC;oCACP,QAAQ,EAAC,MAAM,CAAC,KAAK;oCACrB,WAAW,EAAC,IAAI;iCACjB,CAAC;yBACH,CAAC,CAAA;qBACH;yBAAI;wBACH,MAAM,CAAC,OAAO;;;2BAAC,UAAC,IAAQ;4BACtB,IAAG,IAAI,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;gCAC9B,IAAI,CAAC,OAAO,GAAC,CAAC;wCACZ,QAAQ,EAAC,MAAM,CAAC,KAAK;wCACrB,WAAW,EAAC,IAAI;qCACjB,CAAC,CAAA;6BACH;yBACF,EAAC,CAAC;qBACJ;iBACF;qBAAI;oBACH,MAAM,CAAC,IAAI,CAAC;wBACV,OAAO,EAAC,QAAQ,CAAC,KAAK;wBACtB,OAAO,EAAC,CAAC;gCACP,QAAQ,EAAC,MAAM,CAAC,KAAK;gCACrB,WAAW,EAAC,IAAI;6BACjB,CAAC;qBACH,CAAC,CAAA;iBACH;gBACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;;;;;;QAED,+CAAiB;;;;;YAAjB,UAAkB,QAAa,EAAE,MAAW;;oBAEtC,MAAM,GAAG,EAAE;;oBACX,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;gBACnC,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAC,KAAS;wBACvB,IAAG,KAAK,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;4BAC/B,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAE;yBACrC;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,MAAM,CAAC;aACf;;;;;;QAGD,uCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,yCAAW;;;;;YAAX;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;;;;;QAED,wCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,0CAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBAhIFC,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,y7DAiDT;qBACF;;;;;wBAvDQ,gBAAgB;;;QAoIzB,0BAAC;KAAA,CA5EwCC,gBAAS;;;;;;;QCQNH,0CAAS;QAInD,gCAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YALD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAIjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAED,gDAAe;;;;;YAAf,UAAgB,QAAY,EAAC,MAAU;gBACrC,OAAO;oBACL,OAAO,EAAC,QAAQ,CAAC,KAAK;oBACtB,QAAQ,EAAC,MAAM,CAAC,KAAK;iBACtB,CAAA;aACF;;;;;QAED,yCAAQ;;;;YAAR,UAAS,MAAa;;oBAChB,GAAG,GAAQ,EAAE;gBACjB,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAC,KAAS;wBACvB,IAAG,CAAC,GAAG,CAAC,IAAI;;;2BAAC,UAAC,IAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,IAAE,KAAK,CAAC,OAAO,CAAA,EAAC,EAAC,EAAC;4BAC7D,GAAG,CAAC,IAAI,CACN;gCACE,OAAO,EAAC,KAAK,CAAC,OAAO;gCACrB,OAAO,EAAC,CAAC;wCACP,QAAQ,EAAC,KAAK,CAAC,QAAQ;wCACvB,WAAW,EAAC,IAAI;qCACjB,CAAC;6BACH,CACF,CAAA;yBACF;6BAAI;4BACH,GAAG,CAAC,OAAO;;;+BAAC,UAAC,IAAQ;gCACnB,IAAG,IAAI,CAAC,OAAO,IAAE,KAAK,CAAC,OAAO,EAAC;oCAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wCAChB,QAAQ,EAAC,KAAK,CAAC,QAAQ;wCACvB,WAAW,EAAC,IAAI;qCACjB,CAAC,CAAA;iCACH;6BACF,EAAC,CAAA;yBACH;qBACF,EAAC,CAAA;iBACH;gBACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;;;;;;QAED,kDAAiB;;;;;YAAjB,UAAkB,QAAa,EAAE,MAAW;;oBAEtC,MAAM,GAAG,KAAK;;oBACd,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;gBACnC,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAC,KAAS;wBACvB,IAAG,KAAK,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;4BAC/B,KAAK,CAAC,OAAO,CAAC,OAAO;;;+BAAC,UAAC,IAAQ;gCAC7B,IAAG,IAAI,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;oCAC7B,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC;iCACzB;6BACF,EAAC,CAAA;yBACH;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,MAAM,CAAC;aACf;;;;;;QAGD,0CAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,4CAAW;;;;;YAAX;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;;;;;QAED,2CAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,6CAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBA5IFC,YAAS,SAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,QAAQ,EAAE,wiEAyDT;qBACF;;;;;wBA/DQ,gBAAgB;;;QAgJzB,6BAAC;KAAA,CAhF2CC,gBAAS;;;;;;;QCRZH,uCAAS;QAGhD,6BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;;QAED,gDAAkB;;;;;;YAAlB,UAAmB,KAAS,EAAC,QAAY,EAAC,MAAU;;oBAC9C,MAAM,GAAO,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;gBAE7C,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAE9D,IAAG,CAAC,MAAM,CAAC,IAAI;;;uBAAC,UAAC,IAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,CAAA,EAAC,EAAC,EAAC;wBACjE,MAAM,CAAC,IAAI,CAAC;4BACV,OAAO,EAAC,QAAQ,CAAC,KAAK;4BACtB,OAAO,EAAC,CAAC;oCACP,QAAQ,EAAC,MAAM,CAAC,KAAK;oCACrB,WAAW,EAAC,KAAK;iCAClB,CAAC;yBACH,CAAC,CAAA;qBACH;yBAAI;wBACH,MAAM,CAAC,OAAO;;;2BAAC,UAAC,IAAQ;4BACtB,IAAG,IAAI,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;gCAC9B,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;;;mCAAC,UAAC,EAAM,IAAI,OAAO,EAAE,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,CAAA,EAAC,EAAC,EAAC;oCAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wCAChB,QAAQ,EAAC,MAAM,CAAC,KAAK;wCACrB,WAAW,EAAC,KAAK;qCAClB,CAAC,CAAA;iCACH;qCAAI;oCACH,IAAI,CAAC,OAAO,CAAC,OAAO;;;uCAAC,UAAC,EAAM;wCAC1B,IAAG,EAAE,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;4CAC3B,EAAE,CAAC,WAAW,GAAC,KAAK,CAAA;yCACrB;qCACF,EAAC,CAAC;iCACJ;6BACF;yBACF,EAAC,CAAC;qBACJ;iBACF;qBAAI;oBACH,MAAM,CAAC,IAAI,CAAC;wBACV,OAAO,EAAC,QAAQ,CAAC,KAAK;wBACtB,OAAO,EAAC,CAAC;gCACP,QAAQ,EAAC,MAAM,CAAC,KAAK;gCACrB,WAAW,EAAC,KAAK;6BAClB,CAAC;qBACH,CAAC,CAAA;iBACH;gBACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;;;;;;QAED,+CAAiB;;;;;YAAjB,UAAkB,QAAa,EAAE,MAAW;;oBAEtC,MAAM,GAAG,CAAC;;oBACV,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;gBACnC,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAC,KAAS;wBACvB,IAAG,KAAK,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;4BAC/B,KAAK,CAAC,OAAO,CAAC,OAAO;;;+BAAC,UAAC,IAAQ;gCAC7B,IAAG,IAAI,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;oCAC7B,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC;iCACzB;6BACF,EAAC,CAAA;yBACH;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,MAAM,CAAC;aACf;;;;;;QAGD,uCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,yCAAW;;;;;YAAX;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;;;;;QAED,wCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,0CAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBA1IFC,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,o2DAiDT;qBACF;;;;;wBAvDQ,gBAAgB;;;QA8IzB,0BAAC;KAAA,CAtFwCC,gBAAS;;;;;;;QCATH,uCAAS;QAGhD,6BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;;QAED,gDAAkB;;;;;;YAAlB,UAAmB,KAAS,EAAC,QAAY,EAAC,MAAU;;oBAC9C,MAAM,GAAO,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;gBAE7C,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAE9D,IAAG,CAAC,MAAM,CAAC,IAAI;;;uBAAC,UAAC,IAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,CAAA,EAAC,EAAC,EAAC;wBACjE,MAAM,CAAC,IAAI,CAAC;4BACV,OAAO,EAAC,QAAQ,CAAC,KAAK;4BACtB,OAAO,EAAC,CAAC;oCACP,QAAQ,EAAC,MAAM,CAAC,KAAK;oCACrB,WAAW,EAAC,KAAK;iCAClB,CAAC;yBACH,CAAC,CAAA;qBACH;yBAAI;wBACH,MAAM,CAAC,OAAO;;;2BAAC,UAAC,IAAQ;4BACtB,IAAG,IAAI,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;gCAC9B,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;;;mCAAC,UAAC,EAAM,IAAI,OAAO,EAAE,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,CAAA,EAAC,EAAC,EAAC;oCAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;wCAChB,QAAQ,EAAC,MAAM,CAAC,KAAK;wCACrB,WAAW,EAAC,KAAK;qCAClB,CAAC,CAAA;iCACH;qCAAI;oCACH,IAAI,CAAC,OAAO,CAAC,OAAO;;;uCAAC,UAAC,EAAM;wCAC1B,IAAG,EAAE,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;4CAC3B,EAAE,CAAC,WAAW,GAAC,KAAK,CAAA;yCACrB;qCACF,EAAC,CAAC;iCACJ;6BACF;yBACF,EAAC,CAAC;qBACJ;iBACF;qBAAI;oBACH,MAAM,CAAC,IAAI,CAAC;wBACV,OAAO,EAAC,QAAQ,CAAC,KAAK;wBACtB,OAAO,EAAC,CAAC;gCACP,QAAQ,EAAC,MAAM,CAAC,KAAK;gCACrB,WAAW,EAAC,KAAK;6BAClB,CAAC;qBACH,CAAC,CAAA;iBACH;gBACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;;;;;;QAED,+CAAiB;;;;;YAAjB,UAAkB,QAAa,EAAE,MAAW;;oBAEtC,MAAM,GAAG,IAAI;;oBACb,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;gBACnC,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAC,KAAS;wBACvB,IAAG,KAAK,CAAC,OAAO,IAAE,QAAQ,CAAC,KAAK,EAAC;4BAC/B,KAAK,CAAC,OAAO,CAAC,OAAO;;;+BAAC,UAAC,IAAQ;gCAC7B,IAAG,IAAI,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;oCAC7B,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC;iCACzB;6BACF,EAAC,CAAA;yBACH;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,MAAM,CAAC;aACf;;;;;;QAED,uCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,yCAAW;;;;;YAAX;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5D;;;;;;QAED,wCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,0CAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBAzIFC,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,u2DAiDT;qBACF;;;;;wBAvDQ,gBAAgB;;;QA6IzB,0BAAC;KAAA,CArFwCC,gBAAS;;;;;;;QChBVH,sCAAS;QAG/C,4BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YAJD,UAAI,GAAQC,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;YAGjC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;;QAED,+CAAkB;;;;;YAAlB,UAAmB,KAAS,EAAC,MAAU;;oBACjC,MAAM,GAAO,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;gBAE7C,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAE9D,IAAG,CAAC,MAAM,CAAC,IAAI;;;uBAAC,UAAC,IAAQ,IAAI,OAAO,IAAI,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,CAAA,EAAC,EAAC,EAAC;wBAChE,MAAM,CAAC,IAAI,CAAC;4BACV,QAAQ,EAAC,MAAM,CAAC,KAAK;4BACrB,WAAW,EAAC,KAAK;yBAClB,CAAC,CAAA;qBACH;yBAAI;wBACH,MAAM,CAAC,OAAO;;;2BAAC,UAAC,IAAQ;4BACtB,IAAG,IAAI,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;gCAC7B,IAAI,CAAC,WAAW,GAAC,KAAK,CAAA;6BACvB;yBACF,EAAC,CAAC;qBACJ;iBACF;qBAAI;oBACH,MAAM,CAAC,IAAI,CAAC;wBACV,QAAQ,EAAC,MAAM,CAAC,KAAK;wBACrB,WAAW,EAAC,KAAK;qBAClB,CAAC,CAAA;iBACH;gBACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;;;;;QAED,8CAAiB;;;;YAAjB,UAAkB,MAAW;;oBACvB,MAAM,GAAG,IAAI;;oBACb,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;gBACnC,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,MAAM,CAAC,OAAO;;;uBAAC,UAAC,KAAS;wBACvB,IAAG,KAAK,CAAC,QAAQ,IAAE,MAAM,CAAC,KAAK,EAAC;4BAC9B,MAAM,GAAC,KAAK,CAAC,WAAW,CAAC;yBAC1B;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,MAAM,CAAC;aACf;;;;;;QAGD,sCAAS;;;;;YAAT;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACvD;;;;;;QAED,uCAAU;;;;;YAAV;gBACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxD;;;;;;;QAED,yCAAY;;;;;;YAAZ,UAAa,MAAW;gBACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9D;;oBAhGFC,YAAS,SAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,QAAQ,EAAE,q8CAiCT;qBACF;;;;;wBAvCQ,gBAAgB;;;QAoGzB,yBAAC;KAAA,CA5DuCC,gBAAS;;;;;;;;;;;;QCVLH,0CAAY;QA7BxD;;SA6B2D;;oBA7B1DE,YAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,o6BAyBT;qBACF;;QACyD,6BAAC;KAAA,CAAfM,mBAAY;;;;;;;;;;;;QCZlBR,oCAAS;QAX/C;;SAWkD;;oBAXjDE,YAAS,SAAC;wBACT,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,2HAGT;wBACD,IAAI,EAAE;4BACJ,SAAS,EAAE,uBAAuB;4BAClC,OAAO,EAAE,EAAE;yBACZ;qBACF;;QACgD,uBAAC;KAAA,CAAZC,gBAAS;;;;;;;QC6DRH,qCAAc;QAGnD,2BAAY,SAA2B;YAAvC,YACE,iBAAO,SAER;YADC,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;;SAC1B;;;;;QAED,4CAAgB;;;;YAAhB,UAAiB,IAAY;gBAC3B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACjD;;;;;QAED,4CAAgB;;;;YAAhB,UAAiB,IAAY;gBAC3B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACjD;;;;;QAED,kCAAM;;;;YAAN,UAAO,CAAM;gBACX,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7D,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAChB,AACA;aACF;;oBA7FFE,YAAS,SAAC;wBACT,QAAQ,EAAE,eAAe;wBACzB,QAAQ,EAAE,07EAgET;wBACD,IAAI,EAAE;4BACJ,SAAS,EAAE,uBAAuB;4BAClC,OAAO,EAAE,EAAE;yBACZ;qBACF;;;;;wBAzEQ,gBAAgB;;;QAgGzB,wBAAC;KAAA,CAtBsCO,qBAAc;;;;;;AChFrD;AAgCA,QAAa,qBAAqB,GAAG;QAEnC,aAAa;QACb,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,YAAY;QACZ,cAAc;QACd,aAAa;QACb,YAAY;QACZ,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,kBAAkB;QAClB,mBAAmB;QACnB,sBAAsB;QACtB,mBAAmB;QACnB,mBAAmB;QACnB,kBAAkB;;QAGlB,kBAAkB;;QAGlB,gBAAgB;QAChB,gBAAgB;QAChB,iBAAiB;;QAGjB,sBAAsB;KACvB;;AAED,QAAa,uBAAuB,GAAiB;QACnD,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACjE;YACD;gBACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACvE;YACD;gBACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACvE;YACD;gBACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACvE;YACD;gBACE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACnE;YACD;gBACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACjE;YACD;gBACE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC/D;YACD;gBACE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACnE;YACD;gBACE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACjE;YACD;gBACE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC/D;YACD;gBACE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC/D;YACD;gBACE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC7D;YACD;gBACE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kBAAkB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC3E;YACD;gBACE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kBAAkB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC3E;YACD;gBACE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mBAAmB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,sBAAsB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aACpF;YACD;gBACE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mBAAmB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,mBAAmB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC9E;YACD;gBACE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kBAAkB,EAAC,QAAQ,EAAE,CAAC,YAAY,CAAC;aAC5E;YACD;gBACE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gBAAgB;aAC/C;YACD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE;YAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,iBAAiB,EAAE;YAEhD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,kBAAkB;gBAC7B,QAAQ,EAAE,CAAC,YAAY,CAAC;aACzB;SACF;QACD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sBAAsB,EAAE,CAAC;KACtE;;;;;;AC1ID;;;;;AACA,aAAgB,WAAW,CAAC,KAAwB,EAAE,GAAW;QAC/D,OAAOC,KAAK,CAAC,KAAK,EAAE,kBAAkB,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACrD,CAAC;;;;;;AACD,aAAgB,yBAAyB,CAAC,GAAQ,EAAE,KAAwB;QAC1E,OAAU,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,6BAAM,CAAC;IAC9C,CAAC;;;;;;AACD,aAAgB,0BAA0B,CAAC,GAAQ,EAAE,KAAwB;QAC3E,OAAU,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,sCAAQ,WAAW,CACtD,KAAK,EACL,WAAW,CACV,CAAC;IACN,CAAC;;;;;;AACD,aAAgB,0BAA0B,CAAC,GAAQ,EAAE,KAAwB;QAC3E,OAAU,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,sCAAQ,WAAW,CACtD,KAAK,EACL,WAAW,CACV,CAAC;IACN,CAAC;;;;;;AACD,aAAgB,oBAAoB,CAAC,GAAQ,EAAE,KAAwB;QACrE,OAAU,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,gCAAO,WAAW,CAAC,KAAK,EAAE,KAAK,CAAG,CAAC;IAC1E,CAAC;;;;;;AACD,aAAgB,oBAAoB,CAAC,GAAQ,EAAE,KAAwB;QACrE,OAAU,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,gCAAO,WAAW,CAAC,KAAK,EAAE,KAAK,CAAG,CAAC;IAC1E,CAAC;;AAED,QAAW,gBAAgB,GAAG;QAC5B,kBAAkB,EAAE;YAClB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;YACxD,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE;YACpC,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,0BAA0B,EAAE;YAC1D,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,0BAA0B,EAAE;YAC1D,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,oBAAoB,EAAE;YAC9C,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,oBAAoB,EAAE;YAC9C,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE;YACvC,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,EAAE;YAC7C,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,EAAE;YAC7C,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE;YACrC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE;YACrC,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,iCAAiC,EAAE;YACnE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;YAClC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE;SACzC;QACD,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;YAsBJ,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE;YACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;SACvC;KACF;;;;;;ACrED;QAYE,qBAAoBC,OAAgB;YAAhB,SAAI,GAAJA,OAAI,CAAY;YAE5B,aAAQ,GAAG,KAAK,CAAC;SAFe;QAIxC,sBAAI,gCAAO;;;gBAAX;gBACE,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;;;WAAA;;;;;QAED,iCAAW;;;;YAAX,UAAY,MAAW;;;;;;;gBAOrB,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;oBAC3C,MAAM,GAAG,EAAE,CAAC;iBACb;gBACD,OAAO,IAAIC,eAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/C;;;;;QAED,gCAAU;;;;YAAV,UAAW,GAAQ;;oBACb,aAAa,GAAG,EAAE;gBACtB,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;oBACnB,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC9B,aAAa,IAAI,GAAG,CAAC;qBACtB;oBACD,aAAa,IAAI,GAAG,GAAG,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC3D;gBACD,OAAO,aAAa,CAAC;aACtB;;;;;;QAED,gCAAU;;;;;YAAV,UAAW,GAAW,EAAE,MAAY;gBAClC,IAAI,CAAC,MAAM;oBAAE,OAAO,GAAG,CAAC;gBACxB,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;;oBAC9B,GAAG,GAAa,EAAE;gBACxB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;oBACxB,GAAG,CAAC,IAAI,CAAI,GAAG,SAAI,MAAM,CAAC,GAAG,CAAG,CAAC,CAAC;iBACnC;gBACD,OAAO,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC5B;;;;QAED,2BAAK;;;YAAL;gBAAA,iBAEC;gBADC,UAAU;;mBAAC,cAAM,QAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,IAAC,EAAC,CAAC;aAC1C;;;;QAED,yBAAG;;;YAAH;gBAAA,iBAEC;gBADC,UAAU;;mBAAC,cAAM,QAAC,KAAI,CAAC,QAAQ,GAAG,KAAK,IAAC,EAAC,CAAC;aAC3C;;;;;;;;;;;QAgFD,yBAAG;;;;;;;YAAH,UACE,GAAW,EACX,MAAW,EACX,OAMC;gBAED,OAAO,IAAI,CAAC,OAAO,CACjB,KAAK,EACL,GAAG,EACH,MAAM,CAAC,MAAM,CACX;oBACE,MAAM,QAAA;iBACP,EACD,OAAO,CACR,CACF,CAAC;aACH;;;;;;;;;;;;QAuED,0BAAI;;;;;;;;YAAJ,UACE,GAAW,EACX,IAAS,EACT,MAAW,EACX,OAMC;gBAED,OAAO,IAAI,CAAC,OAAO,CACjB,MAAM,EACN,GAAG,EACH,MAAM,CAAC,MAAM,CACX;oBACE,IAAI,MAAA;oBACJ,MAAM,QAAA;iBACP,EACD,OAAO,CACR,CACF,CAAC;aACH;;;;;;;;;;;QAkDD,4BAAM;;;;;;;YAAN,UACE,GAAW,EACX,MAAW,EACX,OAMC;gBAED,OAAO,IAAI,CAAC,OAAO,CACjB,QAAQ,EACR,GAAG,EACH,MAAM,CAAC,MAAM,CACX;oBACE,MAAM,QAAA;iBACP,EACD,OAAO,CACR,CACF,CAAC;aACH;;;;;;;;;;;;;;;;QASD,2BAAK;;;;;;;;YAAL,UACE,GAAW,EACX,MAAY,EACZ,aAAwC;gBAH1C,iBAcC;gBAXC,8BAAA;oBAAA,gCAAwC;;gBAExC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC,IAAI,CACtEC,aAAG;;mBAAC;oBACF,KAAI,CAAC,GAAG,EAAE,CAAC;iBACZ,EAAC,EACFC,oBAAU;;;mBAAC,UAAA,GAAG;oBACZ,KAAI,CAAC,GAAG,EAAE,CAAC;oBACX,OAAOC,eAAU,CAAC,GAAG,CAAC,CAAC;iBACxB,EAAC,CACH,CAAC;aACH;;;;;;;;;;;;QAuED,2BAAK;;;;;;;;YAAL,UACE,GAAW,EACX,IAAS,EACT,MAAW,EACX,OAMC;gBAED,OAAO,IAAI,CAAC,OAAO,CACjB,OAAO,EACP,GAAG,EACH,MAAM,CAAC,MAAM,CACX;oBACE,IAAI,MAAA;oBACJ,MAAM,QAAA;iBACP,EACD,OAAO,CACR,CACF,CAAC;aACH;;;;;;;;;;;;QAyED,yBAAG;;;;;;;;YAAH,UACE,GAAW,EACX,IAAS,EACT,MAAW,EACX,OAMC;gBAED,OAAO,IAAI,CAAC,OAAO,CACjB,KAAK,EACL,GAAG,EACH,MAAM,CAAC,MAAM,CACX;oBACE,IAAI,MAAA;oBACJ,MAAM,QAAA;iBACP,EACD,OAAO,CACR,CACF,CAAC;aACH;;;;;;;;;;;;;;;;QAuCD,6BAAO;;;;;;;;YAAP,UACE,MAAc,EACd,GAAW,EACX,OAgBC;gBAnBH,iBAqCC;gBAhBC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,OAAO,EAAE;oBACX,IAAI,OAAO,CAAC,MAAM;wBAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACtE,IAAI,OAAO,CAAC,IAAI,EAAE,CAEjB;iBACF;gBACD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CACjDF,aAAG;;mBAAC;oBACF,KAAI,CAAC,GAAG,EAAE,CAAC;iBACZ,EAAC,EACFC,oBAAU;;;mBAAC,UAAA,GAAG;oBACZ,KAAI,CAAC,GAAG,EAAE,CAAC;oBACX,OAAOC,eAAU,CAAC,GAAG,CAAC,CAAC;iBACxB,EAAC,CACH,CAAC;aACH;;oBA7lBFhB,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;wBARhCiB,eAAU;;;;0BAFZ;KAUA;;;;;;ACVA;QAQE,qBAAoB,KAAkB;YAAlB,UAAK,GAAL,KAAK,CAAa;SAAK;;;;;;;;QAG3C,uCAAiB;;;;;;;YAAjB,UAAkB,GAAW,EAAE,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;gBACxC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;;QAED,iCAAW;;;;;YAAX,UAAY,GAAW,EAAE,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;gBAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;;;QAGD,uCAAiB;;;;;;YAAjB,UAAkB,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;;;oBAEvB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;;oBACpC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC;gBACxC,OAAO,MAAM,CAAC;aACf;;;;;;;QAGD,sCAAgB;;;;;;YAAhB,UAAiB,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;;;oBAEtB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;gBAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;;;QAGD,2CAAqB;;;;;;YAArB,UAAsB,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;;;oBAE3B,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;gBACvC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;;;QAGD,mCAAa;;;;;;YAAb,UAAc,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;;oBACnB,GAAG,GAAG,aAAa;gBAEvB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;;;QAGD,iCAAW;;;;;;YAAX,UAAY,MAAW;gBAAX,uBAAA;oBAAA,WAAW;;;;oBAEjB,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;gBACpC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;QAED,mCAAa;;;;YAAb,UAAc,IAAY;;oBACpB,MAAM,GAAG,EAAE;;oBACX,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;gBAC/C,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE;;wBAC5C,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC5B,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;iBACvB;gBACD,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,EAAE;oBACzC,MAAM,GAAG,EAAE,CAAC;iBACb;gBACD,OAAO,MAAM,CAAC;aACf;;oBA9DFjB,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wBAHQ,WAAW;;;;0BAHpB;KAIA;;;;;;ACJA;QAKE;SAAiB;;;;;;;;;;;;;;;QAOjB,qCAAY;;;;;;;;;YAAZ,UAAa,YAAiB;;oBACxB,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEE,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,OAAO;iBACd;gBACD,QAAQ,YAAY,CAAC,GAAG;oBACtB,KAAK,SAAS;wBACZ,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;wBACnC,MAAM;oBACR,KAAK,QAAQ;wBACX,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACR,KAAK,KAAK;wBACR,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;wBAC/B,MAAM;oBACR,KAAK,WAAW;wBACd,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;wBACrC,MAAM;oBACR,KAAK,YAAY;wBACf,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;wBACtC,MAAM;oBACR,KAAK,UAAU;wBACb,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;wBACpC,MAAM;oBACR;wBACE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;wBACnC,MAAM;iBACT;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,4CAAmB;;;;;;;YAA3B,UAA4B,QAA2B;gBACrD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT,CAAC;iBACH,CAAA;aACF;;;;;;;;QAGO,2CAAkB;;;;;;;YAA1B,UAA2B,QAA2B;gBACpD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT,CAAC;iBACH,CAAA;aACF;;;;;;;;QAGO,wCAAe;;;;;;;YAAvB,UAAwB,QAA2B;gBACjD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,QAAQ;oBACf,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT,CAAC;iBACH,CAAA;aACF;;;;;;;;QAGO,8CAAqB;;;;;;;YAA7B,UAA8B,QAA2B;gBACvD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,OAAO;4BACd,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,IAAI;4BACX,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,UAAU;4BACjB,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,UAAU;4BACjB,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT,CAAC;iBACH,CAAA;aACF;;;;;;;;QAGO,+CAAsB;;;;;;;YAA9B,UAA+B,QAA2B;gBACxD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,WAAW;oBAClB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE;wBACP;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,aAAa;4BACpB,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,oBAAoB;4BAC3B,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,mBAAmB;4BAC1B,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,wBAAwB;4BAC/B,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,oBAAoB;4BAC3B,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,0BAA0B;4BACjC,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,WAAW;4BAClB,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,OAAO;4BACd,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,SAAS;4BAChB,KAAK,EAAE,IAAI;4BACX,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,IAAI;4BACX,KAAK,EAAE,IAAI;4BACX,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,IAAI;4BACX,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,aAAa;4BACpB,KAAK,EAAE,IAAI;4BACX,KAAK,EAAE,CAAC;yBACT;qBACF;iBACF,CAAA;aACF;;;;;;;;QAGO,6CAAoB;;;;;;;YAA5B,UAA6B,QAA2B;gBACtD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,UAAU;oBACjB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT,CAAC;iBACH,CAAA;aACF;;oBAlRFF,aAAU;;;;QAmRX,qBAAC;KAnRD;;;;;;ACHA;QAKE;SAAiB;;;;;QAGjB,2CAAe;;;;YAAf,UAAgB,YAAiB;;oBAC3B,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEE,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,UAAU;iBACjB;gBACD,QAAQ,YAAY,CAAC,GAAG;oBACtB,KAAK,SAAS;wBACZ,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;wBACtC,MAAM;oBACR;wBACE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;wBACtC,MAAM;iBACT;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,kDAAsB;;;;;;;YAA9B,UAA+B,QAA2B;gBACxD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,cAAc;oBACrB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;wBACV,GAAG,EAAC,CAAC;wBACL,GAAG,EAAC,CAAC;qBACN;oBACD,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT;wBACD;4BACE,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;4BACV,KAAK,EAAE,CAAC;yBACT,CAAC;iBACH,CAAA;aACF;;oBA7CFF,aAAU;;;;QAgDX,wBAAC;KAhDD;;;;;;ACHA;QAKE;SAAiB;;;;;;;;;;;;;;;QAOjB,qCAAY;;;;;;;;;YAAZ,UAAa,YAAiB;;oBACxB,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEE,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,OAAO;iBACd;gBACD,QAAQ,YAAY,CAAC,GAAG;oBACtB,KAAK,SAAS;wBACZ,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;wBACnC,MAAM;oBACR,KAAK,MAAM;wBACT,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;wBAChC,MAAM;oBACR,KAAK,QAAQ;wBACX,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACR,KAAK,OAAO;wBACV,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;wBACjC,MAAM;oBACR,KAAK,QAAQ;wBACT,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACV;wBACE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;wBACnC,MAAM;iBACT;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,4CAAmB;;;;;;;YAA3B,UAA4B,QAA2B;gBACrD,QAAQ,CAAC,eAAe,GAAC;oBACrB,IAAI,EAAC,SAAS;oBACd,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,yCAAgB;;;;;;;YAAxB,UAAyB,QAA2B;gBAClD,QAAQ,CAAC,eAAe,GAAC;oBACrB,IAAI,EAAC,SAAS;oBACd,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,0CAAiB;;;;;;;YAAzB,UAA0B,QAA2B;gBACnD,QAAQ,CAAC,eAAe,GAAC;oBACrB,IAAI,EAAC,OAAO;oBACZ,KAAK,EAAE,OAAO;oBACd,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,2CAAkB;;;;;;;YAA1B,UAA2B,QAA2B;gBACpD,QAAQ,CAAC,eAAe,GAAC;oBACrB,IAAI,EAAC,QAAQ;oBACb,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGS,2CAAkB;;;;;;;YAA1B,UAA2B,QAA2B;gBACpD,QAAQ,CAAC,eAAe,GAAC;oBACrB,IAAI,EAAC,SAAS;oBACd,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;oBA/GJF,aAAU;;;;QAiHX,qBAAC;KAjHD;;;;;;ACHA;QAKE;SAAiB;;;;;;;;;;;;;;;QAOjB,2CAAe;;;;;;;;;YAAf,UAAgB,YAAiB;;oBAC3B,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEE,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,UAAU;iBACjB;gBACD,QAAQ,YAAY,CAAC,GAAG;oBACtB,KAAK,SAAS;wBACZ,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;wBACtC,MAAM;oBACR,KAAK,OAAO;wBACV,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;wBACpC,MAAM;oBACR,KAAK,UAAU;wBACb,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;wBACvC,MAAM;oBACR,KAAK,YAAY;wBACf,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;wBACzC,MAAM;oBACR;wBACE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;wBACtC,MAAM;iBACT;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,kDAAsB;;;;;;;YAA9B,UAA+B,QAA2B;gBACxD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,SAAS;oBAChB,OAAO,EAAE;wBACP;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,IAAI;yBACX;wBACD;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;wBACD;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;qBACF;iBACF,CAAA;aACF;;;;;;;;QAGO,gDAAoB;;;;;;;YAA5B,UAA6B,QAA2B;gBACtD,QAAQ,CAAC,eAAe,GAAC;oBACrB,KAAK,EAAE,WAAW;oBAClB,OAAO,EAAE;wBACP;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;wBACD;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;qBACF;iBACJ,CAAA;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,mDAAuB;;;;;;;YAA/B,UAAgC,QAA2B;gBACzD,QAAQ,CAAC,eAAe,GAAG;oBACvB,KAAK,EAAE,WAAW;oBAClB,OAAO,EAAE;wBACP;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;wBACD;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;qBACF;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,qDAAyB;;;;;;;YAAjC,UAAkC,QAA2B;gBAC3D,QAAQ,CAAC,eAAe,GAAG;oBACvB,KAAK,EAAE,WAAW;oBAClB,OAAO,EAAE;wBACP;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;wBACD;4BACE,KAAK,EAAC,KAAK;4BACX,KAAK,EAAC,GAAG;4BACT,QAAQ,EAAC;gCACP;oCACE,KAAK,EAAC,OAAO;oCACb,KAAK,EAAC,KAAK;iCACZ;6BACF;yBACF;qBACF;iBACF,CAAA;gBACH,OAAO,QAAQ,CAAC;aACjB;;oBA5JFF,aAAU;;;;QA6JX,wBAAC;KA7JD;;;;;;ACHA;QAKE;SAAiB;;;;;;QAIhB,oCAAW;;;;;YAAX;;oBACK,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEE,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,MAAM;oBACZ,eAAe,EAAE;wBACf,KAAK,EAAE,KAAK;qBACb;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,sCAAa;;;;;YAAb;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,QAAQ;oBACd,eAAe,EAAE;wBACf,KAAK,EAAE,gBAAgB;qBACxB;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGA,oCAAW;;;;;YAAX;;oBACK,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,MAAM;oBACZ,eAAe,EAAE;wBACf,KAAK,EAAE,IAAI;wBACX,QAAQ,EAAE,KAAK;qBAChB;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,oCAAW;;;;;YAAX;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,MAAM;oBACZ,eAAe,EAAE;wBACf,KAAK,EAAE,IAAI;wBACX,QAAQ,EAAE,KAAK;qBAChB;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,qCAAY;;;;;YAAZ;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,OAAO;oBACb,eAAe,EAAE;wBACf,IAAI,EAAC,OAAO;wBACZ,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAC;4BACN,KAAK,EAAC,EAAE;4BACR,KAAK,EAAE,CAAC;4BACR,GAAG,EAAE,CAAC;4BACN,GAAG,EAAE,CAAC;yBACP;qBACF;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,wCAAe;;;;;YAAf;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,UAAU;oBAChB,eAAe,EAAE;wBACf,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAC;4BACN,KAAK,EAAE,CAAC;yBACT;wBACD,OAAO,EAAE,CAAC;gCACR,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,CAAC;6BACT;4BACD;gCACE,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,CAAC;6BACT,CAAC;qBACH;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAID,mCAAU;;;;;YAAV;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,KAAK;oBACX,eAAe,EAAE;wBACf,KAAK,EAAE,qBAAqB;wBAC5B,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,CAAC;gCACR,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,IAAI;gCACX,KAAK,EAAE,IAAI;6BACZ,CAAC;qBACH;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,0CAAiB;;;;;YAAjB;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,YAAY;oBAClB,eAAe,EAAE;wBACf,KAAK,EAAE,QAAQ;wBACf,MAAM,EAAE,MAAM;wBACd,KAAK,EAAE,KAAK;wBACZ,KAAK,EAAE,CAAC;wBACR,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,CAAC;gCACR,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,CAAC;gCACR,KAAK,EAAE,KAAK;6BACb;4BACD;gCACE,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,GAAG;gCACV,KAAK,EAAE,CAAC;gCACR,KAAK,EAAE,KAAK;6BACb,CAAC;qBACH;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,0CAAiB;;;;;YAAjB;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,YAAY;oBAClB,eAAe,EAAE;wBACf,KAAK,EAAE,QAAQ;wBACf,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAC;4BACN,KAAK,EAAE,CAAC;yBACT;wBACD,OAAO,EAAE,CAAC;gCACR,KAAK,EAAE,OAAO;gCACd,KAAK,EAAE,GAAG;gCACV,GAAG,EAAC,gBAAgB;6BACrB;4BACD;gCACE,KAAK,EAAE,OAAO;gCACd,KAAK,EAAE,GAAG;gCACV,GAAG,EAAC,eAAe;6BACpB;4BACD;gCACE,KAAK,EAAE,IAAI;gCACX,KAAK,EAAE,GAAG;gCACV,GAAG,EAAC,gBAAgB;6BACrB;4BACD;gCACE,KAAK,EAAE,MAAM;gCACb,KAAK,EAAE,GAAG;gCACV,GAAG,EAAC,gBAAgB;6BACrB;4BACD;gCACE,KAAK,EAAE,MAAM;gCACb,KAAK,EAAE,GAAG;gCACV,GAAG,EAAC,kBAAkB;6BACvB,EAAE;qBACJ;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;QAGD,0CAAiB;;;;;YAAjB;;oBACM,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,aAAa;oBACnB,eAAe,EAAE;wBACf,KAAK,EAAE,SAAS;wBAChB,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,CAAC;gCACR,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,GAAG;6BACX;4BACD;gCACE,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,GAAG;6BACX,CAAC;qBACH;iBACF;gBACD,OAAO,QAAQ,CAAC;aACjB;;oBA/PFF,aAAU;;;;QAiQX,qBAAC;KAjQD;;;;;;ACHA;QAKE;SAAiB;;;;;;;;;;;QAKjB,uCAAa;;;;;;;YAAb,UAAc,YAAiB;;oBACzB,QAAQ,GAAsB;oBAChC,MAAM,EAAE,CAAC;oBACT,GAAG,EAAEE,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;oBAC3B,IAAI,EAAE,YAAY,CAAC,IAAI;iBACxB;gBACD,QAAQ,YAAY,CAAC,IAAI;oBACvB,KAAK,cAAc;wBACjB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACR,KAAK,iBAAiB;wBACpB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACR,KAAK,cAAc;wBACjB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACR,KAAK,cAAc;wBACjB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;oBACR;wBACE,QAAQ,CAAC,IAAI,GAAG,cAAc,CAAC;wBAC/B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;wBAClC,MAAM;iBACT;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,4CAAkB;;;;;;;YAA1B,UAA2B,QAA2B;gBACpD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,CAAC;4BACT,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;yBACX;wBACD;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;yBACX,CAAC;oBACF,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;yBACX;wBACD;4BACE,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;yBACX,CAAC;iBACH,CAAA;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,4CAAkB;;;;;;;YAA1B,UAA2B,QAA2B;gBACpD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,UAAU;oBACjB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,CAAC;4BACT,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;yBACX;wBACD;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;yBACX,CAAC;oBACF,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;yBACX;wBACD;4BACE,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;yBACX,CAAC;iBACH,CAAA;gBACD,OAAO,QAAQ,CAAC;aACjB;;;;;;;;QAGO,4CAAkB;;;;;;;YAA1B,UAA2B,QAA2B;gBACpD,QAAQ,CAAC,eAAe,GAAG;oBACzB,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,CAAC;4BACT,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;yBACX;wBACD;4BACE,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,GAAG;yBACX,CAAC;oBACF,OAAO,EAAE,CAAC;4BACR,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;yBACX;wBACD;4BACE,KAAK,EAAE,KAAK;4BACZ,KAAK,EAAE,GAAG;yBACX,CAAC;iBACH,CAAA;gBACD,OAAO,QAAQ,CAAC;aACjB;;oBA3GFF,aAAU;;;;QA4GX,sBAAC;KA5GD;;;;;;ACHA;QAiBE,2BACU,cAA8B,EAC9B,iBAAoC,EACpC,cAA8B,EAC9B,iBAAoC,EACpC,cAA8B,EAC9B,eAAgC;YALhC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,oBAAe,GAAf,eAAe,CAAiB;SACrC;;;;;;;QAEL,kDAAsB;;;;;;YAAtB,UAAuB,YAAiB,EAAE,WAAgC,EAAE,YAAoB;gBAE9F,IAAI,YAAY,IAAI,SAAS,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,IAAI,IAAI,SAAS,IAAI,YAAY,CAAC,IAAI,IAAI,IAAI,EAAE;;wBAChH,GAAG,GAAsB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;oBAC5D,IAAI,YAAY,GAAG,CAAC,CAAC,EAAE;wBACrB,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;qBAC1C;yBAAM;wBACL,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACvB;iBACF;aACF;;;;;;QAEO,wCAAY;;;;;YAApB,UAAqB,YAAiB;;oBAChC,QAAQ,GAAsB,EAAE;gBACpC,QAAQ,YAAY,CAAC,IAAI;oBACvB,KAAK,OAAO;wBACV,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;wBAC1D,MAAM;oBAER,KAAK,UAAU;wBACb,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;wBAChE,MAAM;oBAER,KAAK,UAAU;wBACb,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;wBAChE,MAAM;oBAER,KAAK,OAAO;wBACV,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;wBAC1D,MAAM;oBAER,KAAK,MAAM;wBACT,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;wBAC7C,MAAM;oBAER,KAAK,QAAQ;wBACX,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;wBAC/C,MAAM;oBAER,KAAK,MAAM;wBACT,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;wBAC7C,MAAM;oBAER,KAAK,MAAM;wBACT,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;wBAC7C,MAAM;oBAER,KAAK,UAAU;wBACb,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;wBACjD,MAAM;oBAER,KAAK,OAAO;wBACV,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;wBAC9C,MAAM;oBAER,KAAK,KAAK;wBACR,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;wBAC5C,MAAM;oBAER,KAAK,YAAY;wBACf,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;wBACnD,MAAM;oBAER,KAAK,YAAY;wBACf,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;wBACnD,MAAM;oBAER,KAAK,cAAc,CAAC;oBACpB,KAAK,iBAAiB,CAAC;oBACvB,KAAK,cAAc,CAAC;oBACpB,KAAK,cAAc;wBACjB,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;wBAC5D,MAAM;oBAER,KAAK,aAAa;wBACd,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;wBACvD,MAAM;iBAEP;gBACD,OAAO,QAAQ,CAAC;aACjB;;oBA3FFA,aAAU;;;;;wBAPF,cAAc;wBACd,iBAAiB;wBACjB,cAAc;wBACd,iBAAiB;wBACjB,cAAc;wBACd,eAAe;;;QAgGxB,wBAAC;KA9FD;;;;;;ACfA;QA0FE,8BACUkB,UAAyB,EACzB,YAA4B,EAC5B,gBAAkC,EACnC,eAAgC,EAChC,WAAwB,EACxB,iBAAoC,EACpC,mBAAwC;YANvC,YAAO,GAAPA,UAAO,CAAkB;YACzB,iBAAY,GAAZ,YAAY,CAAgB;YAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;YACnC,oBAAe,GAAf,eAAe,CAAiB;YAChC,gBAAW,GAAX,WAAW,CAAa;YACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,wBAAmB,GAAnB,mBAAmB,CAAqB;YA3CxC,aAAQ,GAAW,EAAE,CAAC;YACtB,QAAG,GAAmB;gBAC7B,IAAI,EAAE,EAAE,GAAG,EAAE,6BAA6B,EAAE;aAC7C,CAAC;YACQ,cAAS,GAAyB,IAAInB,eAAY,EAAU,CAAC;YAC7D,gBAAW,GAAyB,IAAIA,eAAY,EAAU,CAAC;YAC/D,iBAAY,GAAyB,IAAIA,eAAY,EAAU,CAAC;YAE1E,eAAU,GAAW,CAAC,CAAC;YAEvB,eAAU,GAAQ,EAAE,CAAC;YACrB,eAAU,GAAG,IAAIoB,eAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,gBAAW,GAAwB,EAAE,CAAC;YAEtC,iBAAY,GAAiB;gBAC3B,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACL,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,EAAE;iBACT;gBACD,IAAI,EAAE;oBACJ,KAAK,EAAE,EAAE;oBACT,IAAI,EAAE,EAAE;iBACT;gBACD,KAAK,EAAE;oBACL;wBACE,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE,KAAK;wBACX,SAAS,EAAE,EAAE;qBACd;iBACF;aACF,CAAC;YACF,iBAAY,GAAG,KAAK,CAAC;YACrB,kBAAa,GAAsB,EAAE,CAAC;YACtC,sBAAiB,GAAW,CAAC,CAAC;SASzB;;;;QAGL,uCAAQ;;;YAAR;gBAAA,iBAaC;gBAZC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS;;;mBAAC,UAAC,GAAQ;oBACrD,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;iBAC/B,EAAC,CAAC;gBAEH,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS;;;mBAAC,UAAC,GAAQ;oBACnD,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;iBAC7B,EAAC,CAAC;gBAEH,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS;;;mBAAC,UAAC,GAAQ;oBACrD,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;iBAC/B,EAAC,CAAC;aAEJ;;;;;QAED,0CAAW;;;;YAAX,UAAY,OAAsB;gBAChC,IAAI,OAAO,CAAC,QAAQ,EAAE;oBACpB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;aACF;;;;QAED,0CAAW;;;YAAX,eAAiB;;;;;;QAIjB,yCAAU;;;;YAAV;gBAAA,iBAMC;;oBALK,SAAS,GAAGC,YAAK,CAAC,IAAI,CAAC,YAAY,CAAC;gBACxC,SAAS,CAAC,KAAK,CAAC,OAAO;;;mBAAC,UAAC,IAAS;oBAChC,KAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAChE,EAAC,CAAA;gBACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;aAChD;;;;QAGD,2CAAY;;;YAAZ;gBAAA,iBAmBC;gBAlBC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS;;;mBAAC,UAAA,GAAG;oBACxF,KAAI,CAAC,YAAY,GAAG;wBAClB,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,KAAK,EAAE,GAAG,CAAC,KAAK;wBAChB,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,KAAK,EAAE,GAAG,CAAC,KAAK;qBACjB,CAAC;oBACF,IAAI,KAAI,CAAC,YAAY,CAAC,KAAK,IAAI,SAAS,KAAK,KAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,IAAI,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE;wBACpH,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;4BAC3B,MAAM,EAAE,WAAW;4BACnB,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,EAAE;yBAChB,CAAC,CAAA;qBACH;oBACD,KAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;iBACpC,EAAC,CAAC;aACJ;;;;;QAED,wCAAS;;;;YAAT,UAAU,CAAS;;;;;;;;;;;gBAWjB,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;aACpC;;;;QAED,sCAAO;;;YAAP;gBACE,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,SAAS,EAAE;;wBACpC,OAAO,GAAG;wBACZ,IAAI,EAAE,eAAY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE;wBACtD,IAAI,EAAE,YAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,YAAG;wBAC/C,SAAS,EAAE,EAAE;qBACd;oBACD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACvC;aACF;;;;;QAED,yCAAU;;;;YAAV,UAAW,KAAa;gBACtB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,SAAS,EAAE;oBACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAC1C;aACF;;;;;QAED,yDAA0B;;;;YAA1B,UAA2B,SAAiB;gBAC1C,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,IAAI,SAAS,EAAE;oBAC3I,IAAI,CAAC,WAAW,GAAG,CAAC;4BAClB,MAAM,EAAE,WAAW;4BACnB,KAAK,EAAE,eAAe;4BACtB,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS;yBAC3D,CAAC,CAAA;iBACH;aACF;;;;;;;QAKD,kDAAmB;;;;;;YAAnB,UAAoB,GAAQ;;oBACtB,OAAO,GAAQ,GAAG,CAAC,MAAM,CAAC;;oBAC1B,QAAQ,GAAQ,GAAG,CAAC,OAAO,CAAC;;oBAC5B,SAAc;;oBACd,MAAW;gBACf,IAAI,CAAC,cAAc,CAAC,OAAO;;;;;mBAAC,UAAC,IAAS,EAAE,KAAU,EAAE,MAAW;oBAC7D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,SAAS,GAAG,IAAI,CAAC;wBACjB,MAAM,GAAG,KAAK,CAAC;qBAChB;iBACF,EAAC,CAAC;gBAEH,QAAQ,OAAO;oBACb,KAAK,QAAQ;wBACX,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;wBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,MAAM;oBACR,KAAK,OAAO;wBACV,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;wBAC5B,MAAM;oBACR,KAAK,MAAM;;4BACL,YAAY,GAAGb,WAAW,CAAC,SAAS,CAAC;wBACzC,YAAY,CAAC,GAAG,GAAGL,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;wBAC1C,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;wBACxD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;wBAC5B,MAAM;oBACR,KAAK,QAAQ;wBACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;wBACrC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBAC7B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;wBACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,MAAM;iBACT;aACF;;;;;;;QAGD,gDAAiB;;;;;;YAAjB,UAAkB,GAAQ;;oBACpB,OAAO,GAAQ,GAAG,CAAC,MAAM,CAAC;;oBAC1B,SAAS,GAAQ,GAAG,CAAC,QAAQ,CAAC;;oBAC9B,QAAQ,GAAQ,GAAG,CAAC,OAAO,CAAC;gBAGhC,IAAI,CAAC,cAAc,CAAC,OAAO;;;;;mBAAC,UAAC,IAAS,EAAE,KAAU,EAAE,MAAW;oBAC7D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAEpB,IAAI,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE;wBAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;qBAEpB;iBACF,EAAC,CAAC;gBACH,QAAQ,OAAO;oBACb,KAAK,KAAK;wBACR,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;4BACpC,OAAO,EAAE,IAAI;4BACb,OAAO,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;4BAC/B,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,KAAK;yBACf,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;wBAC5B,MAAM;oBACR,KAAK,MAAM;wBACT,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;wBAC5B,MAAM;oBACR,KAAK,QAAQ;wBACX,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO;;;;;2BAAC,UAAC,IAAS,EAAE,KAAU,EAAE,MAAW;4BAC1E,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,EAAE;gCACjC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;6BACzB;yBACF,EAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;wBAC5B,MAAM;oBAER,KAAK,UAAU;wBACb,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC;4BACrC,OAAO,EAAE,KAAK;4BACd,OAAO,EAAEA,WAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC;yBAChC,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;wBAC7B,MAAM;iBACT;aACF;;;;;;;;QAGD,8CAAe;;;;;;;YAAf,UAAgB,IAAS,EAAE,KAAe;gBAAf,sBAAA;oBAAA,SAAc,CAAC;;gBACxC,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;aACjF;;;;;;;QAGD,kDAAmB;;;;;;YAAnB,UAAoB,GAAQ;;oBACtB,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBACpD,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC,CAAA;aAC9F;QAED,sBAAI,gDAAc;;;gBAAlB;;oBACM,MAAM,GAAU,EAAE;gBACtB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,SAAS,EAAE;oBAC1G,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;iBACzC;gBACD,OAAO,MAAM,CAAC;aACf;;;WAAA;;oBA/PFC,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,qiHAAsC;wBAEtC,SAAS,EAAE,CAAC,WAAW,EAAE,iBAAiB,CAAC;;qBAC5C;;;;;wBA/BQkB,wBAAgB;wBADhBf,iBAAc;wBAGd,gBAAgB;wBAgBhB,eAAe;wBACf,WAAW;wBACX,iBAAiB;wBAvBxBgB,0BAAmB;;;;+BAoClBd,QAAK;0BACLA,QAAK;gCAGLe,SAAM;kCACNA,SAAM;mCACNA,SAAM;;QAmPT,2BAAC;KAhQD;;;;;;AC/CA;QA+QE,wBAAmB,WAAwB;YAAxB,gBAAW,GAAX,WAAW,CAAa;YAxPjC,sBAAiB,GAAG,IAAIxB,eAAY,EAAO,CAAC;YAC5C,iBAAY,GAAG,IAAIA,eAAY,EAAO,CAAC;YACvC,oBAAe,GAAG,IAAIA,eAAY,EAAO,CAAC;YAEpD,qBAAgB,GAAK;gBACnB;oBACE,KAAK,EAAC,KAAK;oBACX,KAAK,EAAC;wBACJ;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,OAAO;4BACb,GAAG,EAAC,SAAS;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,UAAU;4BACf,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,IAAI;yBACV;;;;;;;;;wBASD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,MAAM;4BACZ,GAAG,EAAC,UAAU;4BACd,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,UAAU;4BACf,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,UAAU;4BACf,KAAK,EAAC,OAAO;4BACb,GAAG,EAAC,SAAS;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,QAAQ;4BACb,KAAK,EAAC,OAAO;4BACb,GAAG,EAAC,SAAS;yBACd;qBAKF;iBACF;gBACD;oBACE,KAAK,EAAC,KAAK;oBACX,KAAK,EAAC;wBACJ;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,OAAO;4BACb,GAAG,EAAC,SAAS;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,aAAa;4BAClB,KAAK,EAAC,MAAM;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,MAAM;4BACZ,GAAG,EAAC,QAAQ;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,kBAAkB;4BACvB,KAAK,EAAC,MAAM;yBACb;wBACD;4BACE,IAAI,EAAC,aAAa;4BAClB,KAAK,EAAC,MAAM;yBACb;qBACF;iBACF;gBACD;oBACE,KAAK,EAAC,MAAM;oBACZ,KAAK,EAAC;wBACJ;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,YAAY;4BACjB,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,YAAY;4BACjB,KAAK,EAAC,OAAO;yBACd;wBACD;4BACE,IAAI,EAAC,KAAK;4BACV,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,YAAY;4BACjB,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,KAAK;yBACX;qBACF;iBACF;gBACD;oBACE,KAAK,EAAC,MAAM;oBACZ,KAAK,EAAC;wBACJ;4BACE,IAAI,EAAC,MAAM;4BACX,KAAK,EAAC,OAAO;4BACb,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,QAAQ;4BACb,KAAK,EAAC,MAAM;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,cAAc;4BACnB,KAAK,EAAC,MAAM;yBACb;qBACF;iBACF;gBACD;oBACE,KAAK,EAAC,MAAM;oBACZ,KAAK,EAAC;wBACJ;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,MAAM;4BACV,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,QAAQ;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,OAAO;4BACX,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,QAAQ;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,MAAM;4BACX,KAAK,EAAC,KAAK;4BACX,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,MAAM;4BACX,KAAK,EAAC,KAAK;4BACX,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,KAAK;4BACT,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,WAAW;4BACf,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,UAAU;4BACf,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,OAAO;4BACX,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,UAAU;4BACf,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,YAAY;4BAChB,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,UAAU;4BACf,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,UAAU;4BACd,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,OAAO;4BACZ,KAAK,EAAC,KAAK;4BACX,GAAG,EAAC,YAAY;4BAChB,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,aAAa;4BAClB,KAAK,EAAC,MAAM;yBACb;wBACD;4BACE,IAAI,EAAC,eAAe;4BACpB,KAAK,EAAC,MAAM;yBACb;qBACF;iBACF;gBACD;oBACE,KAAK,EAAC,MAAM;oBACZ,KAAK,EAAC;wBACJ;4BACE,IAAI,EAAC,cAAc;4BACnB,KAAK,EAAC,MAAM;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,iBAAiB;4BACtB,KAAK,EAAC,MAAM;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,cAAc;4BACnB,KAAK,EAAC,MAAM;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,cAAc;4BACnB,KAAK,EAAC,MAAM;4BACZ,IAAI,EAAC,IAAI;yBACV;wBACD;4BACE,IAAI,EAAC,cAAc;4BACnB,KAAK,EAAC,MAAM;yBACb;qBACF;iBACF;aACF,CAAA;SAG8C;;;;QAE/C,iCAAQ;;;YAAR;aAEC;;;;;QAED,oCAAW;;;;YAAX,UAAY,OAAsB;aAEjC;;;;;QAED,wCAAe;;;;YAAf,UAAgB,IAAQ;gBACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;;;;QAED,gCAAO;;;YAAP;gBACE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;;;;QAED,mCAAU;;;YAAV;gBACE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;aAC7B;;oBAnRFI,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,wrBAAqC;;qBAEtC;;;;;wBARQ,WAAW;;;;wCAWjBoB,SAAM;mCACNA,SAAM;sCACNA,SAAM;;QA2QT,qBAAC;KApRD;;;;;;AChBA;QA4BE,wBAAmB,WAAwB;YAAxB,gBAAW,GAAX,WAAW,CAAa;YANlC,iBAAY,GAAiB,EAAE,CAAC;YAC/B,sBAAiB,GAAG,IAAIxB,eAAY,EAAO,CAAC;YAC5C,iBAAY,GAAG,IAAIA,eAAY,EAAO,CAAC;SAID;;;;QAEhD,iCAAQ;;;YAAR;aAEC;;;;;QAED,oCAAW;;;;YAAX,UAAY,OAAsB;aAEjC;;;;;QAED,qCAAY;;;;YAAZ,UAAa,KAA4B;gBACvC,IAAIY,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,EAAE;oBAC5C,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;wBAC/CN,wBAAe,CAACM,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;qBACpG;yBAAM;wBACL,IAAIA,KAAK,CAAC,KAAK,EAAE,kCAAkC,CAAC,EAAE;4BACpDa,0BAAiB,CACfb,KAAK,CAAC,KAAK,EAAE,kCAAkC,CAAC,EAChDA,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,EACxC,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,YAAY,CAAC,CAAC;yBACvB;qBACF;iBACF;aACF;;oBApCFR,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,upBAAqC;;qBAEtC;;;;;wBARQ,WAAW;;;;mCAUjBK,QAAK;wCACLe,SAAM;mCACNA,SAAM;;QA6BT,qBAAC;KArCD;;;;;;AChBA;QA+CE;YAbA,kBAAa,GAAO;gBAClB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,UAAU;gBAChB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC;YAOD,IAAI,CAAC,aAAa,GAAG;gBAClB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,UAAU;gBAChB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC;SACF;QAdF,sBAAa,0CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAYD,0CAAQ;;;YAAR,eAAc;;;;;QAEd,6CAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBAhDxCpB,YAAS,SAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,QAAQ,EAAE,sjBAeT;qBAEF;;;;;4BAWEK,QAAK;;QAmBR,8BAAC;KAjDD;;;;;;ACZA;QA2FE;YArBA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,UAAU;gBAChB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAC;wBACN,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;wBACV,GAAG,EAAE,CAAC;;wBACN,GAAG,EAAE,CAAC;qBACP;oBACD,OAAO,EAAE,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,0CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,0CAAQ;;;YAAR,eAAc;;;;;QAEd,6CAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBAnFxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,QAAQ,EAAE,uiFAoDT;qBAEF;;;;;4BAkBEK,QAAK;;QAUR,8BAAC;KApFD;;;;;;ACZA;QAkEE;YAhBA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,UAAU;gBAChB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,OAAO,EAAC;wBACN,KAAK,EAAE,CAAC;qBACT;oBACD,OAAO,EAAE,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,0CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,0CAAQ;;;YAAR,eAAc;;;;;QAEd,6CAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBA1DxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,QAAQ,EAAE,w5CAgCT;qBAEF;;;;;4BAaEK,QAAK;;QAUR,8BAAC;KA3DD;;;;;;ACZA;QAgFE;YAjBA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,OAAO;gBACZ,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,IAAI,EAAC,SAAS;oBACd,OAAO,EAAC;wBACN,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,CAAC;qBACb;iBACF;aACF,CAAC;SAMc;QALhB,sBAAa,uCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,uCAAQ;;;YAAR,eAAa;;;;;QAEb,0CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAxEvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,20EA4CT;qBAEF;;;;;4BAeEK,QAAK;;QAUR,2BAAC;KAzED;;;;;;ACZA;QAsCE;YATA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,MAAM;aACZ,CAAC;SAMc;QALhB,sBAAa,sCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,sCAAQ;;;YAAR,eAAa;;;;;QAEb,yCAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBA9BvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,qSAUT;qBAEF;;;;;4BAOEK,QAAK;;QAUR,0BAAC;KA/BD;;;;;;ACZA;QAkFE;YAnBA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAC;wBACN,KAAK,EAAE,CAAC;wBACR,MAAM,EAAE,KAAK;wBACb,MAAM,EAAC,GAAG;qBACX;oBACD,OAAO,EAAE,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,uCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,uCAAQ;;;YAAR,eAAc;;;;;QAEd,0CAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBA1ExCL,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,2iEA4CT;qBAEF;;;;;4BAiBEK,QAAK;;QAUR,2BAAC;KA3ED;;;;;;ACZA;QA0CE;YAZA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,QAAQ;gBACb,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;iBACV;aACF,CAAC;SAMc;QALhB,sBAAa,wCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,wCAAQ;;;YAAR,eAAa;;;;;QAEb,2CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAlCvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,6VAWT;qBAEF;;;;;4BAUEK,QAAK;;QAUR,4BAAC;KAnCD;;;;;;ACZA;QAoGE;YA3BA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,QAAQ;gBACb,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,WAAW,EAAE,EAAE;oBACf,SAAS,EAAE,GAAG;oBACd,SAAS,EAAE,CAAC;oBACZ,GAAG,EAAE,CAAC;oBACN,GAAG,EAAE,CAAC;oBACN,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,EAAE;oBACf,QAAQ,EAAE,KAAK;oBACf,IAAI,EAAE,EAAE;oBACR,OAAO,EAAE,EAAE;oBACX,OAAO,EAAC,EAAE;iBACX;gBACD,MAAM,EAAE;oBACN,iBAAiB,EAAE,EAAE;oBACrB,QAAQ,EAAE,EAAE;iBACb;aACF,CAAC;SAMc;QALhB,sBAAa,wCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,wCAAQ;;;YAAR,eAAa;;;;;QAEb,2CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBA5FvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,+2EAsDT;qBAEF;;;;;4BAyBEK,QAAK;;QAUR,4BAAC;KA7FD;;;;;;ACZA;QA+EE;YApBA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,eAAe,EAAE;oBACf,IAAI,EAAC,OAAO;oBACZ,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAC;wBACN,KAAK,EAAC,EAAE;wBACR,KAAK,EAAE,CAAC;wBACR,GAAG,EAAE,CAAC;wBACN,GAAG,EAAE,CAAC;qBACP;iBACF;aACF,CAAC;SAMc;QALhB,sBAAa,uCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,uCAAQ;;;YAAR,eAAa;;;;;QAEb,0CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAvEvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,s+DAwCT;qBAEF;;;;;4BAkBEK,QAAK;;QAUR,2BAAC;KAxED;;;;;;ACZA;QA+CE;YAbA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,MAAM;gBACX,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAC,KAAK;iBACf;aACF,CAAC;SAMc;QALhB,sBAAa,sCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,sCAAQ;;;YAAR,eAAa;;;;;QAEb,yCAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAvCvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,2iBAeT;qBAEF;;;;;4BAWEK,QAAK;;QAUR,0BAAC;KAxCD;;;;;;ACZA;QA+CE;YAbA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,MAAM;gBACX,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAC,KAAK;iBACf;aACF,CAAC;SAMc;QALhB,sBAAa,sCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,sCAAQ;;;YAAR,eAAa;;;;;QAEb,yCAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAvCvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,ghBAeT;qBAEF;;;;;4BAWEK,QAAK;;QAUR,0BAAC;KAxCD;;;;;;ACZA;QAgDE;YAdA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,KAAK;gBACV,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAC,EAAE;iBACX;aACF,CAAC;SAMc;QALhB,sBAAa,qCAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,qCAAQ;;;YAAR,eAAa;;;;;QAEb,wCAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAxCvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,QAAQ,EAAE,4iBAeT;qBAEF;;;;;4BAYEK,QAAK;;QAUR,yBAAC;KAzCD;;;;;;ACZA;QA8DE;YAxBA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,YAAY;gBACjB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,WAAW,EAAE,EAAE;oBACf,SAAS,EAAE,GAAG;oBACd,SAAS,EAAE,CAAC;oBACZ,GAAG,EAAE,CAAC;oBACN,GAAG,EAAE,CAAC;oBACN,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,EAAE;oBACf,QAAQ,EAAE,KAAK;oBACf,IAAI,EAAE,EAAE;oBACR,OAAO,EAAE,EAAE;oBACX,KAAK,EAAE,CAAC;oBACR,OAAO,EAAC,EAAE;iBACX;aACF,CAAC;SAMc;QALhB,sBAAa,4CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,4CAAQ;;;YAAR,eAAa;;;;;QAEb,+CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAtDvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,QAAQ,EAAE,+wBAmBT;qBAEF;;;;;4BAsBEK,QAAK;;QAUR,gCAAC;KAvDD;;;;;;ACZA;QAuDE;YAjBA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,YAAY;gBACjB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAC;wBACN,KAAK,EAAE,CAAC;qBACT;oBACD,OAAO,EAAC,EAAE;iBACX;aACF,CAAC;SAMc;QALhB,sBAAa,4CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,4CAAQ;;;YAAR,eAAa;;;;;QAEb,+CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBA/CvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,QAAQ,EAAE,0xBAmBT;qBAEF;;;;;4BAeEK,QAAK;;QAUR,gCAAC;KAhDD;;;;;;ACZA;QAiDE;YAfA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,cAAc;gBACpB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;oBACX,QAAQ,EAAC,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,6CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,6CAAQ;;;YAAR,eAAc;;;;;QAEd,gDAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBAzCxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,+BAA+B;wBACzC,QAAQ,EAAE,0iBAeT;qBAEF;;;;;4BAaEK,QAAK;;QAUR,iCAAC;KA1CD;;;;;;ACZA;QAiDE;YAfA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,iBAAiB;gBACvB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;oBACX,QAAQ,EAAC,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,gDAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,gDAAQ;;;YAAR,eAAc;;;;;QAEd,mDAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBAzCxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,kCAAkC;wBAC5C,QAAQ,EAAE,0iBAeT;qBAEF;;;;;4BAaEK,QAAK;;QAUR,oCAAC;KA1CD;;;;;;ACZA;QAiDE;YAfA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,cAAc;gBACpB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;oBACX,QAAQ,EAAC,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,6CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,6CAAQ;;;YAAR,eAAc;;;;;QAEd,gDAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBAzCxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,+BAA+B;wBACzC,QAAQ,EAAE,0iBAeT;qBAEF;;;;;4BAaEK,QAAK;;QAUR,iCAAC;KA1CD;;;;;;ACZA;QAiDE;YAfA,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,cAAc;gBACpB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;oBACX,QAAQ,EAAC,EAAE;iBACZ;aACF,CAAC;SAMe;QALjB,sBAAa,6CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,6CAAQ;;;YAAR,eAAc;;;;;QAEd,gDAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBAzCxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,+BAA+B;wBACzC,QAAQ,EAAE,0iBAeT;qBAEF;;;;;4BAaEK,QAAK;;QAUR,iCAAC;KA1CD;;;;;;ACZA;QAiDE;YAdA,kBAAa,GAAK;gBAChB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAC,aAAa;gBAClB,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAC,EAAE;iBACX;aACF,CAAC;SAMc;QALhB,sBAAa,4CAAK;;;;gBAAlB,UAAmB,KAAwB;gBACzC,IAAG,KAAK,IAAE,IAAI,IAAI,KAAK,IAAE,SAAS,EAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;;;WAAA;;;;QAGD,4CAAQ;;;YAAR,eAAa;;;;;QAEb,+CAAW;;;;YAAX,UAAY,OAAsB,KAAI;;oBAzCvCL,YAAS,SAAC;wBACT,QAAQ,EAAE,8BAA8B;wBACxC,QAAQ,EAAE,+jBAgBT;qBAEF;;;;;4BAYEK,QAAK;;QAUR,gCAAC;KA1CD;;;;;;ACZA;QAyJE,iCACS,wBAAkD,EAClD,iBAAoC;YADpC,6BAAwB,GAAxB,wBAAwB,CAA0B;YAClD,sBAAiB,GAAjB,iBAAiB,CAAmB;YA1G7C,sBAAiB,GAAQ;gBACvB,OAAO,EAAE,oBAAoB;gBAC7B,UAAU,EAAE,uBAAuB;gBACnC,UAAU,EAAE,uBAAuB;gBACnC,OAAO,EAAE,oBAAoB;gBAC7B,MAAM,EAAE,mBAAmB;gBAC3B,QAAQ,EAAE,qBAAqB;gBAC/B,UAAU,EAAE,uBAAuB;gBACnC,QAAQ,EAAE,qBAAqB;gBAC/B,OAAO,EAAE,oBAAoB;gBAC7B,MAAM,EAAE,mBAAmB;gBAC3B,MAAM,EAAE,mBAAmB;gBAC3B,KAAK,EAAE,kBAAkB;gBACzB,YAAY,EAAE,yBAAyB;gBACvC,YAAY,EAAE,yBAAyB;gBACvC,cAAc,EAAE,0BAA0B;gBAC1C,iBAAiB,EAAE,6BAA6B;gBAChD,cAAc,EAAE,0BAA0B;gBAC1C,cAAc,EAAE,0BAA0B;gBAC1C,aAAa,EAAE,yBAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA0CzC,CAAC;YAKF,kBAAa,GAAQ;gBACnB,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,eAAe,EAAE;oBACf,KAAK,EAAE,EAAE;oBACT,WAAW,EAAE,EAAE;oBACf,SAAS,EAAE,GAAG;oBACd,SAAS,EAAE,CAAC;oBACZ,GAAG,EAAE,CAAC;oBACN,GAAG,EAAE,CAAC;oBACN,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,EAAE;oBACf,QAAQ,EAAE,KAAK;oBACf,IAAI,EAAE,EAAE;oBACR,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;iBACZ;gBACD,MAAM,EAAE;oBACN,iBAAiB,EAAE,EAAE;oBACrB,QAAQ,EAAE,EAAE;iBACb;aACF,CAAC;SAmBgD;QAlBlD,sBAAa,0CAAK;;;;gBAAlB,UAAmB,KAAwB;gBAEzC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE;oBACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;gBACD,IAAI,IAAI,CAAC,aAAa,EAAE;oBACtB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,IAAI,CAAC,aAAa,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,IAAI,EAAE;;4BACtI,WAAW,GAA0B,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAC9F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAChD;wBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;wBACjE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;qBACpD;iBACF;aACF;;;WAAA;;;;QAKD,0CAAQ;;;YAAR;aAEC;;;;;QAED,6CAAW;;;;YAAX,UAAY,OAAsB,KAAK;;oBA3HxCL,YAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,gEAIT;qBAEF;;;;;wBAjCCsB,2BAAwB;wBADxBC,oBAAiB;;;;oCAsGhBC,YAAS,SAAC,eAAe,EAAE,EAAE,IAAI,EAAEC,mBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE;4BAuBnEpB,QAAK;;QAyBR,8BAAC;KA5HD;;;;;;ACtCA;QAuDE,kCAAmB,WAAwB;YAAxB,gBAAW,GAAX,WAAW,CAAa;YAXlC,QAAG,GAAK;gBACf,QAAQ,EAAC,CAAC;gBACV,OAAO,EAAC,EAAE;gBACV,OAAO,EAAC,KAAK;gBACb,IAAI,EAAC,EAAE;aACR,CAAC;YACO,UAAK,GAAQ,EAAE,CAAC;YACf,cAAS,GAAG,IAAIT,eAAY,EAAO,CAAC;YACpC,mBAAc,GAAG,IAAIA,eAAY,EAAO,CAAC;YACzC,mBAAc,GAAG,IAAIA,eAAY,EAAO,CAAC;SAIlD;;;;QAED,2CAAQ;;;YAAR;aAEC;;;;;QAED,8CAAW;;;;YAAX,UAAY,OAAsB;aAEjC;;;;;QAED,4CAAS;;;;YAAT,UAAU,CAAK;gBACb,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACxB;;;;QAED,4CAAS;;;YAAT;;oBAEM,KAAK,GAAE,CAAC;gBACZ,IAAG,IAAI,CAAC,GAAG,IAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAE,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC;oBACjE,KAAK,GAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;iBAC7B;gBACD,KAAK,EAAE,CAAC;;oBACJ,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ;gBAChC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;oBACjB,KAAK,EAAI,QAAQ,SAAI,KAAO;oBAC5B,KAAK,EAAC,iBAAK,KAAO;oBAClB,QAAQ,EAAC,EAAE;iBACZ,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC5B;;;;;QAED,4CAAS;;;;YAAT,UAAU,CAAK;gBACb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC7B;;oBA3EFI,YAAS,SAAC;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,QAAQ,EAAC,+jCAwBR;qBACF;;;;;wBA/BQ,WAAW;;;;0BAiCjBK,QAAK;4BAMLA,QAAK;gCACLe,SAAM;qCACNA,SAAM;qCACNA,SAAM;;QAsCT,+BAAC;KA5ED;;;;;;ACfA;;;;;;;;;;;QAyCE,8BAAoB,KAAiB,EAAS,IAAY;YAAtC,UAAK,GAAL,KAAK,CAAY;YAAS,SAAI,GAAJ,IAAI,CAAQ;YApB3B,UAAK,GAAM,EAAE,CAAC;YACpC,YAAO,GAAG,KAAK,CAAC;YACa,WAAM,GAAG,IAAIxB,eAAY,EAAE,CAAC;;YAExD,SAAI,GAAG,IAAIA,eAAY,EAAE,CAAC;YAC1B,UAAK,GAAG,IAAIA,eAAY,EAAE,CAAC;YAC5B,aAAQ,GAAS,EAAE,CAAC;YACpB,gBAAW,GAAG,EAAE,CAAC;YACjB,WAAM,GAAG,KAAK,CAAC;SAYsC;;;;QAE9D,8CAAe;;;YAAf;;aAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8FD,0CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAX,UAAY,OAAW;;;aAGtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0DD,0CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAAX;;;;;;;;;;;;;;;;;aAiBC;;oBAxMF8B,YAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;qBACnC;;;;;wBAbCC,aAAU;wBAJVC,SAAM;;;;4BAmBLvB,QAAK,SAAC,sBAAsB;8BAC5BA,QAAK;6BACLe,SAAM,SAAC,4BAA4B;2BAEnCA,SAAM;4BACNA,SAAM;+BACNf,QAAK;kCACLA,QAAK;6BACLA,QAAK;;QAsXR,2BAAC;KAlYD;;;;;;ACjBA;QAaM,qBAAqB,GAAQ;QACjC,OAAO,EAAEwB,uBAAiB;QAC1B,WAAW,EAAEC,aAAU;;WAAC,cAAM,OAAA,qBAAqB,GAAA,EAAC;QACpD,KAAK,EAAE,IAAI;KACZ;;;;;;;;;;;;;;AAgBD;;QA+BE;YAbA,WAAM,GAAC,EAAE,CAAC;YACV,eAAU,GAAG,EAAE,CAAC;YACP,aAAQ,GAAW,KAAK,CAAC;YACzB,gBAAW,GAAW,EAAE,CAAC;YACzB,cAAS,GAAW,eAAe,CAAC;YACpC,WAAM,GAAG,IAAI,CAAC;YACb,SAAI,GAAG,IAAIlC,eAAY,EAAE,CAAC;YAC1B,UAAK,GAAG,IAAIA,eAAY,EAAE,CAAC;YAC5B,aAAQ,GAAG,KAAK,CAAC;YACjB,SAAI,GAAK,EAAE,CAAC;YACZ,WAAM,GAAS,KAAK,CAAA;SAGb;;;;;;;;;;QAMhB,wCAAQ;;;;;;;YAAR;;;;;;;aAOC;;;;;QAED,2CAAW;;;;YAAX,UAAY,GAAO;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;;;;;QAED,0CAAU;;;;YAAV,UAAW,GAAO;gBAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB;QAED,sBAAI,wCAAK;;;gBAAT;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;;;;gBACD,UACU,CAAK;gBACb,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;oBACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBAClB;aACF;;;WAPA;;;;;QASD,4DAA4B;;;;YAA5B,UAA6B,GAAO;gBAClC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aACpB;;;;;;;;;QAKD,0CAAU;;;;;YAAV,UAAW,KAAU;gBACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;aAIrB;;;;;QACD,wCAAQ;;;;YAAR,UAASmC,IAAM,KAAI;;;;QACnB,yCAAS;;;YAAT,eAAc;;;;;QACd,gDAAgB;;;;YAAhB,UAAiB,EAAO;gBACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpB;;;;;QACD,iDAAiB;;;;YAAjB,UAAkB,EAAO;gBACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;;oBAtFF/B,YAAS,SAAC;wBACT,QAAQ,EAAE,eAAe;wBACzB,SAAS,EAAE,CAAC,qBAAqB,CAAC;wBAClC,QAAQ,EAAE,yMAMT;iCAEC,0CAGC;qBAEJ;;;;;+BAIEK,QAAK;kCACLA,QAAK;gCACLA,QAAK;6BACLA,QAAK;2BACLe,SAAM;4BACNA,SAAM;+BACNf,QAAK;2BACLA,QAAK;6BACLA,QAAK;4BA6BLA,QAAK;;QA8BR,4BAAC;KAvFD;;;;;;ACjCA;QAwBE;YALS,cAAS,GAAK;gBACrB,KAAK,EAAC,MAAM;gBACZ,IAAI,EAAC,yEAAyE;aAC/E,CAAA;SAIA;;;;QAED,oCAAQ;;;YAAR;aACC;;;;;QAED,uCAAW;;;;YAAX,UAAY,OAAsB;aACjC;;oBApBFL,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,sSAAqC;;qBAEtC;;;;;gCAGEK,QAAK;;QAcR,wBAAC;KArBD;;;;;;ACZA;QAyBE;YANS,aAAQ,GAAK;gBACpB,KAAK,EAAC,EAAE;gBACR,IAAI,EAAC,EAAE;aACR,CAAA;SAKA;;;;QAED,mCAAQ;;;YAAR;aACC;;;;;QAED,sCAAW;;;;YAAX,UAAY,OAAsB;aACjC;;oBArBFL,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,+RAAqC;;qBAEtC;;;;;+BAGEK,QAAK;;QAeR,uBAAC;KAtBD;;;;;;ACZA;QAKE,yBAAoB,SAAuB;YAAvB,cAAS,GAAT,SAAS,CAAc;SAAI;;;;;QAC/C,mCAAS;;;;YAAT,UAAU,KAAa;gBACrB,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;aACtC;;oBALF2B,OAAI,SAAC,EAAE,IAAI,EAAE,aAAa,EAAE;;;;;wBAFpBC,4BAAY;;;QAQrB,sBAAC;KAND;;;;;;ACHA;QAME,sBAAoB,SAAuB;YAAvB,cAAS,GAAT,SAAS,CAAc;SAAI;;;;;QAC/C,gCAAS;;;;YAAT,UAAU,KAAS;gBACjB,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;aACtD;;oBALFD,OAAI,SAAC,EAAE,IAAI,EAAE,UAAU,EAAC;;;;;wBAHjBC,4BAAY;;;QASpB,mBAAC;KAND;;;;;;;QC8EMC,OAAK,GAAG;QACZC,qBAAe;QACfC,uBAAiB;QACjBC,iBAAW;QACXC,sBAAgB;QAChBC,qBAAe;QACfC,wBAAkB;QAClBC,wBAAkB;QAClBC,kBAAY;QACZC,kBAAY;KACb;AACDC,6BAAkB,CAAC,EAAE,CAAC,CAAC;;;QAGjB,cAAc,GAAG;QACrB,cAAc;QACd,cAAc;QACd,uBAAuB;QAEvB,uBAAuB;QACvB,uBAAuB;QACvB,uBAAuB;QACvB,oBAAoB;QACpB,mBAAmB;QACnB,oBAAoB;QACpB,qBAAqB;QACrB,qBAAqB;QACrB,oBAAoB;QACpB,mBAAmB;QACnB,mBAAmB;QACnB,kBAAkB;QAClB,yBAAyB;QACzB,yBAAyB;QACzB,0BAA0B;QAC1B,6BAA6B;QAC7B,0BAA0B;QAC1B,0BAA0B;QAC1B,yBAAyB;QAEzB,sBAAsB;QACtB,oBAAoB;QAEpB,wBAAwB;QAExB,iBAAiB;QACjB,gBAAgB;KACjB;;;QAGK,eAAe,GAAG;QACtB,oBAAoB;QACpB,sBAAsB;KACvB;;QACK,KAAK,GAAG;QACZ,YAAY;KACb;;QACK,QAAQ,GAAC;QACb,cAAc;QACd,iBAAiB;QACjB,cAAc;QACd,cAAc;QACd,iBAAiB;QACjB,eAAe;KAChB;aA4BiCC,iBAAK,OACJX,OAAK;AA3BxC;QAAA;SAkC8B;;oBAlC7BY,WAAQ,SAAC;wBACR,YAAY;4BACV,qBAAqB;4BACrB,cAAc;4BACd,eAAe;4BACf,eAAe;4BACf,oBAAoB;4BACpB,qBAAqB;2BAClB,KAAK,CACT;wBACD,OAAO,EAAE;4BACPC,eAAU;4BACVC,qBAAgB;4BAChBC,iBAAW;4BACXC,yBAAmB;4BACnBC,mBAAY;4BACZC,uBAAc;4BACdC,qBAAa;4BACbC,6BAAiB;4BACjBC,mBAAY,CAAC,QAAQ,CAAC,uBAAuB,CAAC;4BAC9CA,mBAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC;yBACvC;wBACD,eAAe,EAAE,CAAC,cAAc,CAAC;wBACjC,OAAO,YAAGC,oBAAe,EAAE,eAAe,EAAC,oBAAoB,EAAC,qBAAqB,GAChF,KAAK,CAAC;wBACX,SAAS;4BACP,EAAE,OAAO,EAAEC,mBAAO,EAAE,QAAQ,IAAO,EAAE;4BACrC,EAAE,OAAO,EAAEC,oBAAQ,EAAE,QAAQ,IAAO,EAAE;4BACtC,WAAW;4BACX,gBAAgB;4BAChB,eAAe;2BACZ,QAAQ,CACZ;qBACF;;QAC4B,qBAAC;KAlC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
