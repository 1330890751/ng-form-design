{"version":3,"file":"vx-form-core.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@vx-form/core/lib/utils.ts","ng://@vx-form/core/lib/services/vxform.config.ts","ng://@vx-form/core/lib/services/vxform.builder.ts","ng://@vx-form/core/lib/tools/test.ts","ng://@vx-form/core/lib/components/vxform.ts","ng://@vx-form/core/lib/components/vxform.field.ts","ng://@vx-form/core/lib/components/vxform.attributes.ts","ng://@vx-form/core/lib/templates/field.type.ts","ng://@vx-form/core/lib/extensions/field-form/utils.ts","ng://@vx-form/core/lib/templates/field-array.type.ts","ng://@vx-form/core/lib/templates/field.wrapper.ts","ng://@vx-form/core/lib/templates/vxform.group.ts","ng://@vx-form/core/lib/templates/vxform.validation-message.ts","ng://@vx-form/core/lib/templates/field-template.type.ts","ng://@vx-form/core/lib/extensions/field-expression/utils.ts","ng://@vx-form/core/lib/extensions/field-expression/field-expression.ts","ng://@vx-form/core/lib/extensions/field-validation/field-validation.ts","ng://@vx-form/core/lib/extensions/field-form/field-form.ts","ng://@vx-form/core/lib/guid.ts","ng://@vx-form/core/lib/extensions/core/core.ts","ng://@vx-form/core/lib/tools/common.ts","ng://@vx-form/core/lib/core.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { VXFormFieldConfig } from \"./core\";\r\nimport { isObservable } from \"rxjs\";\r\nimport { AbstractControl } from \"@angular/forms\";\r\nimport { VXFormFieldConfigCache } from \"./components/vxform.field.config\";\r\n\r\nexport function getFieldId(\r\n  formId: string,\r\n  field: VXFormFieldConfig,\r\n  index: string | number\r\n) {\r\n  if (field.id) return field.id;\r\n  let type = field.type;\r\n  if (!type && field.template) type = \"template\";\r\n  return [formId, type, field.key, index].join(\"_\");\r\n}\r\n\r\nexport function getKeyPath(field: VXFormFieldConfigCache): string[] {\r\n  if (!field.key) {\r\n    return [];\r\n  }\r\n\r\n  if (!field._keyPath || field._keyPath.key !== field.key) {\r\n    const key =\r\n      field.key.indexOf(\"[\") === -1\r\n        ? field.key\r\n        : field.key.replace(/\\[(\\w+)\\]/g, \".$1\");\r\n\r\n    field._keyPath = {\r\n      key: field.key,\r\n      path: key.indexOf(\".\") !== -1 ? key.split(\".\") : [key]\r\n    };\r\n  }\r\n\r\n  return field._keyPath.path.slice(0);\r\n}\r\n\r\nexport const VXFORM_VALIDATORS = [\r\n  \"required\",\r\n  \"pattern\",\r\n  \"minLength\",\r\n  \"maxLength\",\r\n  \"min\",\r\n  \"max\"\r\n];\r\n\r\nexport function assignModelValue(model: any, paths: string[], value: any) {\r\n  for (let i = 0; i < paths.length - 1; i++) {\r\n    const path = paths[i];\r\n    if (!model[path] || !isObject(model[path])) {\r\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\r\n    }\r\n\r\n    model = model[path];\r\n  }\r\n\r\n  model[paths[paths.length - 1]] = clone(value);\r\n}\r\n\r\nexport function getFieldValue(field: VXFormFieldConfig): any {\r\n  let model = field.parent.model;\r\n  for (const path of getKeyPath(field)) {\r\n    if (!model) {\r\n      return model;\r\n    }\r\n    model = model[path];\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\r\n  args.forEach(src => {\r\n    for (let srcArg in src) {\r\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\r\n        dest[srcArg] = clone(src[srcArg]);\r\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\r\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\r\n      }\r\n    }\r\n  });\r\n  return dest;\r\n}\r\n\r\nexport function isNullOrUndefined(value: any) {\r\n  return value === undefined || value === null;\r\n}\r\n\r\nexport function isUndefined(value: any) {\r\n  return value === undefined;\r\n}\r\n\r\nexport function isBlankString(value: any) {\r\n  return value === \"\";\r\n}\r\n\r\nexport function isFunction(value: any) {\r\n  return typeof value === \"function\";\r\n}\r\n\r\nexport function objAndSameType(obj1: any, obj2: any) {\r\n  return (\r\n    isObject(obj1) &&\r\n    isObject(obj2) &&\r\n    Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2) &&\r\n    !(Array.isArray(obj1) || Array.isArray(obj2))\r\n  );\r\n}\r\n\r\nexport function isObject(x: any) {\r\n  return x != null && typeof x === \"object\";\r\n}\r\n\r\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === \"function\";\r\n}\r\n\r\nexport function clone(value: any): any {\r\n  if (\r\n    !isObject(value) ||\r\n    isObservable(value) ||\r\n    value.changingThisBreaksApplicationSecurity ||\r\n    [\"RegExp\", \"FileList\", \"File\", \"Blob\"].indexOf(value.constructor.name) !==\r\n      -1\r\n  ) {\r\n    return value;\r\n  }\r\n\r\n  if (value._isAMomentObject && isFunction(value.clone)) {\r\n    return value.clone();\r\n  }\r\n\r\n  if (value instanceof AbstractControl) {\r\n    return null;\r\n  }\r\n\r\n  if (value instanceof Date) {\r\n    return new Date(value.getTime());\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return value.slice(0).map(v => clone(v));\r\n  }\r\n\r\n  const proto = Object.getPrototypeOf(value);\r\n  let c = Object.create(proto);\r\n  c = Object.setPrototypeOf(c, proto);\r\n  return Object.keys(value).reduce((newVal, prop) => {\r\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\r\n    if (propDesc.get) {\r\n      Object.defineProperty(newVal, prop, propDesc);\r\n    } else {\r\n      newVal[prop] = clone(value[prop]);\r\n    }\r\n\r\n    return newVal;\r\n  }, c);\r\n}\r\n\r\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\r\n  Object.defineProperty(field, prop, {\r\n    enumerable: false,\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n  field[prop] = defaultValue;\r\n}\r\n\r\nexport function wrapProperty<T = any>(\r\n  field: any,\r\n  prop: string,\r\n  setFn: (change: {\r\n    currentValue: T;\r\n    previousValue?: T;\r\n    firstChange: boolean;\r\n  }) => void\r\n) {\r\n  defineHiddenProp(field, `___$${prop}`, field[prop]);\r\n  setFn({ currentValue: field[prop], firstChange: true });\r\n\r\n  Object.defineProperty(field, prop, {\r\n    configurable: true,\r\n    get: () => field[`___$${prop}`],\r\n    set: currentValue => {\r\n      if (currentValue !== field[`___$${prop}`]) {\r\n        const previousValue = field[`___$${prop}`];\r\n        field[`___$${prop}`] = currentValue;\r\n        setFn({ previousValue, currentValue, firstChange: false });\r\n      }\r\n    }\r\n  });\r\n}\r\n","import {\r\n  Injectable,\r\n  InjectionToken,\r\n  ComponentRef,\r\n  ComponentFactoryResolver,\r\n  Injector\r\n} from \"@angular/core\";\r\nimport { ValidationErrors, AbstractControl } from \"@angular/forms\";\r\nimport { FieldType } from \"./../templates/field.type\";\r\nimport { reverseDeepMerge, defineHiddenProp } from \"./../utils\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormFieldConfigCache\r\n} from \"../components/vxform.field.config\";\r\n\r\nexport const VXFORM_CONFIG = new InjectionToken<VXFormConfig>(\"VXFORM_CONFIG\");\r\n\r\nexport interface VXFormExtension {\r\n  prePopulate?(field: VXFormFieldConfig): void;\r\n  onPopulate?(field: VXFormFieldConfig): void;\r\n  postPopulate?(field: VXFormFieldConfig): void;\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class VXFormConfig {\r\n  types: { [name: string]: TypeOption } = {};\r\n  validators: { [name: string]: ValidatorOption } = {};\r\n  wrappers: { [name: string]: WrapperOption } = {};\r\n  messages: {\r\n    [name: string]: string | ((error: any, field: VXFormFieldConfig) => string);\r\n  } = {};\r\n  templateManipulators: {\r\n    preWrapper: ManipulatorWrapper[];\r\n    postWrapper: ManipulatorWrapper[];\r\n  } = {\r\n    preWrapper: [],\r\n    postWrapper: []\r\n  };\r\n  extras: ConfigOption[\"extras\"] = {\r\n    checkExpressionOn: \"changeDetectionCheck\",\r\n    showError: function(field: FieldType) {\r\n      return (\r\n        field.formControl &&\r\n        field.formControl.invalid &&\r\n        (field.formControl.touched ||\r\n          (field.options.parentForm && field.options.parentForm.submitted) ||\r\n          (field.field.validation && field.field.validation.show))\r\n      );\r\n    }\r\n  };\r\n  extensions: { [name: string]: VXFormExtension } = {};\r\n\r\n  appConfig: {\r\n    url?: string;\r\n    token?: string;\r\n  };\r\n\r\n  addConfig(config: ConfigOption) {\r\n    if (config.types) {\r\n      config.types.forEach(type => this.setType(type));\r\n    }\r\n    if (config.validators) {\r\n      config.validators.forEach(validator => this.setValidator(validator));\r\n    }\r\n    if (config.wrappers) {\r\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\r\n    }\r\n    if (config.manipulators) {\r\n      config.manipulators.forEach(manipulator =>\r\n        this.setManipulator(manipulator)\r\n      );\r\n    }\r\n    if (config.validationMessages) {\r\n      config.validationMessages.forEach(validation =>\r\n        this.addValidatorMessage(validation.name, validation.message)\r\n      );\r\n    }\r\n    if (config.extensions) {\r\n      config.extensions.forEach(c => (this.extensions[c.name] = c.extension));\r\n    }\r\n    if (config.extras) {\r\n      this.extras = { ...this.extras, ...config.extras };\r\n    }\r\n  }\r\n\r\n  setType(options: TypeOption | TypeOption[]) {\r\n    if (Array.isArray(options)) {\r\n      options.forEach(option => this.setType(option));\r\n    } else {\r\n      if (!this.types[options.name]) {\r\n        this.types[options.name] = <TypeOption>{ name: options.name };\r\n      }\r\n\r\n      [\"component\", \"extends\", \"defaultOptions\"].forEach(prop => {\r\n        if (options.hasOwnProperty(prop)) {\r\n          this.types[options.name][prop] = options[prop];\r\n        }\r\n      });\r\n\r\n      if (options.wrappers) {\r\n        options.wrappers.forEach(wrapper =>\r\n          this.setTypeWrapper(options.name, wrapper)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getType(name: string): TypeOption {\r\n    if (!this.types[name]) {\r\n    }\r\n\r\n    this.mergeExtendedType(name);\r\n\r\n    return this.types[name];\r\n  }\r\n\r\n  getMergedField(field: VXFormFieldConfig = {}): any {\r\n    const type = this.getType(field.type);\r\n    if (type.defaultOptions) {\r\n      reverseDeepMerge(field, type.defaultOptions);\r\n    }\r\n\r\n    const extendDefaults =\r\n      type.extends && this.getType(type.extends).defaultOptions;\r\n    if (extendDefaults) {\r\n      reverseDeepMerge(field, extendDefaults);\r\n    }\r\n\r\n    if (field && field.optionsTypes) {\r\n      field.optionsTypes.forEach(option => {\r\n        const defaultOptions = this.getType(option).defaultOptions;\r\n        if (defaultOptions) {\r\n          reverseDeepMerge(field, defaultOptions);\r\n        }\r\n      });\r\n    }\r\n\r\n    const componentRef = this.createComponent(field);\r\n    if (\r\n      componentRef &&\r\n      componentRef.instance &&\r\n      componentRef.instance.defaultOptions\r\n    ) {\r\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\r\n    }\r\n\r\n    if (!field.wrappers && type.wrappers) {\r\n      field.wrappers = [...type.wrappers];\r\n    }\r\n  }\r\n\r\n  createComponent(\r\n    field: VXFormFieldConfigCache = {},\r\n    resolver?: ComponentFactoryResolver,\r\n    injector?: Injector\r\n  ): ComponentRef<FieldType> {\r\n    if (!field.type) {\r\n      return;\r\n    }\r\n\r\n    const cf = field._componentFactory;\r\n    if (\r\n      cf &&\r\n      field.type === cf.type &&\r\n      cf.componentRef &&\r\n      cf.componentRef.hostView &&\r\n      !cf.componentRef.hostView.destroyed\r\n    ) {\r\n      return field._componentFactory.componentRef;\r\n    }\r\n\r\n    const type = this.getType(field.type);\r\n    if (!resolver) {\r\n      resolver = field.parent.options._componentFactoryResolver;\r\n    }\r\n    if (!injector) {\r\n      injector = this.getFieldInjector(field);\r\n    }\r\n\r\n    defineHiddenProp(field, \"_componentFactory\", {\r\n      type: field.type,\r\n      component: type.component,\r\n      componentRef: resolver\r\n        ? resolver.resolveComponentFactory(type.component).create(injector)\r\n        : null\r\n    });\r\n\r\n    return field._componentFactory.componentRef;\r\n  }\r\n\r\n  setWrapper(options: WrapperOption) {\r\n    this.wrappers[options.name] = options;\r\n    if (options.types) {\r\n      options.types.forEach(type => {\r\n        this.setTypeWrapper(type, options.name);\r\n      });\r\n    }\r\n  }\r\n\r\n  getWrapper(name: string): WrapperOption {\r\n    if (!this.wrappers[name]) {\r\n    }\r\n\r\n    return this.wrappers[name];\r\n  }\r\n\r\n  setTypeWrapper(type: string, name: string) {\r\n    if (!this.types[type]) {\r\n      this.types[type] = <TypeOption>{};\r\n    }\r\n    if (!this.types[type].wrappers) {\r\n      this.types[type].wrappers = [];\r\n    }\r\n    if (this.types[type].wrappers.indexOf(name) === -1) {\r\n      this.types[type].wrappers.push(name);\r\n    }\r\n  }\r\n\r\n  setValidator(options: ValidatorOption) {\r\n    this.validators[options.name] = options;\r\n  }\r\n\r\n  getValidator(name: string): ValidatorOption {\r\n    if (!this.validators[name]) {\r\n    }\r\n\r\n    return this.validators[name];\r\n  }\r\n\r\n  addValidatorMessage(\r\n    name: string,\r\n    message: string | ((error: any, field: VXFormFieldConfig) => string)\r\n  ) {\r\n    this.messages[name] = message;\r\n  }\r\n\r\n  getValidatorMessage(name: string) {\r\n    return this.messages[name];\r\n  }\r\n\r\n  setManipulator(manipulator: ManipulatorOption) {\r\n    new manipulator.class()[manipulator.method](this);\r\n  }\r\n\r\n  setAPPConfig(config: APPConfig) {\r\n    this.appConfig = config;\r\n  }\r\n\r\n  private mergeExtendedType(name: string) {\r\n    if (!this.types[name].extends) {\r\n      return;\r\n    }\r\n\r\n    const extendedType = this.getType(this.types[name].extends);\r\n    if (!this.types[name].component) {\r\n      this.types[name].component = extendedType.component;\r\n    }\r\n\r\n    if (!this.types[name].wrappers) {\r\n      this.types[name].wrappers = extendedType.wrappers;\r\n    }\r\n  }\r\n\r\n  private getFieldInjector(field: VXFormFieldConfigCache = {}) {\r\n    const parent = field.parent;\r\n    if (parent._componentFactory && parent._componentFactory.componentRef) {\r\n      return parent._componentFactory.componentRef.injector;\r\n    }\r\n\r\n    return parent.options._injector;\r\n  }\r\n}\r\nexport interface TypeOption {\r\n  name: string;\r\n  component?: any;\r\n  wrappers?: string[];\r\n  extends?: string;\r\n  defaultOptions?: VXFormFieldConfig;\r\n}\r\n\r\nexport interface WrapperOption {\r\n  name: string;\r\n  component: any;\r\n  types?: string[];\r\n}\r\n\r\nexport interface FieldValidatorFn {\r\n  (c: AbstractControl, field: VXFormFieldConfig): ValidationErrors | null;\r\n}\r\n\r\nexport interface ValidatorOption {\r\n  name: string;\r\n  validation: FieldValidatorFn;\r\n}\r\n\r\nexport interface ExtensionOption {\r\n  name: string;\r\n  extension: VXFormExtension;\r\n}\r\n\r\nexport interface ValidationMessageOption {\r\n  name: string;\r\n  message: string | ((error: any, field: VXFormFieldConfig) => string);\r\n}\r\n\r\nexport interface ManipulatorOption {\r\n  class?: { new (): any };\r\n  method?: string;\r\n}\r\n\r\nexport interface ManipulatorWrapper {\r\n  (f: VXFormFieldConfig): string;\r\n}\r\n\r\nexport interface TemplateManipulators {\r\n  preWrapper?: ManipulatorWrapper[];\r\n  postWrapper?: ManipulatorWrapper[];\r\n}\r\n\r\nexport interface ConfigOption {\r\n  types?: TypeOption[];\r\n  wrappers?: WrapperOption[];\r\n  validators?: ValidatorOption[];\r\n  extensions?: ExtensionOption[];\r\n  validationMessages?: ValidationMessageOption[];\r\n\r\n  manipulators?: ManipulatorOption[];\r\n  extras?: {\r\n    fieldTransform?: any;\r\n    immutable?: boolean;\r\n    showError?: (field: FieldType) => boolean;\r\n    checkExpressionOn?: \"modelChange\" | \"changeDetectionCheck\";\r\n  };\r\n}\r\n\r\nexport interface APPConfig {\r\n  url?: string;\r\n  token?: string;\r\n}\r\n","import { Injectable, ComponentFactoryResolver, Injector } from \"@angular/core\";\r\nimport { FormGroup, FormArray } from \"@angular/forms\";\r\nimport { VXFormConfig } from \"./vxform.config\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormOptions,\r\n  VXFormFieldConfigCache,\r\n  VXFormValueChangeEvent,\r\n  VXFormOptionsCache\r\n} from \"../components/vxform.field.config\";\r\nimport { Subject } from \"rxjs\";\r\nimport { defineHiddenProp } from \"../utils\"; \r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class VXFormBuilder {\r\n  constructor(  \r\n    private vxFormConfig: VXFormConfig,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  buildForm(\r\n    formControl: FormGroup | FormArray,\r\n    fieldGroup: VXFormFieldConfig[] = [],\r\n    model: any,\r\n    options: VXFormOptions\r\n  ) {\r\n    if (!this.vxFormConfig.extensions.core) {\r\n    }\r\n \r\n    \r\n    this._buildForm({\r\n      fieldGroup,\r\n      model,\r\n      formControl,\r\n      options: this._setOptions(options)\r\n    }); \r\n  }\r\n\r\n  private _buildForm(field: VXFormFieldConfigCache) {\r\n    this.getExtensions().forEach(\r\n      extension => extension.prePopulate && extension.prePopulate(field)\r\n    );\r\n    this.getExtensions().forEach(\r\n      extension => extension.onPopulate && extension.onPopulate(field)\r\n    );\r\n\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup.forEach(f => this._buildForm(f));\r\n    }\r\n\r\n    this.getExtensions().forEach(\r\n      extension => extension.postPopulate && extension.postPopulate(field)\r\n    );\r\n  }\r\n\r\n  private getExtensions() {\r\n    return Object.keys(this.vxFormConfig.extensions).map(\r\n      name => this.vxFormConfig.extensions[name]\r\n    );\r\n  }\r\n\r\n  private _setOptions(options: VXFormOptionsCache) {\r\n    options = options || {};\r\n    options.formState = options.formState || {};\r\n\r\n    if (!options.showError) {\r\n      options.showError = this.vxFormConfig.extras.showError;\r\n    }\r\n\r\n    if (!options.fieldChanges) {\r\n      defineHiddenProp(\r\n        options,\r\n        \"fieldChanges\",\r\n        new Subject<VXFormValueChangeEvent>()\r\n      );\r\n    }\r\n\r\n    if (!options._componentFactoryResolver) {\r\n      defineHiddenProp(\r\n        options,\r\n        \"_componentFactoryResolver\",\r\n        this.componentFactoryResolver\r\n      );\r\n    }\r\n\r\n    if (!options._injector) {\r\n      defineHiddenProp(options, \"_injector\", this.injector);\r\n    }\r\n\r\n    if (!options._hiddenFieldsForCheck) {\r\n      options._hiddenFieldsForCheck = [];\r\n    }\r\n\r\n    if (!options._markForCheck) {\r\n      options._markForCheck = field => {\r\n        if (field._componentRefs) {\r\n          field._componentRefs.forEach(ref =>\r\n            ref.changeDetectorRef.markForCheck()\r\n          );\r\n        }\r\n\r\n        if (field.fieldGroup) {\r\n          field.fieldGroup.forEach(f => options._markForCheck(f));\r\n        }\r\n      };\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n","\r\nimport { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormFieldProperty\r\n} from \"../components/vxform.field.config\";\r\nimport * as moment_ from \"moment\";\r\nconst moment = moment_;\r\nimport { isArray } from \"util\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class TestBaseUtils {\r\n    base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-*/!\";\r\n    base64DecodeChars = new Array(\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\r\n        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\r\n        -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\r\n        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\r\n        -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\r\n\r\n    baseEncode(str):string {\r\n        var out, i, len;\r\n        var c1, c2, c3;\r\n\r\n        len = str.length;\r\n        i = 0;\r\n        out = \"\";\r\n        while (i < len) {\r\n            c1 = str.charCodeAt(i++) & 0xff;\r\n            if (i == len) {\r\n                out += this.base64EncodeChars.charAt(c1 >> 2);\r\n                out += this.base64EncodeChars.charAt((c1 & 0x3) << 4);\r\n                out += \"==\";\r\n                break;\r\n            }\r\n            c2 = str.charCodeAt(i++);\r\n            if (i == len) {\r\n                out += this.base64EncodeChars.charAt(c1 >> 2);\r\n                out += this.base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\r\n                out += this.base64EncodeChars.charAt((c2 & 0xF) << 2);\r\n                out += \"=\";\r\n                break;\r\n            }\r\n            c3 = str.charCodeAt(i++);\r\n            out += this.base64EncodeChars.charAt(c1 >> 2);\r\n            out += this.base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\r\n            out += this.base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));\r\n            out += this.base64EncodeChars.charAt(c3 & 0x3F);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    baseDecode(str):string {\r\n        var c1, c2, c3, c4;\r\n        var i, len, out;\r\n\r\n        len = str.length;\r\n        i = 0;\r\n        out = \"\";\r\n        while (i < len) {\r\n            /* c1 */\r\n            do {\r\n                c1 = this.base64DecodeChars[str.charCodeAt(i++) & 0xff];\r\n            } while (i < len && c1 == -1);\r\n            if (c1 == -1)\r\n                break;\r\n\r\n            /* c2 */\r\n            do {\r\n                c2 = this.base64DecodeChars[str.charCodeAt(i++) & 0xff];\r\n            } while (i < len && c2 == -1);\r\n            if (c2 == -1)\r\n                break;\r\n\r\n            out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));\r\n\r\n            /* c3 */\r\n            do {\r\n                c3 = str.charCodeAt(i++) & 0xff;\r\n                if (c3 == 61)\r\n                    return out;\r\n                c3 = this.base64DecodeChars[c3];\r\n            } while (i < len && c3 == -1);\r\n            if (c3 == -1)\r\n                break;\r\n\r\n            out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));\r\n\r\n            /* c4 */\r\n            do {\r\n                c4 = str.charCodeAt(i++) & 0xff;\r\n                if (c4 == 61)\r\n                    return out;\r\n                c4 = this.base64DecodeChars[c4];\r\n            } while (i < len && c4 == -1);\r\n            if (c4 == -1)\r\n                break;\r\n            out += String.fromCharCode(((c3 & 0x03) << 6) | c4);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    t1(str:string){ \r\n        let result = false;\r\n        debugger\r\n        try{\r\n            str = this.baseDecode(str);\r\n            if(str!=undefined && str!=null && str!=\"\"){\r\n                let arr:string[]=str.split(\";\");\r\n                if(arr!=null && arr.length==2){\r\n                    let str1 = arr[0];\r\n                    let str2 = arr[1]; \r\n                    if(str1.length==parseInt(str2)){ \r\n                        let begintime = moment().toDate();\r\n                        let endtime = moment(str1).toDate();\r\n                        console.log('[][][]')\r\n                        console.log(moment(endtime).diff(begintime,'day'));\r\n                        if(moment(endtime).diff(begintime,'day')>0){\r\n                            result = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }catch(ex){\r\n            \r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  DoCheck,\r\n  OnChanges,\r\n  Input,\r\n  SimpleChanges,\r\n  Optional,\r\n  EventEmitter,\r\n  Output,\r\n  OnDestroy,\r\n  Attribute,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { FormGroup, FormArray, FormGroupDirective } from \"@angular/forms\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormOptions,\r\n  VXFormOptionsCache\r\n} from \"./vxform.field.config\";\r\nimport { VXFormBuilder } from \"../services/vxform.builder\";\r\nimport { VXFormConfig } from \"../services/vxform.config\";\r\nimport {\r\n  assignModelValue,\r\n  isNullOrUndefined,\r\n  wrapProperty,\r\n  clone,\r\n  defineHiddenProp,\r\n  getKeyPath\r\n} from \"../utils\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { TestBaseUtils } from '../tools/test';\r\n\r\n@Component({\r\n  selector: \"vxform\",\r\n  template: `\r\n    <ng-container *ngIf=\"checkTest\">\r\n    <ng-container *ngFor=\"let field of fields\">\r\n      <vxform-field\r\n        *ngIf=\"checkFieldShow(field)\"\r\n        hide-deprecation\r\n        [form]=\"field.form\"\r\n        [options]=\"field.options\"\r\n        [model]=\"field.model\"\r\n        [field]=\"field\"\r\n      >\r\n      </vxform-field>\r\n    </ng-container>\r\n    <ng-container #content>\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n    </ng-container>\r\n  `,\r\n  host: {\r\n    \"[class]\": \"class\"\r\n  },\r\n  providers: [VXFormBuilder,TestBaseUtils]\r\n})\r\nexport class VXForm implements DoCheck, OnChanges, OnDestroy {\r\n  @Input() form: FormGroup | FormArray;\r\n\r\n  @Input()\r\n  set model(model: any) {\r\n    this._model = this.immutable ? clone(model) : model;\r\n  }\r\n  get model() {\r\n    return this._model || {};\r\n  }\r\n\r\n  @Input()\r\n  set fields(fields: VXFormFieldConfig[]) {\r\n    this._fields = this.immutable ? clone(fields) : fields;\r\n  }\r\n  get fields() {\r\n      return this._fields || [];\r\n     \r\n  }\r\n\r\n  @Input()\r\n  set options(options: VXFormOptions) {\r\n    this._options = this.immutable ? clone(options) : options;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  @Input() class: string;\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n  @ViewChild(\"content\", { static: true }) set content(\r\n    content: ElementRef<HTMLElement>\r\n  ) {\r\n    if (content && content.nativeElement.nextSibling) {\r\n    }\r\n  }\r\n\r\n  @Input() status: number = 0;\r\n\r\n  private immutable = false;\r\n  private _model: any;\r\n  private _fields: VXFormFieldConfig[];\r\n  private _options: VXFormOptions;\r\n  private initialModel: any;\r\n  private modelChangeSubs: Subscription[] = [];\r\n  private gogo:boolean = true;\r\n  private enableCheckExprDebounce = false;\r\n  private checkExpressionChange$ = this.modelChange\r\n    .pipe(debounceTime(this.enableCheckExprDebounce ? 100 : 0))\r\n    .subscribe(() => {\r\n      this.enableCheckExprDebounce = true;\r\n      this.checkExpressionChange();\r\n      this.enableCheckExprDebounce = false;\r\n    });\r\n\r\n  constructor(\r\n    private vxFormBuilder: VXFormBuilder,\r\n    private vxFormConfig: VXFormConfig,\r\n    private test:TestBaseUtils,\r\n    @Attribute(\"immutable\") immutable,\r\n    @Optional() private parentFormGroup: FormGroupDirective\r\n  ) {\r\n    if (immutable !== null) {\r\n    }\r\n\r\n    this.immutable = immutable !== null || !!vxFormConfig.extras.immutable;\r\n    // let linces = localStorage.getItem(\"VX_FORM_LINCES\")\r\n    // if(linces!=undefined && linces!=null && linces!=\"\"){\r\n    //   this.gogo = this.test.t1(linces);\r\n    // } \r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.vxFormConfig.extras.checkExpressionOn === \"changeDetectionCheck\") {\r\n      this.checkExpressionChange();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.fields || changes.form || changes.model) {\r\n      this.form = this.form || new FormGroup({});\r\n      this.setOptions();\r\n      this.clearModelSubscriptions();\r\n      this.vxFormBuilder.buildForm(\r\n        this.form,\r\n        this.fields,\r\n        this.model,\r\n        this.options\r\n      );\r\n      this.trackModelChanges(this.fields);\r\n      this.options.updateInitialValue();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearModelSubscriptions();\r\n    this.checkExpressionChange$.unsubscribe();\r\n  }\r\n\r\n  changeModel(event: { key: string; value: any }) {\r\n    assignModelValue(this.model, event.key.split(\".\"), event.value);\r\n    this.modelChange.emit(clone(this.model));\r\n  }\r\n\r\n  setOptions() { \r\n    if (!this.options) {\r\n      this.options = {};\r\n    }\r\n\r\n    if (!this.options.resetModel) {\r\n      this.options.resetModel = (model?: any) => {\r\n        model = clone(isNullOrUndefined(model) ? this.initialModel : model);\r\n        if (this.model) {\r\n          Object.keys(this.model).forEach(k => delete this.model[k]);\r\n          Object.assign(this.model, model || {});\r\n        }\r\n\r\n        (<VXFormOptionsCache>this.options)._buildForm();\r\n\r\n        if (\r\n          this.options.parentForm &&\r\n          this.options.parentForm.control === this.form\r\n        ) {\r\n          this.options.parentForm.resetForm(model);\r\n        } else {\r\n          this.form.reset(model);\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!this.options.parentForm && this.parentFormGroup) {\r\n      defineHiddenProp(this.options, \"parentForm\", this.parentFormGroup);\r\n      wrapProperty(this.options.parentForm, \"submitted\", ({ firstChange }) => {\r\n        if (!firstChange) {\r\n          (<VXFormOptionsCache>this.options)._markForCheck({\r\n            fieldGroup: this.fields,\r\n            model: this.model,\r\n            formControl: this.form,\r\n            options: this.options\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!this.options.updateInitialValue) {\r\n      this.options.updateInitialValue = () =>\r\n        (this.initialModel = clone(this.model));\r\n    }\r\n\r\n    if (!(<VXFormOptionsCache>this.options)._buildForm) {\r\n      (<VXFormOptionsCache>this.options)._buildForm = (\r\n        emitModelChange = false\r\n      ) => {\r\n        this.clearModelSubscriptions();\r\n        this.vxFormBuilder.buildForm(\r\n          this.form,\r\n          this.fields,\r\n          this.model,\r\n          this.options\r\n        );\r\n        this.trackModelChanges(this.fields);\r\n\r\n        if (emitModelChange) {\r\n          this.modelChange.emit(clone(this.model));\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  private checkExpressionChange() {\r\n    if (this.options && (<VXFormOptionsCache>this.options)._checkField) {\r\n      (<VXFormOptionsCache>this.options)._checkField({\r\n        fieldGroup: this.fields,\r\n        model: this.model,\r\n        formControl: this.form,\r\n        options: this.options\r\n      });\r\n    }\r\n  }\r\n\r\n  private trackModelChanges(\r\n    fields: VXFormFieldConfig[],\r\n    rootKey: string[] = []\r\n  ) {\r\n    fields.forEach(field => {\r\n      field.status = this.status;\r\n      if (field.key && !field.fieldGroup) {\r\n        const control = field.formControl;\r\n        let valueChanges = control.valueChanges;\r\n\r\n        const { updateOn, debounce } = field.modelOptions;\r\n        if (\r\n          (!updateOn || updateOn === \"change\") &&\r\n          debounce &&\r\n          debounce.default > 0\r\n        ) {\r\n          valueChanges = control.valueChanges.pipe(\r\n            debounceTime(debounce.default)\r\n          );\r\n        }\r\n\r\n        this.modelChangeSubs.push(\r\n          valueChanges.subscribe(value => {\r\n            if ((control as any)._onChange.length > 1) {\r\n              control.patchValue(value, { emitEvent: false });\r\n            }\r\n\r\n            if (field.parsers && field.parsers.length > 0) {\r\n              field.parsers.forEach(parserFn => (value = parserFn(value)));\r\n            }\r\n\r\n            this.changeModel({\r\n              key: [...rootKey, ...getKeyPath(field)].join(\".\"),\r\n              value\r\n            });\r\n          })\r\n        );\r\n      }\r\n\r\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\r\n        this.trackModelChanges(\r\n          field.fieldGroup,\r\n          field.key ? [...rootKey, ...getKeyPath(field)] : rootKey\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  private clearModelSubscriptions() {\r\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\r\n    this.modelChangeSubs = [];\r\n  }\r\n\r\n  checkFieldShow(field: VXFormFieldConfig) {\r\n    let result = true;\r\n    if (field && field.hasOwnProperty(\"show\")) {\r\n      result = field.show;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get checkTest(){ \r\n    return this.gogo;\r\n  }\r\n  set checkTest(value:boolean){\r\n    this.gogo = value;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewContainerRef,\r\n  ViewChild,\r\n  ComponentRef,\r\n  SimpleChanges,\r\n  Attribute,\r\n  ComponentFactoryResolver,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  DoCheck,\r\n  AfterContentInit,\r\n  AfterContentChecked,\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n  Injector\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { VXFormConfig } from \"../services/vxform.config\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormOptions,\r\n  VXFormFieldConfigCache\r\n} from \"./vxform.field.config\";\r\nimport { defineHiddenProp, wrapProperty } from \"../utils\";\r\nimport { FieldWrapper } from \"../templates/field.wrapper\";\r\nimport { FieldType } from \"../templates/field.type\";\r\n\r\n@Component({\r\n  selector: \"vxform-field\",\r\n  template: `\r\n    <ng-template #container></ng-template>\r\n  `,\r\n  host: {\r\n    \"[style.display]\": 'field.hide ? \"none\":\"\"',\r\n    //\"[class]\": \"field.className? field.className : className\"\r\n    \"[class]\":\r\n      \"field.type=='text'?'panel-'+field.type+' panel-'+field.typeold: 'panel-'+field.type\"\r\n  }\r\n})\r\nexport class VXFormField\r\n  implements\r\n    OnInit,\r\n    OnChanges,\r\n    DoCheck,\r\n    AfterContentInit,\r\n    AfterContentChecked,\r\n    AfterViewInit,\r\n    AfterViewChecked,\r\n    OnDestroy {\r\n  @Input() field: VXFormFieldConfig;\r\n  @Input(\"class\") className: string = \"\";\r\n\r\n  warnDeprecation = false;\r\n\r\n  @Input() set model(m: any) {\r\n    this.warnDeprecation && console.warn(`:${this.constructor.name}`);\r\n  }\r\n\r\n  @Input() set form(form: FormGroup) {\r\n    this.warnDeprecation && console.warn(`:${this.constructor.name}`);\r\n  }\r\n\r\n  @Input() set options(options: VXFormOptions) {\r\n    this.warnDeprecation && console.warn(`:${this.constructor.name}`);\r\n  }\r\n\r\n  @Input() set rownumber(value:number){\r\n    if(value!=undefined && value!=null && value>-1){\r\n      this.field.rownumber = value;\r\n    }\r\n  }\r\n\r\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild(\"container\", <any>{ read: ViewContainerRef, static: true })\r\n  containerRef: ViewContainerRef;\r\n\r\n  constructor(\r\n    private vxFormConfig: VXFormConfig,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    @Attribute(\"hide-deprecation\") hideDeprecation\r\n  ) {\r\n    this.warnDeprecation = hideDeprecation === null;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.triggerHook(\"afterContentInit\");\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.triggerHook(\"afterContentChecked\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.triggerHook(\"afterViewInit\");\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.triggerHook(\"afterViewChecked\");\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.triggerHook(\"doCheck\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.triggerHook(\"onInit\");\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.triggerHook(\"onChanges\", changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.field && defineHiddenProp(this.field, \"_componentRefs\", []);\r\n    this.triggerHook(\"onDestroy\");\r\n  }\r\n\r\n  private renderField(\r\n    containerRef: ViewContainerRef,\r\n    f: VXFormFieldConfigCache,\r\n    wrappers: string[]\r\n  ) {\r\n    if (this.containerRef === containerRef) {\r\n      defineHiddenProp(this.field, \"_componentRefs\", []);\r\n      this.containerRef.clear();\r\n    }\r\n\r\n    if (wrappers && wrappers.length > 0) {\r\n      const [wrapper, ...wps] = wrappers;\r\n      const { component } = this.vxFormConfig.getWrapper(wrapper);\r\n      const cfr =\r\n        f.options && f.options._componentFactoryResolver\r\n          ? f.options._componentFactoryResolver\r\n          : this.componentFactoryResolver;\r\n\r\n      const ref = containerRef.createComponent<FieldWrapper>(\r\n        cfr.resolveComponentFactory(component)\r\n      );\r\n      this.attachComponentRef(ref, f);\r\n      wrapProperty(\r\n        ref.instance,\r\n        \"fieldComponent\",\r\n        ({ currentValue, firstChange }) => {\r\n          if (currentValue) {\r\n            this.renderField(currentValue as ViewContainerRef, f, wps);\r\n            !firstChange && ref.changeDetectorRef.detectChanges();\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      const ref = this.vxFormConfig.createComponent(\r\n        f,\r\n        this.componentFactoryResolver,\r\n        this.injector\r\n      );\r\n      if (ref) {\r\n        this.attachComponentRef(ref, f);\r\n        containerRef.insert(ref.hostView);\r\n      }\r\n    }\r\n  }\r\n\r\n  private triggerHook(name: string, changes?: SimpleChanges) {\r\n    if (this.field.hooks && this.field.hooks[name]) {\r\n      if (!changes || changes.field) {\r\n        this.field.hooks[name](this.field);\r\n      }\r\n    }\r\n\r\n    if (this.field.lifecycle && this.field.lifecycle[name]) {\r\n      this.field.lifecycle[name](\r\n        this.field.form,\r\n        this.field,\r\n        this.field.model,\r\n        this.field.options\r\n      );\r\n    }\r\n\r\n    if (name === \"onChanges\" && changes.field) {\r\n      this.renderField(this.containerRef, this.field, this.field.wrappers);\r\n    }\r\n  }\r\n\r\n  private attachComponentRef<T extends FieldType>(\r\n    ref: ComponentRef<T>,\r\n    field: VXFormFieldConfigCache\r\n  ) {\r\n    field._componentRefs.push(ref);\r\n    Object.assign(ref.instance, { field });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Renderer2,\r\n  DoCheck,\r\n  Inject,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormTemplateOptions\r\n} from \"./vxform.field.config\";\r\nimport { wrapProperty, defineHiddenProp, VXFORM_VALIDATORS } from \"../utils\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\n\r\n@Directive({\r\n  selector: \"[vxFormAttributes]\",\r\n  host: {\r\n    \"(focus)\": \"onFocus($event)\",\r\n    \"(blur)\": \"onBlur($event)\",\r\n    \"(keyup)\": \"to.keyup && to.keyup(field, $event)\",\r\n    \"(keydown)\": \"to.keydown && to.keydown(field, $event)\",\r\n    \"(click)\": \"to.click && to.click(field, $event)\",\r\n    \"(change)\": \"onChange($event)\",\r\n    \"(keypress)\": \"to.keypress && to.keypress(field, $event)\"\r\n  }\r\n})\r\nexport class VXFormAttributes implements OnChanges, DoCheck, OnDestroy {\r\n  @Input(\"vxFormAttributes\") field: VXFormFieldConfig;\r\n\r\n  private document: Document;\r\n  private uiAttributesCache: any = {};\r\n  private uiAttributes = [\r\n    ...VXFORM_VALIDATORS,\r\n    \"tabindex\",\r\n    \"placeholder\",\r\n    \"readonly\",\r\n    \"disabled\",\r\n    \"step\"\r\n  ];\r\n\r\n  get to(): VXFormTemplateOptions {\r\n    return this.field.templateOptions || {};\r\n  }\r\n\r\n  private get fieldAttrElements() {\r\n    return (this.field && this.field[\"_attrElements\"]) || [];\r\n  }\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    @Inject(DOCUMENT) _document: any\r\n  ) {\r\n    this.document = _document;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.field) {\r\n      [\"id\", \"name\"].forEach(attr => {\r\n        this.field[attr] && this.setAttribute(attr, this.field[attr]);\r\n      });\r\n\r\n      if (this.to && this.to.attributes) {\r\n        wrapProperty(\r\n          this.to,\r\n          \"attributes\",\r\n          ({ currentValue, previousValue }) => {\r\n            if (previousValue) {\r\n              Object.keys(previousValue).forEach(attr =>\r\n                this.removeAttribute(attr)\r\n              );\r\n            }\r\n\r\n            if (currentValue) {\r\n              Object.keys(currentValue).forEach(attr =>\r\n                this.setAttribute(attr, currentValue[attr])\r\n              );\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      this.attachAttrElement();\r\n      if (this.fieldAttrElements.length === 1) {\r\n        wrapProperty(this.field, \"focus\", ({ currentValue }) => {\r\n          const element = this.fieldAttrElements\r\n            ? this.fieldAttrElements[0]\r\n            : null;\r\n          if (!element) {\r\n            return;\r\n          }\r\n\r\n          this.focusElement(element, currentValue);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  ngDoCheck() {\r\n    this.uiAttributes.forEach(attr => {\r\n      const value = this.to[attr];\r\n      if (this.uiAttributesCache[attr] !== value) {\r\n        this.uiAttributesCache[attr] = value;\r\n        if (value || value === 0) {\r\n          this.setAttribute(attr, value === true ? attr : `${value}`);\r\n        } else {\r\n          this.removeAttribute(attr);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.detachAttrElement();\r\n  }\r\n\r\n  focusElement(element, value: boolean) {\r\n    if (!element.focus) {\r\n      return;\r\n    }\r\n\r\n    const isFocused =\r\n      !!this.document.activeElement &&\r\n      this.fieldAttrElements.some(\r\n        element =>\r\n          this.document.activeElement === element ||\r\n          element.contains(this.document.activeElement)\r\n      );\r\n\r\n    if (value && !isFocused) {\r\n      element.focus();\r\n    } else if (!value && isFocused) {\r\n      element.blur();\r\n    }\r\n  }\r\n\r\n  onFocus($event: any) {\r\n    this.field[\"___$focus\"] = true;\r\n    if (this.to.focus) {\r\n      this.to.focus(this.field, $event);\r\n    }\r\n  }\r\n\r\n  onBlur($event: any) {\r\n    this.field[\"___$focus\"] = false;\r\n    if (this.to.blur) {\r\n      this.to.blur(this.field, $event);\r\n    }\r\n  }\r\n\r\n  onChange($event: any) {\r\n    if (this.to.change) {\r\n      this.to.change(this.field, $event);\r\n    }\r\n\r\n    if (this.field.formControl) {\r\n      this.field.formControl.markAsDirty();\r\n    }\r\n  }\r\n\r\n  private attachAttrElement() {\r\n    if (this.field[\"_attrElements\"]) {\r\n      this.field[\"_attrElements\"].push(this.elementRef.nativeElement);\r\n    } else {\r\n      defineHiddenProp(this.field, \"_attrElements\", [\r\n        this.elementRef.nativeElement\r\n      ]);\r\n    }\r\n  }\r\n\r\n  private detachAttrElement() {\r\n    const index = this.fieldAttrElements.findIndex(\r\n      element => element !== this.elementRef.nativeElement\r\n    );\r\n    if (index !== -1) {\r\n      this.field[\"_attrElements\"].splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private setAttribute(attr: string, value: string) {\r\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\r\n  }\r\n\r\n  private removeAttribute(attr: string) {\r\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\r\n  }\r\n}\r\n","import { Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXAttachmentFile\r\n} from \"../components/vxform.field.config\";\r\n\r\nexport abstract class FieldType<\r\n  F extends VXFormFieldConfig = VXFormFieldConfig\r\n> {\r\n  @Input() field: F;\r\n  defaultOptions?: F;\r\n\r\n  @Input()\r\n  get model() {\r\n    return this.field.model;\r\n  }\r\n  set model(m: any) {}\r\n\r\n  @Input()\r\n  get form() {\r\n    return <FormGroup>this.field.parent.formControl;\r\n  }\r\n  set form(form) {}\r\n\r\n  @Input()\r\n  get options() {\r\n    return this.field.options;\r\n  }\r\n  set options(options: F[\"options\"]) {}\r\n\r\n  get key() {\r\n    return this.field.key;\r\n  }\r\n\r\n  get formControl() {\r\n    return this.field.formControl;\r\n  }\r\n\r\n  get to() {\r\n    return this.field.templateOptions || {};\r\n  }\r\n\r\n  get showError(): boolean {\r\n    return this.options.showError(this);\r\n  }\r\n\r\n  get id(): string {\r\n    return this.field.id;\r\n  }\r\n\r\n  get formState() {\r\n    return this.options.formState || {};\r\n  }\r\n\r\n  get formStatus() {\r\n    return this.field.status || 0;\r\n  }\r\n\r\n  get editor() {\r\n    if (this.field.hasOwnProperty(\"editor\")) {\r\n      return this.field.editor;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get text() {\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      return this.model[this.field.key];\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  get placeHolder() {\r\n    if (\r\n      this.to != undefined &&\r\n      this.to != null &&\r\n      this.to.placeholder != undefined &&\r\n      this.to.placeholder != null\r\n    ) {\r\n      return this.to.placeholder;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  get textSingle() {\r\n    let result = \"\";\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      let value = this.model[this.field.key];\r\n      if (value != null && value != \"\") {\r\n        if (\r\n          this.field.templateOptions &&\r\n          this.field.templateOptions.options &&\r\n          this.field.templateOptions.options != null\r\n        ) {\r\n          this.field.templateOptions.options.forEach((item: any) => {\r\n            if (item.value == value) {\r\n              result = item.label;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get textMultiple() {\r\n    let result = [];\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      let values = this.model[this.field.key];\r\n      if (values != null && values instanceof Array) {\r\n        if (\r\n          this.field.templateOptions &&\r\n          this.field.templateOptions.options &&\r\n          this.field.templateOptions.options != null\r\n        ) {\r\n          values.forEach((element: any) => {\r\n            this.to.options.forEach((item: any) => {\r\n              if (item.value === element) {\r\n                result.push(item.label);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return result.join(\"ã\");\r\n  }\r\n\r\n  get textLookUp() {\r\n    let result = [];\r\n    if (this.model.hasOwnProperty(this.key)) {\r\n      if (this.model[this.key] != undefined && this.model[this.key] != null) {\r\n        result = this.model[this.key].map((item: any) => {\r\n          return item.label;\r\n        });\r\n      }\r\n    }\r\n    return result.join(\"ã\");\r\n  }\r\n\r\n  get tips() {\r\n    if (\r\n      this.to != undefined &&\r\n      this.to != null &&\r\n      this.to.tips != undefined &&\r\n      this.to.tips != null\r\n    ) {\r\n      return this.to.tips;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  get attachment() {\r\n    let result = [];\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      if (\r\n        this.model[this.field.key] != null &&\r\n        (this.model[this.field.key] as VXAttachmentFile)\r\n      ) {\r\n        result = this.model[this.field.key];\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get attachmentDisabled() {\r\n    let result = false;\r\n    if (this.to.hasOwnProperty(\"attachment\")) {\r\n      if (this.to.attachment.hasOwnProperty(\"limit\")) {\r\n        let limit = this.to.attachment.limit;\r\n        if (limit != null) {\r\n          let attachment: any = this.attachment;\r\n          if (attachment != null) {\r\n            result = this.attachment.length >= limit;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get active(){\r\n    let result = false;\r\n    if(this.field[\"active\"]!=undefined && this.field[\"active\"]!=null && this.field[\"active\"]==true){\r\n      result = true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get rownumber(){\r\n    let result =0;\r\n    if(this.field[\"active\"]!=undefined && this.field[\"active\"]!=null){\r\n      result = this.field.rownumber;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport abstract class Field extends FieldType {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { FormArray, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { VXFormFieldConfig } from \"../../core\";\r\nimport {\r\n  getKeyPath,\r\n  getFieldValue,\r\n  isNullOrUndefined,\r\n  defineHiddenProp,\r\n  wrapProperty\r\n} from \"../../utils\";\r\n\r\nexport function unregisterControl(field: VXFormFieldConfig) {\r\n  const form = field.formControl.parent as FormArray | FormGroup;\r\n  if (form instanceof FormArray) {\r\n    const key = form.controls.findIndex(c => c === field.formControl);\r\n    if (key !== -1) {\r\n      form.removeAt(key);\r\n      field.formControl.setParent(null);\r\n    }\r\n  } else if (form instanceof FormGroup) {\r\n    const paths = getKeyPath(field);\r\n    const key = paths[paths.length - 1];\r\n    if (form.get([key]) === field.formControl) {\r\n      form.removeControl(key);\r\n    }\r\n    field.formControl.setParent(null);\r\n  }\r\n}\r\n\r\nexport function registerControl(field: VXFormFieldConfig, control?: any) {\r\n  control = control || field.formControl;\r\n  if (!field.formControl && control) {\r\n    defineHiddenProp(field, \"formControl\", control);\r\n\r\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\r\n    wrapProperty(\r\n      field.templateOptions,\r\n      \"disabled\",\r\n      ({ firstChange, currentValue }) => {\r\n        if (!firstChange) {\r\n          currentValue\r\n            ? field.formControl.disable()\r\n            : field.formControl.enable();\r\n        }\r\n      }\r\n    );\r\n    if (control.registerOnDisabledChange) {\r\n      control.registerOnDisabledChange(\r\n        (value: boolean) => (field.templateOptions[\"___$disabled\"] = value)\r\n      );\r\n    }\r\n  }\r\n\r\n  let parent = field.parent.formControl as FormGroup;\r\n  if (!parent) {\r\n    return;\r\n  }\r\n\r\n  const paths = getKeyPath(field);\r\n  for (let i = 0; i < paths.length - 1; i++) {\r\n    const path = paths[i];\r\n    if (!parent.get([path])) {\r\n      registerControl({\r\n        key: path,\r\n        formControl: new FormGroup({}),\r\n        parent: { formControl: parent }\r\n      });\r\n    }\r\n\r\n    parent = <FormGroup>parent.get([path]);\r\n  }\r\n\r\n  const value = getFieldValue(field);\r\n  if (\r\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value)) &&\r\n    control.value !== value &&\r\n    control instanceof FormControl\r\n  ) {\r\n    control.patchValue(value);\r\n  }\r\n  const key = paths[paths.length - 1];\r\n  if (parent.get([key]) !== control) {\r\n    parent.setControl(key, control);\r\n  }\r\n}\r\n","import { Inject, Optional } from \"@angular/core\";\r\nimport { FormArray } from \"@angular/forms\";\r\nimport { FieldType } from \"./field.type\";\r\nimport {\r\n  clone,\r\n  isNullOrUndefined,\r\n  assignModelValue,\r\n  getKeyPath\r\n} from \"../utils\";\r\nimport { VXFormBuilder } from \"../services/vxform.builder\";\r\nimport { VXFormFieldConfig } from \"../components/vxform.field.config\";\r\nimport { VXFORM_CONFIG, VXFormExtension } from \"../services/vxform.config\";\r\nimport {\r\n  registerControl,\r\n  unregisterControl\r\n} from \"../extensions/field-form/utils\";\r\n\r\nexport abstract class FieldArrayType<\r\n  F extends VXFormFieldConfig = VXFormFieldConfig\r\n> extends FieldType<F> implements VXFormExtension {\r\n  formControl: FormArray;\r\n  defaultOptions: any = {\r\n    defaultValue: []\r\n  };\r\n\r\n  constructor(@Inject(VXFORM_CONFIG) @Optional() builder?: VXFormBuilder) {\r\n    super();\r\n\r\n    if (builder instanceof VXFormBuilder) {\r\n    }\r\n  }\r\n\r\n  onPopulate(field: VXFormFieldConfig) {\r\n    if (!field.formControl) {\r\n      registerControl(\r\n        field,\r\n        new FormArray([], { updateOn: field.modelOptions.updateOn })\r\n      );\r\n    }\r\n\r\n    field.fieldGroup = field.fieldGroup || [];\r\n\r\n    const length = field.model ? field.model.length : 0;\r\n    if (field.fieldGroup.length > length) {\r\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\r\n        unregisterControl(field.fieldGroup[i]);\r\n        field.fieldGroup.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    for (let i = field.fieldGroup.length; i < length; i++) {\r\n      const f = { ...clone(field.fieldArray), key: `${i}` };\r\n      field.fieldGroup.push(f);\r\n    }\r\n  }\r\n\r\n  add(i?: number, initialModel?: any) {\r\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\r\n    if (!this.model) {\r\n      assignModelValue(this.field.parent.model, getKeyPath(this.field), []);\r\n    }\r\n\r\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\r\n\r\n    (<any>this.options)._buildForm(true);\r\n    this.formControl.markAsDirty();\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.model.splice(i, 1);\r\n    unregisterControl(this.field.fieldGroup[i]);\r\n    this.field.fieldGroup.splice(i, 1);\r\n    this.field.fieldGroup.forEach((f, key) => (f.key = `${key}`));\r\n\r\n    (<any>this.options)._buildForm(true);\r\n    this.formControl.markAsDirty();\r\n  }\r\n}\r\n","import { ViewContainerRef, ViewChild } from \"@angular/core\";\r\nimport { FieldType } from \"./field.type\";\r\nimport { VXFormFieldConfig } from \"../components/vxform.field.config\";\r\n\r\nexport abstract class FieldWrapper<\r\n  F extends VXFormFieldConfig = VXFormFieldConfig\r\n> extends FieldType<F> {\r\n  @ViewChild(\"fieldComponent\", <any>{ read: ViewContainerRef, static: false })\r\n  fieldComponent: ViewContainerRef;\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"./field.type\";\r\n\r\n@Component({\r\n  selector: \"vxform-group\",\r\n  template: `\r\n    <vxform-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></vxform-field>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    \"[class]\": 'field.fieldGroupClassName || \"\"'\r\n  }\r\n})\r\nexport class VXFormGroup extends FieldType {\r\n  defaultOptions = {\r\n    defaultValue: {}\r\n  };\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { VXFormConfig } from \"../services/vxform.config\";\r\nimport { VXFormFieldConfig } from \"../components/vxform.field.config\";\r\nimport { isObject } from \"../utils\";\r\n\r\n@Component({\r\n  selector: \"vxform-validation-message\",\r\n  template: `\r\n    {{ errorMessage }}\r\n  `\r\n})\r\nexport class VXFormValidationMessage {\r\n  @Input() field: VXFormFieldConfig;\r\n\r\n  constructor(private vxFormConfig: VXFormConfig) {}\r\n\r\n  get errorMessage(): string {\r\n    const fieldForm = this.field.formControl;\r\n    for (let error in fieldForm.errors) {\r\n      if (fieldForm.errors.hasOwnProperty(error)) {\r\n        let message: string | Function = this.vxFormConfig.getValidatorMessage(\r\n          error\r\n        );\r\n\r\n        if (isObject(fieldForm.errors[error])) {\r\n          if (fieldForm.errors[error].errorPath) {\r\n            return;\r\n          }\r\n\r\n          if (fieldForm.errors[error].message) {\r\n            message = fieldForm.errors[error].message;\r\n          }\r\n        }\r\n\r\n        if (\r\n          this.field.validation &&\r\n          this.field.validation.messages &&\r\n          this.field.validation.messages[error]\r\n        ) {\r\n          message = this.field.validation.messages[error];\r\n        }\r\n\r\n        if (\r\n          this.field.validators &&\r\n          this.field.validators[error] &&\r\n          this.field.validators[error].message\r\n        ) {\r\n          message = this.field.validators[error].message;\r\n        }\r\n\r\n        if (\r\n          this.field.asyncValidators &&\r\n          this.field.asyncValidators[error] &&\r\n          this.field.asyncValidators[error].message\r\n        ) {\r\n          message = this.field.asyncValidators[error].message;\r\n        }\r\n\r\n        if (typeof message === \"function\") {\r\n          return message(fieldForm.errors[error], this.field);\r\n        }\r\n\r\n        return message;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"./field.type\";\r\n\r\n@Component({\r\n  selector: \"template\",\r\n  template: `\r\n    <div [innerHtml]=\"field.template\"></div>\r\n  `\r\n})\r\nexport class VXFormTemplateType extends FieldType {}\r\n","export function evalStringExpression(expression: string, argNames: string[]) {\r\n  try {\r\n    if (expression.indexOf(\"this.field\") !== -1) {\r\n    }\r\n\r\n    return Function(...argNames, `return ${expression};`) as any;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport function evalExpressionValueSetter(\r\n  expression: string,\r\n  argNames: string[]\r\n) {\r\n  try {\r\n    return Function(...argNames, `${expression} = expressionValue;`) as (\r\n      value: any\r\n    ) => void;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport function evalExpression(\r\n  expression: string | Function | boolean,\r\n  thisArg: any,\r\n  argVal: any[]\r\n): any {\r\n  if (expression instanceof Function) {\r\n    return expression.apply(thisArg, argVal);\r\n  } else {\r\n    return expression ? true : false;\r\n  }\r\n}\r\n","import {\r\n  VXFormFieldConfig,\r\n  VXFormValueChangeEvent,\r\n  VXFormFieldConfigCache\r\n} from \"../../components/vxform.field.config\";\r\nimport {\r\n  isObject,\r\n  isNullOrUndefined,\r\n  isFunction,\r\n  defineHiddenProp,\r\n  wrapProperty\r\n} from \"../../utils\";\r\nimport {\r\n  evalExpression,\r\n  evalStringExpression,\r\n  evalExpressionValueSetter\r\n} from \"./utils\";\r\nimport { Observable } from \"rxjs\";\r\nimport { VXFormExtension } from \"../../services/vxform.config\";\r\nimport { unregisterControl, registerControl } from \"../field-form/utils\";\r\n\r\nexport class FieldExpressionExtension implements VXFormExtension {\r\n  prePopulate(field: VXFormFieldConfigCache) {\r\n    if (field.parent || field.options._checkField) {\r\n      return;\r\n    }\r\n\r\n    field.options._checkField = (f, ignoreCache) =>\r\n      this._checkField(f, ignoreCache);\r\n  }\r\n\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    if (!field.parent || field._expressionProperties) {\r\n      return;\r\n    }\r\n\r\n    defineHiddenProp(field, \"_expressionProperties\", {});\r\n\r\n    if (field.expressionProperties) {\r\n      for (const key in field.expressionProperties) {\r\n        const expressionProperty = field.expressionProperties[key],\r\n          expressionValueSetter = evalExpressionValueSetter(`field.${key}`, [\r\n            \"expressionValue\",\r\n            \"model\",\r\n            \"field\"\r\n          ]);\r\n\r\n        if (\r\n          typeof expressionProperty === \"string\" ||\r\n          isFunction(expressionProperty)\r\n        ) {\r\n          field._expressionProperties[key] = {\r\n            expression: this._evalExpression(\r\n              expressionProperty,\r\n              field.parent.expressionProperties &&\r\n                field.parent.expressionProperties.hasOwnProperty(\r\n                  \"templateOptions.disabled\"\r\n                )\r\n                ? () => field.parent.templateOptions.disabled\r\n                : undefined\r\n            ),\r\n            expressionValueSetter\r\n          };\r\n          if (key === \"templateOptions.disabled\") {\r\n            Object.defineProperty(\r\n              field._expressionProperties[key],\r\n              \"expressionValue\",\r\n              {\r\n                get: () => field.templateOptions.disabled,\r\n                set: () => {},\r\n                enumerable: true,\r\n                configurable: true\r\n              }\r\n            );\r\n          }\r\n        } else if (expressionProperty instanceof Observable) {\r\n          const subscription = (expressionProperty as Observable<\r\n            any\r\n          >).subscribe(v =>\r\n            evalExpression(expressionValueSetter, { field }, [\r\n              v,\r\n              field.model,\r\n              field\r\n            ])\r\n          );\r\n\r\n          const onDestroy = field.hooks.onDestroy;\r\n          field.hooks.onDestroy = field => {\r\n            onDestroy && onDestroy(field);\r\n            subscription.unsubscribe();\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (field.hideExpression) {\r\n      delete field.hide;\r\n\r\n      let parent = field.parent;\r\n      while (parent && !parent.hideExpression) {\r\n        parent = parent.parent;\r\n      }\r\n\r\n      field.hideExpression = this._evalExpression(\r\n        field.hideExpression,\r\n        parent && parent.hideExpression ? () => parent.hide : undefined\r\n      );\r\n    } else {\r\n      wrapProperty(field, \"hide\", ({ currentValue, firstChange }) => {\r\n        if (!firstChange || (firstChange && currentValue === true)) {\r\n          field.options._hiddenFieldsForCheck.push(field);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  postPopulate(field: VXFormFieldConfigCache) {\r\n    if (field.parent) {\r\n      return;\r\n    }\r\n\r\n    field.options._checkField(field, true);\r\n  }\r\n\r\n  private _evalExpression(expression, parentExpression?) {\r\n    expression = expression || (() => false);\r\n    if (typeof expression === \"string\") {\r\n      expression = evalStringExpression(expression, [\r\n        \"model\",\r\n        \"formState\",\r\n        \"field\"\r\n      ]);\r\n    }\r\n\r\n    return parentExpression\r\n      ? (model: any, formState: any, field: VXFormFieldConfig) =>\r\n          parentExpression() || expression(model, formState, field)\r\n      : expression;\r\n  }\r\n\r\n  private _checkField(field: VXFormFieldConfigCache, ignoreCache = false) {\r\n    const options = field.options as {\r\n      _hiddenFieldsForCheck: VXFormFieldConfigCache[];\r\n    };\r\n\r\n    let markForCheck = false;\r\n    field.fieldGroup.forEach(f => {\r\n      this.checkFieldExpressionChange(f, ignoreCache) && (markForCheck = true);\r\n      if (this.checkFieldVisibilityChange(f, ignoreCache)) {\r\n        options._hiddenFieldsForCheck.push(f);\r\n        markForCheck = true;\r\n      }\r\n\r\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\r\n        this._checkField(f, ignoreCache);\r\n      }\r\n    });\r\n\r\n    if (markForCheck && field.options && field.options._markForCheck) {\r\n      field.options._markForCheck(field);\r\n    }\r\n\r\n    if (!field.parent) {\r\n      options._hiddenFieldsForCheck\r\n        .sort(f => (f.hide ? -1 : 1))\r\n        .forEach(f => this.toggleFormControl(f, f.hide));\r\n\r\n      options._hiddenFieldsForCheck = [];\r\n    }\r\n  }\r\n\r\n  private checkFieldExpressionChange(\r\n    field: VXFormFieldConfigCache,\r\n    ignoreCache\r\n  ): boolean {\r\n    if (!field || !field._expressionProperties) {\r\n      return false;\r\n    }\r\n\r\n    let markForCheck = false;\r\n    const expressionProperties = field._expressionProperties;\r\n\r\n    for (const key in expressionProperties) {\r\n      let expressionValue = evalExpression(\r\n        expressionProperties[key].expression,\r\n        { field },\r\n        [field.model, field.options.formState, field]\r\n      );\r\n      if (key === \"templateOptions.disabled\") {\r\n        expressionValue = !!expressionValue;\r\n      }\r\n\r\n      if (\r\n        ignoreCache ||\r\n        (expressionProperties[key].expressionValue !== expressionValue &&\r\n          (!isObject(expressionValue) ||\r\n            JSON.stringify(expressionValue) !==\r\n              JSON.stringify(expressionProperties[key].expressionValue)))\r\n      ) {\r\n        markForCheck = true;\r\n        expressionProperties[key].expressionValue = expressionValue;\r\n        evalExpression(\r\n          expressionProperties[key].expressionValueSetter,\r\n          { field },\r\n          [expressionValue, field.model, field]\r\n        );\r\n\r\n        if (key === \"templateOptions.disabled\" && field.key) {\r\n          this.setDisabledState(field, expressionValue);\r\n        }\r\n\r\n        if (key.indexOf(\"model.\") === 0) {\r\n          const path = key.replace(/^model\\./, \"\"),\r\n            control =\r\n              field.key && key === path\r\n                ? field.formControl\r\n                : field.parent.formControl.get(path);\r\n\r\n          if (\r\n            control &&\r\n            !(\r\n              isNullOrUndefined(control.value) &&\r\n              isNullOrUndefined(expressionValue)\r\n            ) &&\r\n            control.value !== expressionValue\r\n          ) {\r\n            control.patchValue(expressionValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return markForCheck;\r\n  }\r\n\r\n  private checkFieldVisibilityChange(\r\n    field: VXFormFieldConfigCache,\r\n    ignoreCache\r\n  ): boolean {\r\n    if (!field || isNullOrUndefined(field.hideExpression)) {\r\n      return false;\r\n    }\r\n\r\n    const hideExpressionResult: boolean = !!evalExpression(\r\n      field.hideExpression,\r\n      { field },\r\n      [field.model, field.options.formState, field]\r\n    );\r\n    let markForCheck = false;\r\n    if (hideExpressionResult !== field.hide || ignoreCache) {\r\n      markForCheck = true;\r\n      field.hide = hideExpressionResult;\r\n      field.templateOptions.hidden = hideExpressionResult;\r\n    }\r\n\r\n    return markForCheck;\r\n  }\r\n\r\n  private setDisabledState(field: VXFormFieldConfig, value: boolean) {\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup\r\n        .filter(\r\n          f =>\r\n            !f.expressionProperties ||\r\n            !f.expressionProperties.hasOwnProperty(\"templateOptions.disabled\")\r\n        )\r\n        .forEach(f => this.setDisabledState(f, value));\r\n    }\r\n\r\n    if (field.key && field.templateOptions.disabled !== value) {\r\n      field.templateOptions.disabled = value;\r\n    }\r\n  }\r\n\r\n  private toggleFormControl(field: VXFormFieldConfig, hide: boolean) {\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup\r\n        .filter(f => !f.hideExpression)\r\n        .forEach(f => this.toggleFormControl(f, hide));\r\n    }\r\n\r\n    if (field.formControl && field.key) {\r\n      hide === true ? unregisterControl(field) : registerControl(field);\r\n    }\r\n\r\n    if (field.options.fieldChanges) {\r\n      field.options.fieldChanges.next(<VXFormValueChangeEvent>{\r\n        field: field,\r\n        type: \"hidden\",\r\n        value: hide\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  VXFormExtension,\r\n  FieldValidatorFn,\r\n  VXFormConfig\r\n} from \"../../services/vxform.config\";\r\nimport { VXFormFieldConfigCache } from \"../../components/vxform.field.config\";\r\nimport { AbstractControl, Validators, ValidatorFn } from \"@angular/forms\";\r\nimport {\r\n  isObject,\r\n  VXFORM_VALIDATORS,\r\n  defineHiddenProp,\r\n  isUndefined,\r\n  isPromise,\r\n  wrapProperty\r\n} from \"../../utils\";\r\n\r\nexport class FieldValidationExtension implements VXFormExtension {\r\n  constructor(private vxFormConfig: VXFormConfig) {}\r\n\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    if (!field.parent || !field.key) {\r\n      return;\r\n    }\r\n\r\n    this.initFieldValidation(field, \"validators\");\r\n    this.initFieldValidation(field, \"asyncValidators\");\r\n  }\r\n\r\n  private initFieldValidation(\r\n    field: VXFormFieldConfigCache,\r\n    type: \"validators\" | \"asyncValidators\"\r\n  ) {\r\n    if (!isUndefined(field[\"_\" + type])) {\r\n      if (field.formControl) {\r\n        const validator =\r\n          type === \"validators\"\r\n            ? field.formControl.validator\r\n            : field.formControl.asyncValidator;\r\n        if (field[\"_\" + type] !== validator) {\r\n          field[\"_\" + type] = validator;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const validators: ValidatorFn[] =\r\n      type === \"validators\" ? [this.getPredefinedFieldValidation(field)] : [];\r\n    if (field[type]) {\r\n      for (const validatorName in field[type]) {\r\n        if (\r\n          validatorName === \"validation\" &&\r\n          !Array.isArray(field[type].validation)\r\n        ) {\r\n          field[type].validation = [field[type].validation];\r\n        }\r\n\r\n        validatorName === \"validation\"\r\n          ? validators.push(\r\n              ...field[type].validation.map(v =>\r\n                this.wrapNgValidatorFn(field, v)\r\n              )\r\n            )\r\n          : validators.push(\r\n              this.wrapNgValidatorFn(\r\n                field,\r\n                field[type][validatorName],\r\n                validatorName\r\n              )\r\n            );\r\n      }\r\n    }\r\n\r\n    defineHiddenProp(\r\n      field,\r\n      \"_\" + type,\r\n      type === \"validators\"\r\n        ? Validators.compose(validators)\r\n        : Validators.composeAsync(validators as any)\r\n    );\r\n  }\r\n\r\n  private getPredefinedFieldValidation(\r\n    field: VXFormFieldConfigCache\r\n  ): ValidatorFn {\r\n    let VALIDATORS = [];\r\n    VXFORM_VALIDATORS.forEach(opt =>\r\n      wrapProperty(\r\n        field.templateOptions,\r\n        opt,\r\n        ({ currentValue, firstChange }) => {\r\n          VALIDATORS = VALIDATORS.filter(o => o !== opt);\r\n          if (currentValue != null && currentValue !== false) {\r\n            VALIDATORS.push(opt);\r\n          }\r\n          if (!firstChange && field.formControl) {\r\n            field.formControl.updateValueAndValidity({ emitEvent: false });\r\n          }\r\n        }\r\n      )\r\n    );\r\n\r\n    return (control: AbstractControl) => {\r\n      if (VALIDATORS.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      return Validators.compose(\r\n        VALIDATORS.map(opt => () => {\r\n          const value = field.templateOptions[opt];\r\n          switch (opt) {\r\n            case \"required\":\r\n              return Validators.required(control);\r\n            case \"pattern\":\r\n              return Validators.pattern(value)(control);\r\n            case \"minLength\":\r\n              return Validators.minLength(value)(control);\r\n            case \"maxLength\":\r\n              return Validators.maxLength(value)(control);\r\n            case \"min\":\r\n              return Validators.min(value)(control);\r\n            case \"max\":\r\n              return Validators.max(value)(control);\r\n          }\r\n        })\r\n      )(control);\r\n    };\r\n  }\r\n\r\n  private wrapNgValidatorFn(\r\n    field: VXFormFieldConfigCache,\r\n    validator: string | FieldValidatorFn,\r\n    validatorName?: string\r\n  ) {\r\n    return (control: AbstractControl) => {\r\n      let validatorFn = validator as FieldValidatorFn;\r\n      if (typeof validator === \"string\") {\r\n        validatorFn = this.vxFormConfig.getValidator(validator).validation;\r\n      }\r\n      if (isObject(validator)) {\r\n        validatorFn = (validator as any).expression;\r\n      }\r\n\r\n      const isValid = validatorFn(control, field);\r\n      if (validatorName) {\r\n        if (isPromise(isValid)) {\r\n          return isValid.then((result: boolean) => {\r\n            if (field.options && field.options._markForCheck) {\r\n              field.options._markForCheck(field);\r\n            }\r\n\r\n            return this.handleResult(field, result, {\r\n              validatorName,\r\n              validator\r\n            });\r\n          });\r\n        }\r\n\r\n        return this.handleResult(field, isValid, { validatorName, validator });\r\n      }\r\n\r\n      return isValid;\r\n    };\r\n  }\r\n\r\n  private handleResult(\r\n    field: VXFormFieldConfigCache,\r\n    isValid,\r\n    { validatorName, validator }\r\n  ) {\r\n    if (isObject(validator) && field.formControl && validator.errorPath) {\r\n      const control = field.formControl.get(validator.errorPath);\r\n      if (control) {\r\n        const controlErrors = control.errors || {};\r\n        if (!isValid) {\r\n          control.setErrors({\r\n            ...controlErrors,\r\n            [validatorName]: { message: validator.message }\r\n          });\r\n        } else {\r\n          delete controlErrors[validatorName];\r\n          control.setErrors(\r\n            Object.keys(controlErrors).length === 0 ? null : controlErrors\r\n          );\r\n        }\r\n      }\r\n\r\n      return isValid\r\n        ? null\r\n        : { [validatorName]: { errorPath: validator.errorPath } };\r\n    }\r\n\r\n    return isValid ? null : { [validatorName]: true };\r\n  }\r\n}\r\n","import { VXFormExtension } from \"../../services/vxform.config\";\r\nimport { VXFormFieldConfigCache } from \"../../components/vxform.field.config\";\r\nimport {\r\n  AbstractControl,\r\n  FormGroup,\r\n  FormControl,\r\n  AbstractControlOptions\r\n} from \"@angular/forms\";\r\nimport { getKeyPath, getFieldValue, defineHiddenProp } from \"../../utils\";\r\nimport { registerControl } from \"./utils\";\r\n\r\nexport class FieldFormExtension implements VXFormExtension {\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    if (field.key) {\r\n      this.addFormControl(field);\r\n    }\r\n\r\n    if (field.parent && field.fieldGroup && !field.key) {\r\n      defineHiddenProp(field, \"formControl\", field.parent.formControl);\r\n    }\r\n  }\r\n\r\n  postPopulate(field: VXFormFieldConfigCache) {\r\n    if (field.parent) {\r\n      return;\r\n    }\r\n\r\n    const updateValidity = this.setValidators(field);\r\n    updateValidity &&\r\n      (field.formControl as any)._updateTreeValidity({ emitEvent: false });\r\n  }\r\n\r\n  private addFormControl(field: VXFormFieldConfigCache) {\r\n    const controlOptions: AbstractControlOptions = {\r\n      updateOn: field.modelOptions.updateOn\r\n    };\r\n    let control: AbstractControl;\r\n\r\n    const form = field.parent.formControl as FormGroup;\r\n    const value = getFieldValue(field);\r\n    const paths = getKeyPath(field);\r\n    if (\r\n      field.formControl instanceof AbstractControl ||\r\n      (form && form.get(paths))\r\n    ) {\r\n      control = field.formControl || form.get(paths);\r\n    } else if (\r\n      field._componentFactory &&\r\n      field._componentFactory.component &&\r\n      field._componentFactory.component.createControl\r\n    ) {\r\n      const component = field._componentFactory.component;\r\n\r\n      control = component.createControl(value, field);\r\n    } else if (field.fieldGroup) {\r\n      control = new FormGroup({}, controlOptions);\r\n    } else {\r\n      control = new FormControl(value, controlOptions);\r\n    }\r\n\r\n    registerControl(field, control);\r\n  }\r\n\r\n  private setValidators(field: VXFormFieldConfigCache) {\r\n    let updateValidity = false;\r\n    if (field.key) {\r\n      const {\r\n        _validators: validators,\r\n        _asyncValidators: asyncValidators,\r\n        formControl: control,\r\n        templateOptions: { disabled }\r\n      } = field;\r\n\r\n      if (disabled && control.enabled) {\r\n        control.disable({ emitEvent: false, onlySelf: true });\r\n        updateValidity = true;\r\n      }\r\n\r\n      if (validators !== control.validator) {\r\n        control.setValidators(validators);\r\n        updateValidity = true;\r\n      }\r\n      if (asyncValidators !== control.asyncValidator) {\r\n        control.setAsyncValidators(asyncValidators);\r\n        updateValidity = true;\r\n      }\r\n    }\r\n\r\n    (field.fieldGroup || []).forEach(\r\n      f => this.setValidators(f) && (updateValidity = true)\r\n    );\r\n\r\n    return updateValidity;\r\n  }\r\n}\r\n","export class Guid {\r\n    public static validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\r\n\r\n    public static EMPTY = '00000000-0000-0000-0000-000000000000';\r\n\r\n    public static isGuid(guid: any) {\r\n        const value: string = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    }\r\n\r\n    public static create(): Guid {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join('-'));\r\n    }\r\n\r\n    public static createEmpty(): Guid {\r\n        return new Guid('emptyguid');\r\n    }\r\n\r\n    public static parse(guid: string): Guid {\r\n        return new Guid(guid);\r\n    }\r\n\r\n    public static raw(): string {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join('-');\r\n    }\r\n\r\n    private static gen(count: number) {\r\n        let out: string = '';\r\n        for (let i: number = 0; i < count; i++) {\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    private value: string;\r\n\r\n    private constructor(guid: string) {\r\n        if (!guid) {\r\n        }\r\n\r\n        this.value = Guid.EMPTY;\r\n\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n\r\n    public equals(other: Guid): boolean {\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.value === Guid.EMPTY;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.value;\r\n    }\r\n\r\n    public toJSON(): any {\r\n        return {\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\n","import {\r\n  VXFormExtension,\r\n  VXFormConfig,\r\n  TemplateManipulators\r\n} from \"../../services/vxform.config\";\r\nimport {\r\n  VXFormFieldConfigCache,\r\n  VXFormFieldConfig\r\n} from \"../../components/vxform.field.config\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  getFieldId,\r\n  assignModelValue,\r\n  isUndefined,\r\n  getFieldValue,\r\n  reverseDeepMerge,\r\n  getKeyPath\r\n} from \"../../utils\";\r\nimport { Guid } from \"../../guid\";\r\n\r\nexport class CoreExtension implements VXFormExtension {\r\n  private formId = 0;\r\n  constructor(private vxFormConfig: VXFormConfig) {}\r\n\r\n  prePopulate(field: VXFormFieldConfigCache) {\r\n    this.getFieldComponentInstance(field).prePopulate();\r\n    if (field.parent) {\r\n      return;\r\n    }\r\n\r\n    const fieldTransforms =\r\n      (field.options && field.options.fieldTransform) ||\r\n      this.vxFormConfig.extras.fieldTransform;\r\n    (Array.isArray(fieldTransforms)\r\n      ? fieldTransforms\r\n      : [fieldTransforms]\r\n    ).forEach(fieldTransform => {\r\n      if (fieldTransform) {\r\n        const fieldGroup = fieldTransform(\r\n          field.fieldGroup,\r\n          field.model,\r\n          <FormGroup>field.formControl,\r\n          field.options\r\n        );\r\n        if (!fieldGroup) {\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    this.initFieldOptions(field);\r\n    this.getFieldComponentInstance(field).onPopulate();\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup.forEach((f, index) => {\r\n        Object.defineProperty(f, \"parent\", {\r\n          get: () => field,\r\n          configurable: true\r\n        });\r\n        Object.defineProperty(f, \"index\", {\r\n          get: () => index,\r\n          configurable: true\r\n        });\r\n        this.formId++;\r\n      });\r\n    }\r\n  }\r\n\r\n  postPopulate(field: VXFormFieldConfigCache) {\r\n    this.getFieldComponentInstance(field).postPopulate();\r\n  }\r\n\r\n  private initFieldOptions(field: VXFormFieldConfigCache) {\r\n    const root = <VXFormFieldConfigCache>field.parent;\r\n    if (!root) {\r\n      return;\r\n    }\r\n\r\n    Object.defineProperty(field, \"form\", {\r\n      get: () => root.formControl,\r\n      configurable: true\r\n    });\r\n    Object.defineProperty(field, \"options\", {\r\n      get: () => root.options,\r\n      configurable: true\r\n    });\r\n    Object.defineProperty(field, \"model\", {\r\n      get: () =>\r\n        field.key && field.fieldGroup ? getFieldValue(field) : root.model,\r\n      configurable: true\r\n    });\r\n\r\n    reverseDeepMerge(field, {\r\n      id: getFieldId(`vxform_${this.formId}`, field, field[\"index\"]),\r\n      guid: Guid.create()[\"value\"],\r\n      hooks: {},\r\n      modelOptions: {},\r\n      templateOptions:\r\n        !field.type || !field.key\r\n          ? {}\r\n          : {\r\n              label: \"\",\r\n              placeholder: \"\",\r\n              focus: false,\r\n              disabled: false\r\n            }\r\n    });\r\n\r\n    if (field.lifecycle) {\r\n    }\r\n\r\n    if (field.template && field.type !== \"template\") {\r\n      if (field.type) {\r\n      }\r\n      field.type = \"template\";\r\n    }\r\n\r\n    if (!field.type && field.fieldGroup) {\r\n      field.type = \"vxform-group\";\r\n    }\r\n\r\n    if (field.type) {\r\n      this.vxFormConfig.getMergedField(field);\r\n    }\r\n\r\n    if (!isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\r\n      assignModelValue(root.model, getKeyPath(field), field.defaultValue);\r\n    }\r\n\r\n    this.initFieldWrappers(field);\r\n  }\r\n\r\n  private initFieldWrappers(field: VXFormFieldConfig) {\r\n    field.wrappers = field.wrappers || [];\r\n    const fieldTemplateManipulators: TemplateManipulators = {\r\n      preWrapper: [],\r\n      postWrapper: [],\r\n      ...(field.templateOptions.templateManipulators || {})\r\n    };\r\n\r\n    field.wrappers = [\r\n      ...this.vxFormConfig.templateManipulators.preWrapper.map(m => m(field)),\r\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\r\n      ...field.wrappers,\r\n      ...this.vxFormConfig.templateManipulators.postWrapper.map(m => m(field)),\r\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field))\r\n    ].filter((el, i, a) => el && i === a.indexOf(el));\r\n  }\r\n\r\n  private getFieldComponentInstance(field: VXFormFieldConfigCache) {\r\n    const componentRef = this.vxFormConfig.createComponent(field);\r\n    const instance: VXFormExtension = componentRef\r\n      ? (componentRef.instance as any)\r\n      : {};\r\n\r\n    return {\r\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\r\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\r\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field)\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormFieldProperty\r\n} from \"../components/vxform.field.config\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class VXFormCommonService {\r\n  constructor() { }\r\n\r\n  initFormFieldProperty(fields: VXFormFieldConfig[]) {\r\n    fields.forEach(field => {\r\n      this.deleteFieldProperty(field);\r\n    });\r\n  }\r\n\r\n  //åå§åè¡¨åJSONå¯¹è±¡\r\n  initFormFieldConfig(\r\n    fields: VXFormFieldConfig[],\r\n    fieldPropertys: VXFormFieldProperty[]\r\n  ) {\r\n    fields.forEach(field => {\r\n      this.setFieldProperty(field, fieldPropertys);\r\n    });\r\n  }\r\n\r\n  initFormFieldModel(fields: VXFormFieldConfig[], model: any) {\r\n    fields.forEach(field => {\r\n      if (field.hasOwnProperty(\"editor\")) {\r\n        field.typeold = field.type;\r\n        field.type = \"text\";\r\n        if (this.checkFieldDefaultValue(field)) {\r\n          model[field.key] = field.defaultValue;\r\n        }\r\n      }\r\n      if (field.hasOwnProperty(\"fieldArray\")) {\r\n        if (field.fieldArray.hasOwnProperty(\"fieldGroup\")) {\r\n          model[field.key] = [{}];\r\n          field.fieldArray.fieldGroup.forEach(fieldGroup => {\r\n            if (fieldGroup.hasOwnProperty(\"editor\")) {\r\n              fieldGroup.typeold = field.type;\r\n              fieldGroup.type = \"text\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (field.hasOwnProperty(\"fieldGroup\")) {\r\n        //åå§åå¼\r\n        if (!this.checkFieldDefaultValue(field)) {\r\n          model[field.key] = {};\r\n        }\r\n\r\n        field.fieldGroup.forEach(fieldGroup => {\r\n          if (fieldGroup.hasOwnProperty(\"editor\")) {\r\n            fieldGroup.typeold = fieldGroup.type;\r\n            fieldGroup.type = \"text\";\r\n            if (this.checkFieldDefaultValue(model[field.key][fieldGroup.key])) {\r\n              model[field.key][fieldGroup.key] = fieldGroup.defaultValue;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //åå§åè¡¨ååºå·\r\n  initSurveyFormFieldConfig(surveyInfo: any) { \r\n    surveyInfo.queTotal = 0;\r\n    if (surveyInfo.pages) { \r\n      surveyInfo.pages.forEach((page: any) => { \r\n        this.setFieldNumber(surveyInfo,page.questions);\r\n      });  \r\n    }\r\n  }\r\n\r\n  private checkFieldDefaultValue(field: VXFormFieldConfig) {\r\n    let result = false;\r\n    if (\r\n      field != undefined &&\r\n      field != null &&\r\n      field.defaultValue != undefined &&\r\n      field.defaultValue != null\r\n    ) {\r\n      return true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private deleteFieldProperty(field: any) {\r\n    if (field.hasOwnProperty(\"status\")) {\r\n      delete field.status;\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"guid\")) {\r\n      delete field.guid;\r\n    }\r\n    if (field.hasOwnProperty(\"id\")) {\r\n      delete field.id;\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"wrappers\")) {\r\n      delete field[\"wrappers\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"_keyPath\")) {\r\n      delete field[\"_keyPath\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"modelOptions\")) {\r\n      delete field[\"modelOptions\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"checked\")) {\r\n      delete field[\"checked\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"rownumber\")) {\r\n      delete field[\"rownumber\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"templateOptions\")) {\r\n      if (field.templateOptions.hasOwnProperty(\"focus\")) {\r\n        delete field.templateOptions.focus;\r\n      }\r\n      if (field.templateOptions.hasOwnProperty(\"disabled\")) {\r\n        delete field.templateOptions.disabled;\r\n      }\r\n      if (field.templateOptions.hasOwnProperty(\"readonly\")) {\r\n        delete field.templateOptions.readonly;\r\n      }\r\n    }\r\n\r\n    if (field.fieldArray) {\r\n      if (field.fieldArray.fieldGroup) {\r\n        if (field.fieldGroup) {\r\n          delete field.fieldGroup;\r\n        }\r\n        this.initFormFieldProperty(field.fieldArray.fieldGroup);\r\n      }\r\n    }\r\n    if (field.fieldGroup) {\r\n      this.initFormFieldProperty(field.fieldGroup);\r\n    }\r\n  }\r\n\r\n  private setFieldProperty(\r\n    field: VXFormFieldConfig,\r\n    fieldPropertys: VXFormFieldProperty[]\r\n  ) {\r\n    let items: VXFormFieldProperty[] = fieldPropertys.filter(item => {\r\n      return item.key === field.key;\r\n    });\r\n    if (items != undefined && items != null && items.length > 0) {\r\n      let item: VXFormFieldProperty = items[0];\r\n\r\n      if (item.hasOwnProperty(\"show\")) {\r\n        field.show = item.show;\r\n      }\r\n      if (item.hasOwnProperty(\"editor\")) {\r\n        field.editor = item.editor;\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"label\")) {\r\n        if (item.label != null) {\r\n          field.templateOptions.label = item.label;\r\n        }\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"placeholder\")) {\r\n        if (item.placeholder != null) {\r\n          field.templateOptions.placeholder = item.placeholder;\r\n        }\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"options\")) {\r\n        if (item.options != null) {\r\n          field.templateOptions.options = item.options;\r\n        }\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"tips\")) {\r\n        if (item.tips != null && item.tips != \"\") {\r\n          field.templateOptions.tips = item.tips;\r\n        }\r\n      }\r\n    }\r\n    if (field.fieldArray) {\r\n      if (field.fieldArray.fieldGroup) {\r\n        this.initFormFieldConfig(field.fieldArray.fieldGroup, fieldPropertys);\r\n      }\r\n    }\r\n    if (field.fieldGroup) {\r\n      this.initFormFieldConfig(field.fieldGroup, fieldPropertys);\r\n    }\r\n  }\r\n\r\n  private setFieldNumber(surveyInfo:any,fields: VXFormFieldConfig[]) {\r\n    fields.forEach((field: VXFormFieldConfig) => {\r\n      if (field.type != \"line\" && field.type != \"remark\") {\r\n        surveyInfo.queTotal = surveyInfo.queTotal+1\r\n        field.templateOptions.queno = \"Q\" + surveyInfo.queTotal;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  ANALYZE_FOR_ENTRY_COMPONENTS,\r\n  Inject,\r\n  Optional\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\nimport {\r\n  HttpClient,\r\n  HTTP_INTERCEPTORS,\r\n  HttpClientModule\r\n} from \"@angular/common/http\";\r\nimport { VXForm } from \"./components/vxform\";\r\nimport { VXFormField } from \"./components/vxform.field\";\r\nimport { VXFormAttributes } from \"./components/vxform.attributes\";\r\nimport {\r\n  VXFormConfig,\r\n  ConfigOption,\r\n  VXFORM_CONFIG,\r\n  APPConfig\r\n} from \"./services/vxform.config\";\r\nimport { VXFormBuilder } from \"./services/vxform.builder\";\r\nimport { VXFormGroup } from \"./templates/vxform.group\";\r\nimport { VXFormValidationMessage } from \"./templates/vxform.validation-message\";\r\nimport { VXFormTemplateType } from \"./templates/field-template.type\";\r\n\r\nimport { FieldExpressionExtension } from \"./extensions/field-expression/field-expression\";\r\nimport { FieldValidationExtension } from \"./extensions/field-validation/field-validation\";\r\nimport { FieldFormExtension } from \"./extensions/field-form/field-form\";\r\nimport { CoreExtension } from \"./extensions/core/core\";\r\nimport { VXFormCommonService } from \"./tools/common\";\r\n\r\nexport function defaultVXFormConfig(vxFormConfig: VXFormConfig): ConfigOption {\r\n  return {\r\n    types: [\r\n      { name: \"vxform-group\", component: VXFormGroup },\r\n      { name: \"template\", component: VXFormTemplateType }\r\n    ],\r\n    extensions: [\r\n      { name: \"core\", extension: new CoreExtension(vxFormConfig) },\r\n      {\r\n        name: \"field-validation\",\r\n        extension: new FieldValidationExtension(vxFormConfig)\r\n      },\r\n      { name: \"field-form\", extension: new FieldFormExtension() },\r\n      { name: \"field-expression\", extension: new FieldExpressionExtension() }\r\n    ]\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VXForm,\r\n    VXFormField,\r\n    VXFormAttributes,\r\n    VXFormGroup,\r\n    VXFormValidationMessage,\r\n    VXFormTemplateType\r\n  ],\r\n  entryComponents: [VXFormGroup, VXFormTemplateType],\r\n  exports: [\r\n    VXForm,\r\n    VXFormField,\r\n    VXFormAttributes,\r\n    VXFormGroup,\r\n    VXFormValidationMessage\r\n  ],\r\n  imports: [HttpModule, HttpClientModule, CommonModule],\r\n  providers: [VXFormCommonService]\r\n})\r\nexport class VXFormModule {\r\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<VXFormModule> {\r\n    return {\r\n      ngModule: VXFormModule,\r\n      providers: [\r\n        {\r\n          provide: VXFORM_CONFIG,\r\n          multi: true,\r\n          useFactory: defaultVXFormConfig,\r\n          deps: [VXFormConfig]\r\n        },\r\n        { provide: VXFORM_CONFIG, useValue: config, multi: true },\r\n        {\r\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\r\n          useValue: config,\r\n          multi: true\r\n        },\r\n        VXFormConfig,\r\n        VXFormBuilder\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forChild(\r\n    config: ConfigOption = {}\r\n  ): ModuleWithProviders<VXFormModule> {\r\n    return {\r\n      ngModule: VXFormModule,\r\n      providers: [\r\n        { provide: VXFORM_CONFIG, useValue: config, multi: true },\r\n        {\r\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\r\n          useValue: config,\r\n          multi: true\r\n        },\r\n        VXFormBuilder\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forConfig(config:string): ModuleWithProviders<VXFormModule>{\r\n    if(localStorage.getItem(\"VX_FORM_LINCES\")!=null && localStorage.getItem(\"VX_FORM_LINCES\")!=\"\"){\r\n      localStorage.removeItem(\"VX_FORM_LINCES\");\r\n    }\r\n    localStorage.setItem(\"VX_FORM_LINCES\",config);\r\n    return {\r\n       ngModule: VXFormModule,\r\n       providers: [VXFormBuilder]\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    configService: VXFormConfig,\r\n    @Optional() @Inject(VXFORM_CONFIG) configs: ConfigOption[] = []\r\n  ) {\r\n    if (!configs) {\r\n      return;\r\n    }\r\n\r\n    configs.forEach(config => configService.addConfig(config));\r\n  }\r\n}\r\n"],"names":["tslib_1.__values","isObservable","AbstractControl","InjectionToken","Injectable","Subject","ComponentFactoryResolver","Injector","EventEmitter","debounceTime","FormGroup","tslib_1.__spread","Component","Attribute","FormGroupDirective","Optional","Input","Output","ViewChild","ViewContainerRef","Directive","Renderer2","ElementRef","Inject","DOCUMENT","tslib_1.__extends","FormArray","FormControl","Observable","Validators","ANALYZE_FOR_ENTRY_COMPONENTS","NgModule","HttpModule","HttpClientModule","CommonModule"],"mappings":"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"}
