{"version":3,"file":"vx-form-core.js.map","sources":["ng://@vx-form/core/lib/utils.ts","ng://@vx-form/core/lib/services/vxform.config.ts","ng://@vx-form/core/lib/services/vxform.builder.ts","ng://@vx-form/core/lib/tools/test.ts","ng://@vx-form/core/lib/components/vxform.ts","ng://@vx-form/core/lib/components/vxform.field.ts","ng://@vx-form/core/lib/components/vxform.attributes.ts","ng://@vx-form/core/lib/templates/field.type.ts","ng://@vx-form/core/lib/extensions/field-form/utils.ts","ng://@vx-form/core/lib/templates/field-array.type.ts","ng://@vx-form/core/lib/templates/field.wrapper.ts","ng://@vx-form/core/lib/templates/vxform.group.ts","ng://@vx-form/core/lib/templates/vxform.validation-message.ts","ng://@vx-form/core/lib/templates/field-template.type.ts","ng://@vx-form/core/lib/extensions/field-expression/utils.ts","ng://@vx-form/core/lib/extensions/field-expression/field-expression.ts","ng://@vx-form/core/lib/extensions/field-validation/field-validation.ts","ng://@vx-form/core/lib/extensions/field-form/field-form.ts","ng://@vx-form/core/lib/guid.ts","ng://@vx-form/core/lib/extensions/core/core.ts","ng://@vx-form/core/lib/tools/common.ts","ng://@vx-form/core/lib/core.module.ts"],"sourcesContent":["import { VXFormFieldConfig } from \"./core\";\r\nimport { isObservable } from \"rxjs\";\r\nimport { AbstractControl } from \"@angular/forms\";\r\nimport { VXFormFieldConfigCache } from \"./components/vxform.field.config\";\r\n\r\nexport function getFieldId(\r\n  formId: string,\r\n  field: VXFormFieldConfig,\r\n  index: string | number\r\n) {\r\n  if (field.id) return field.id;\r\n  let type = field.type;\r\n  if (!type && field.template) type = \"template\";\r\n  return [formId, type, field.key, index].join(\"_\");\r\n}\r\n\r\nexport function getKeyPath(field: VXFormFieldConfigCache): string[] {\r\n  if (!field.key) {\r\n    return [];\r\n  }\r\n\r\n  if (!field._keyPath || field._keyPath.key !== field.key) {\r\n    const key =\r\n      field.key.indexOf(\"[\") === -1\r\n        ? field.key\r\n        : field.key.replace(/\\[(\\w+)\\]/g, \".$1\");\r\n\r\n    field._keyPath = {\r\n      key: field.key,\r\n      path: key.indexOf(\".\") !== -1 ? key.split(\".\") : [key]\r\n    };\r\n  }\r\n\r\n  return field._keyPath.path.slice(0);\r\n}\r\n\r\nexport const VXFORM_VALIDATORS = [\r\n  \"required\",\r\n  \"pattern\",\r\n  \"minLength\",\r\n  \"maxLength\",\r\n  \"min\",\r\n  \"max\"\r\n];\r\n\r\nexport function assignModelValue(model: any, paths: string[], value: any) {\r\n  for (let i = 0; i < paths.length - 1; i++) {\r\n    const path = paths[i];\r\n    if (!model[path] || !isObject(model[path])) {\r\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\r\n    }\r\n\r\n    model = model[path];\r\n  }\r\n\r\n  model[paths[paths.length - 1]] = clone(value);\r\n}\r\n\r\nexport function getFieldValue(field: VXFormFieldConfig): any {\r\n  let model = field.parent.model;\r\n  for (const path of getKeyPath(field)) {\r\n    if (!model) {\r\n      return model;\r\n    }\r\n    model = model[path];\r\n  }\r\n\r\n  return model;\r\n}\r\n\r\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\r\n  args.forEach(src => {\r\n    for (let srcArg in src) {\r\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\r\n        dest[srcArg] = clone(src[srcArg]);\r\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\r\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\r\n      }\r\n    }\r\n  });\r\n  return dest;\r\n}\r\n\r\nexport function isNullOrUndefined(value: any) {\r\n  return value === undefined || value === null;\r\n}\r\n\r\nexport function isUndefined(value: any) {\r\n  return value === undefined;\r\n}\r\n\r\nexport function isBlankString(value: any) {\r\n  return value === \"\";\r\n}\r\n\r\nexport function isFunction(value: any) {\r\n  return typeof value === \"function\";\r\n}\r\n\r\nexport function objAndSameType(obj1: any, obj2: any) {\r\n  return (\r\n    isObject(obj1) &&\r\n    isObject(obj2) &&\r\n    Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2) &&\r\n    !(Array.isArray(obj1) || Array.isArray(obj2))\r\n  );\r\n}\r\n\r\nexport function isObject(x: any) {\r\n  return x != null && typeof x === \"object\";\r\n}\r\n\r\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === \"function\";\r\n}\r\n\r\nexport function clone(value: any): any {\r\n  if (\r\n    !isObject(value) ||\r\n    isObservable(value) ||\r\n    value.changingThisBreaksApplicationSecurity ||\r\n    [\"RegExp\", \"FileList\", \"File\", \"Blob\"].indexOf(value.constructor.name) !==\r\n      -1\r\n  ) {\r\n    return value;\r\n  }\r\n\r\n  if (value._isAMomentObject && isFunction(value.clone)) {\r\n    return value.clone();\r\n  }\r\n\r\n  if (value instanceof AbstractControl) {\r\n    return null;\r\n  }\r\n\r\n  if (value instanceof Date) {\r\n    return new Date(value.getTime());\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return value.slice(0).map(v => clone(v));\r\n  }\r\n\r\n  const proto = Object.getPrototypeOf(value);\r\n  let c = Object.create(proto);\r\n  c = Object.setPrototypeOf(c, proto);\r\n  return Object.keys(value).reduce((newVal, prop) => {\r\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\r\n    if (propDesc.get) {\r\n      Object.defineProperty(newVal, prop, propDesc);\r\n    } else {\r\n      newVal[prop] = clone(value[prop]);\r\n    }\r\n\r\n    return newVal;\r\n  }, c);\r\n}\r\n\r\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\r\n  Object.defineProperty(field, prop, {\r\n    enumerable: false,\r\n    writable: true,\r\n    configurable: true\r\n  });\r\n  field[prop] = defaultValue;\r\n}\r\n\r\nexport function wrapProperty<T = any>(\r\n  field: any,\r\n  prop: string,\r\n  setFn: (change: {\r\n    currentValue: T;\r\n    previousValue?: T;\r\n    firstChange: boolean;\r\n  }) => void\r\n) {\r\n  defineHiddenProp(field, `___$${prop}`, field[prop]);\r\n  setFn({ currentValue: field[prop], firstChange: true });\r\n\r\n  Object.defineProperty(field, prop, {\r\n    configurable: true,\r\n    get: () => field[`___$${prop}`],\r\n    set: currentValue => {\r\n      if (currentValue !== field[`___$${prop}`]) {\r\n        const previousValue = field[`___$${prop}`];\r\n        field[`___$${prop}`] = currentValue;\r\n        setFn({ previousValue, currentValue, firstChange: false });\r\n      }\r\n    }\r\n  });\r\n}\r\n","import {\r\n  Injectable,\r\n  InjectionToken,\r\n  ComponentRef,\r\n  ComponentFactoryResolver,\r\n  Injector\r\n} from \"@angular/core\";\r\nimport { ValidationErrors, AbstractControl } from \"@angular/forms\";\r\nimport { FieldType } from \"./../templates/field.type\";\r\nimport { reverseDeepMerge, defineHiddenProp } from \"./../utils\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormFieldConfigCache\r\n} from \"../components/vxform.field.config\";\r\n\r\nexport const VXFORM_CONFIG = new InjectionToken<VXFormConfig>(\"VXFORM_CONFIG\");\r\n\r\nexport interface VXFormExtension {\r\n  prePopulate?(field: VXFormFieldConfig): void;\r\n  onPopulate?(field: VXFormFieldConfig): void;\r\n  postPopulate?(field: VXFormFieldConfig): void;\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class VXFormConfig {\r\n  types: { [name: string]: TypeOption } = {};\r\n  validators: { [name: string]: ValidatorOption } = {};\r\n  wrappers: { [name: string]: WrapperOption } = {};\r\n  messages: {\r\n    [name: string]: string | ((error: any, field: VXFormFieldConfig) => string);\r\n  } = {};\r\n  templateManipulators: {\r\n    preWrapper: ManipulatorWrapper[];\r\n    postWrapper: ManipulatorWrapper[];\r\n  } = {\r\n    preWrapper: [],\r\n    postWrapper: []\r\n  };\r\n  extras: ConfigOption[\"extras\"] = {\r\n    checkExpressionOn: \"changeDetectionCheck\",\r\n    showError: function(field: FieldType) {\r\n      return (\r\n        field.formControl &&\r\n        field.formControl.invalid &&\r\n        (field.formControl.touched ||\r\n          (field.options.parentForm && field.options.parentForm.submitted) ||\r\n          (field.field.validation && field.field.validation.show))\r\n      );\r\n    }\r\n  };\r\n  extensions: { [name: string]: VXFormExtension } = {};\r\n\r\n  appConfig: {\r\n    url?: string;\r\n    token?: string;\r\n  };\r\n\r\n  addConfig(config: ConfigOption) {\r\n    if (config.types) {\r\n      config.types.forEach(type => this.setType(type));\r\n    }\r\n    if (config.validators) {\r\n      config.validators.forEach(validator => this.setValidator(validator));\r\n    }\r\n    if (config.wrappers) {\r\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\r\n    }\r\n    if (config.manipulators) {\r\n      config.manipulators.forEach(manipulator =>\r\n        this.setManipulator(manipulator)\r\n      );\r\n    }\r\n    if (config.validationMessages) {\r\n      config.validationMessages.forEach(validation =>\r\n        this.addValidatorMessage(validation.name, validation.message)\r\n      );\r\n    }\r\n    if (config.extensions) {\r\n      config.extensions.forEach(c => (this.extensions[c.name] = c.extension));\r\n    }\r\n    if (config.extras) {\r\n      this.extras = { ...this.extras, ...config.extras };\r\n    }\r\n  }\r\n\r\n  setType(options: TypeOption | TypeOption[]) {\r\n    if (Array.isArray(options)) {\r\n      options.forEach(option => this.setType(option));\r\n    } else {\r\n      if (!this.types[options.name]) {\r\n        this.types[options.name] = <TypeOption>{ name: options.name };\r\n      }\r\n\r\n      [\"component\", \"extends\", \"defaultOptions\"].forEach(prop => {\r\n        if (options.hasOwnProperty(prop)) {\r\n          this.types[options.name][prop] = options[prop];\r\n        }\r\n      });\r\n\r\n      if (options.wrappers) {\r\n        options.wrappers.forEach(wrapper =>\r\n          this.setTypeWrapper(options.name, wrapper)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getType(name: string): TypeOption {\r\n    if (!this.types[name]) {\r\n    }\r\n\r\n    this.mergeExtendedType(name);\r\n\r\n    return this.types[name];\r\n  }\r\n\r\n  getMergedField(field: VXFormFieldConfig = {}): any {\r\n    const type = this.getType(field.type);\r\n    if (type.defaultOptions) {\r\n      reverseDeepMerge(field, type.defaultOptions);\r\n    }\r\n\r\n    const extendDefaults =\r\n      type.extends && this.getType(type.extends).defaultOptions;\r\n    if (extendDefaults) {\r\n      reverseDeepMerge(field, extendDefaults);\r\n    }\r\n\r\n    if (field && field.optionsTypes) {\r\n      field.optionsTypes.forEach(option => {\r\n        const defaultOptions = this.getType(option).defaultOptions;\r\n        if (defaultOptions) {\r\n          reverseDeepMerge(field, defaultOptions);\r\n        }\r\n      });\r\n    }\r\n\r\n    const componentRef = this.createComponent(field);\r\n    if (\r\n      componentRef &&\r\n      componentRef.instance &&\r\n      componentRef.instance.defaultOptions\r\n    ) {\r\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\r\n    }\r\n\r\n    if (!field.wrappers && type.wrappers) {\r\n      field.wrappers = [...type.wrappers];\r\n    }\r\n  }\r\n\r\n  createComponent(\r\n    field: VXFormFieldConfigCache = {},\r\n    resolver?: ComponentFactoryResolver,\r\n    injector?: Injector\r\n  ): ComponentRef<FieldType> {\r\n    if (!field.type) {\r\n      return;\r\n    }\r\n\r\n    const cf = field._componentFactory;\r\n    if (\r\n      cf &&\r\n      field.type === cf.type &&\r\n      cf.componentRef &&\r\n      cf.componentRef.hostView &&\r\n      !cf.componentRef.hostView.destroyed\r\n    ) {\r\n      return field._componentFactory.componentRef;\r\n    }\r\n\r\n    const type = this.getType(field.type);\r\n    if (!resolver) {\r\n      resolver = field.parent.options._componentFactoryResolver;\r\n    }\r\n    if (!injector) {\r\n      injector = this.getFieldInjector(field);\r\n    }\r\n\r\n    defineHiddenProp(field, \"_componentFactory\", {\r\n      type: field.type,\r\n      component: type.component,\r\n      componentRef: resolver\r\n        ? resolver.resolveComponentFactory(type.component).create(injector)\r\n        : null\r\n    });\r\n\r\n    return field._componentFactory.componentRef;\r\n  }\r\n\r\n  setWrapper(options: WrapperOption) {\r\n    this.wrappers[options.name] = options;\r\n    if (options.types) {\r\n      options.types.forEach(type => {\r\n        this.setTypeWrapper(type, options.name);\r\n      });\r\n    }\r\n  }\r\n\r\n  getWrapper(name: string): WrapperOption {\r\n    if (!this.wrappers[name]) {\r\n    }\r\n\r\n    return this.wrappers[name];\r\n  }\r\n\r\n  setTypeWrapper(type: string, name: string) {\r\n    if (!this.types[type]) {\r\n      this.types[type] = <TypeOption>{};\r\n    }\r\n    if (!this.types[type].wrappers) {\r\n      this.types[type].wrappers = [];\r\n    }\r\n    if (this.types[type].wrappers.indexOf(name) === -1) {\r\n      this.types[type].wrappers.push(name);\r\n    }\r\n  }\r\n\r\n  setValidator(options: ValidatorOption) {\r\n    this.validators[options.name] = options;\r\n  }\r\n\r\n  getValidator(name: string): ValidatorOption {\r\n    if (!this.validators[name]) {\r\n    }\r\n\r\n    return this.validators[name];\r\n  }\r\n\r\n  addValidatorMessage(\r\n    name: string,\r\n    message: string | ((error: any, field: VXFormFieldConfig) => string)\r\n  ) {\r\n    this.messages[name] = message;\r\n  }\r\n\r\n  getValidatorMessage(name: string) {\r\n    return this.messages[name];\r\n  }\r\n\r\n  setManipulator(manipulator: ManipulatorOption) {\r\n    new manipulator.class()[manipulator.method](this);\r\n  }\r\n\r\n  setAPPConfig(config: APPConfig) {\r\n    this.appConfig = config;\r\n  }\r\n\r\n  private mergeExtendedType(name: string) {\r\n    if (!this.types[name].extends) {\r\n      return;\r\n    }\r\n\r\n    const extendedType = this.getType(this.types[name].extends);\r\n    if (!this.types[name].component) {\r\n      this.types[name].component = extendedType.component;\r\n    }\r\n\r\n    if (!this.types[name].wrappers) {\r\n      this.types[name].wrappers = extendedType.wrappers;\r\n    }\r\n  }\r\n\r\n  private getFieldInjector(field: VXFormFieldConfigCache = {}) {\r\n    const parent = field.parent;\r\n    if (parent._componentFactory && parent._componentFactory.componentRef) {\r\n      return parent._componentFactory.componentRef.injector;\r\n    }\r\n\r\n    return parent.options._injector;\r\n  }\r\n}\r\nexport interface TypeOption {\r\n  name: string;\r\n  component?: any;\r\n  wrappers?: string[];\r\n  extends?: string;\r\n  defaultOptions?: VXFormFieldConfig;\r\n}\r\n\r\nexport interface WrapperOption {\r\n  name: string;\r\n  component: any;\r\n  types?: string[];\r\n}\r\n\r\nexport interface FieldValidatorFn {\r\n  (c: AbstractControl, field: VXFormFieldConfig): ValidationErrors | null;\r\n}\r\n\r\nexport interface ValidatorOption {\r\n  name: string;\r\n  validation: FieldValidatorFn;\r\n}\r\n\r\nexport interface ExtensionOption {\r\n  name: string;\r\n  extension: VXFormExtension;\r\n}\r\n\r\nexport interface ValidationMessageOption {\r\n  name: string;\r\n  message: string | ((error: any, field: VXFormFieldConfig) => string);\r\n}\r\n\r\nexport interface ManipulatorOption {\r\n  class?: { new (): any };\r\n  method?: string;\r\n}\r\n\r\nexport interface ManipulatorWrapper {\r\n  (f: VXFormFieldConfig): string;\r\n}\r\n\r\nexport interface TemplateManipulators {\r\n  preWrapper?: ManipulatorWrapper[];\r\n  postWrapper?: ManipulatorWrapper[];\r\n}\r\n\r\nexport interface ConfigOption {\r\n  types?: TypeOption[];\r\n  wrappers?: WrapperOption[];\r\n  validators?: ValidatorOption[];\r\n  extensions?: ExtensionOption[];\r\n  validationMessages?: ValidationMessageOption[];\r\n\r\n  manipulators?: ManipulatorOption[];\r\n  extras?: {\r\n    fieldTransform?: any;\r\n    immutable?: boolean;\r\n    showError?: (field: FieldType) => boolean;\r\n    checkExpressionOn?: \"modelChange\" | \"changeDetectionCheck\";\r\n  };\r\n}\r\n\r\nexport interface APPConfig {\r\n  url?: string;\r\n  token?: string;\r\n}\r\n","import { Injectable, ComponentFactoryResolver, Injector } from \"@angular/core\";\r\nimport { FormGroup, FormArray } from \"@angular/forms\";\r\nimport { VXFormConfig } from \"./vxform.config\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormOptions,\r\n  VXFormFieldConfigCache,\r\n  VXFormValueChangeEvent,\r\n  VXFormOptionsCache\r\n} from \"../components/vxform.field.config\";\r\nimport { Subject } from \"rxjs\";\r\nimport { defineHiddenProp } from \"../utils\"; \r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class VXFormBuilder {\r\n  constructor(  \r\n    private vxFormConfig: VXFormConfig,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  buildForm(\r\n    formControl: FormGroup | FormArray,\r\n    fieldGroup: VXFormFieldConfig[] = [],\r\n    model: any,\r\n    options: VXFormOptions\r\n  ) {\r\n    if (!this.vxFormConfig.extensions.core) {\r\n    }\r\n \r\n    \r\n    this._buildForm({\r\n      fieldGroup,\r\n      model,\r\n      formControl,\r\n      options: this._setOptions(options)\r\n    }); \r\n  }\r\n\r\n  private _buildForm(field: VXFormFieldConfigCache) {\r\n    this.getExtensions().forEach(\r\n      extension => extension.prePopulate && extension.prePopulate(field)\r\n    );\r\n    this.getExtensions().forEach(\r\n      extension => extension.onPopulate && extension.onPopulate(field)\r\n    );\r\n\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup.forEach(f => this._buildForm(f));\r\n    }\r\n\r\n    this.getExtensions().forEach(\r\n      extension => extension.postPopulate && extension.postPopulate(field)\r\n    );\r\n  }\r\n\r\n  private getExtensions() {\r\n    return Object.keys(this.vxFormConfig.extensions).map(\r\n      name => this.vxFormConfig.extensions[name]\r\n    );\r\n  }\r\n\r\n  private _setOptions(options: VXFormOptionsCache) {\r\n    options = options || {};\r\n    options.formState = options.formState || {};\r\n\r\n    if (!options.showError) {\r\n      options.showError = this.vxFormConfig.extras.showError;\r\n    }\r\n\r\n    if (!options.fieldChanges) {\r\n      defineHiddenProp(\r\n        options,\r\n        \"fieldChanges\",\r\n        new Subject<VXFormValueChangeEvent>()\r\n      );\r\n    }\r\n\r\n    if (!options._componentFactoryResolver) {\r\n      defineHiddenProp(\r\n        options,\r\n        \"_componentFactoryResolver\",\r\n        this.componentFactoryResolver\r\n      );\r\n    }\r\n\r\n    if (!options._injector) {\r\n      defineHiddenProp(options, \"_injector\", this.injector);\r\n    }\r\n\r\n    if (!options._hiddenFieldsForCheck) {\r\n      options._hiddenFieldsForCheck = [];\r\n    }\r\n\r\n    if (!options._markForCheck) {\r\n      options._markForCheck = field => {\r\n        if (field._componentRefs) {\r\n          field._componentRefs.forEach(ref =>\r\n            ref.changeDetectorRef.markForCheck()\r\n          );\r\n        }\r\n\r\n        if (field.fieldGroup) {\r\n          field.fieldGroup.forEach(f => options._markForCheck(f));\r\n        }\r\n      };\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n","\r\nimport { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormFieldProperty\r\n} from \"../components/vxform.field.config\";\r\nimport * as moment_ from \"moment\";\r\nconst moment = moment_;\r\nimport { isArray } from \"util\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class TestBaseUtils {\r\n    base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-*/!\";\r\n    base64DecodeChars = new Array(\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\r\n        52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\r\n        -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\r\n        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\r\n        -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n        41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\r\n\r\n    baseEncode(str):string {\r\n        var out, i, len;\r\n        var c1, c2, c3;\r\n\r\n        len = str.length;\r\n        i = 0;\r\n        out = \"\";\r\n        while (i < len) {\r\n            c1 = str.charCodeAt(i++) & 0xff;\r\n            if (i == len) {\r\n                out += this.base64EncodeChars.charAt(c1 >> 2);\r\n                out += this.base64EncodeChars.charAt((c1 & 0x3) << 4);\r\n                out += \"==\";\r\n                break;\r\n            }\r\n            c2 = str.charCodeAt(i++);\r\n            if (i == len) {\r\n                out += this.base64EncodeChars.charAt(c1 >> 2);\r\n                out += this.base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\r\n                out += this.base64EncodeChars.charAt((c2 & 0xF) << 2);\r\n                out += \"=\";\r\n                break;\r\n            }\r\n            c3 = str.charCodeAt(i++);\r\n            out += this.base64EncodeChars.charAt(c1 >> 2);\r\n            out += this.base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));\r\n            out += this.base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));\r\n            out += this.base64EncodeChars.charAt(c3 & 0x3F);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    baseDecode(str):string {\r\n        var c1, c2, c3, c4;\r\n        var i, len, out;\r\n\r\n        len = str.length;\r\n        i = 0;\r\n        out = \"\";\r\n        while (i < len) {\r\n            /* c1 */\r\n            do {\r\n                c1 = this.base64DecodeChars[str.charCodeAt(i++) & 0xff];\r\n            } while (i < len && c1 == -1);\r\n            if (c1 == -1)\r\n                break;\r\n\r\n            /* c2 */\r\n            do {\r\n                c2 = this.base64DecodeChars[str.charCodeAt(i++) & 0xff];\r\n            } while (i < len && c2 == -1);\r\n            if (c2 == -1)\r\n                break;\r\n\r\n            out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));\r\n\r\n            /* c3 */\r\n            do {\r\n                c3 = str.charCodeAt(i++) & 0xff;\r\n                if (c3 == 61)\r\n                    return out;\r\n                c3 = this.base64DecodeChars[c3];\r\n            } while (i < len && c3 == -1);\r\n            if (c3 == -1)\r\n                break;\r\n\r\n            out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));\r\n\r\n            /* c4 */\r\n            do {\r\n                c4 = str.charCodeAt(i++) & 0xff;\r\n                if (c4 == 61)\r\n                    return out;\r\n                c4 = this.base64DecodeChars[c4];\r\n            } while (i < len && c4 == -1);\r\n            if (c4 == -1)\r\n                break;\r\n            out += String.fromCharCode(((c3 & 0x03) << 6) | c4);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    t1(str:string){ \r\n        let result = false;\r\n        debugger\r\n        try{\r\n            str = this.baseDecode(str);\r\n            if(str!=undefined && str!=null && str!=\"\"){\r\n                let arr:string[]=str.split(\";\");\r\n                if(arr!=null && arr.length==2){\r\n                    let str1 = arr[0];\r\n                    let str2 = arr[1]; \r\n                    if(str1.length==parseInt(str2)){ \r\n                        let begintime = moment().toDate();\r\n                        let endtime = moment(str1).toDate();\r\n                        console.log('[][][]')\r\n                        console.log(moment(endtime).diff(begintime,'day'));\r\n                        if(moment(endtime).diff(begintime,'day')>0){\r\n                            result = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }catch(ex){\r\n            \r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  DoCheck,\r\n  OnChanges,\r\n  Input,\r\n  SimpleChanges,\r\n  Optional,\r\n  EventEmitter,\r\n  Output,\r\n  OnDestroy,\r\n  Attribute,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { FormGroup, FormArray, FormGroupDirective } from \"@angular/forms\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormOptions,\r\n  VXFormOptionsCache\r\n} from \"./vxform.field.config\";\r\nimport { VXFormBuilder } from \"../services/vxform.builder\";\r\nimport { VXFormConfig } from \"../services/vxform.config\";\r\nimport {\r\n  assignModelValue,\r\n  isNullOrUndefined,\r\n  wrapProperty,\r\n  clone,\r\n  defineHiddenProp,\r\n  getKeyPath\r\n} from \"../utils\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { TestBaseUtils } from '../tools/test';\r\n\r\n@Component({\r\n  selector: \"vxform\",\r\n  template: `\r\n    <ng-container *ngIf=\"checkTest\">\r\n    <ng-container *ngFor=\"let field of fields\">\r\n      <vxform-field\r\n        *ngIf=\"checkFieldShow(field)\"\r\n        hide-deprecation\r\n        [form]=\"field.form\"\r\n        [options]=\"field.options\"\r\n        [model]=\"field.model\"\r\n        [field]=\"field\"\r\n      >\r\n      </vxform-field>\r\n    </ng-container>\r\n    <ng-container #content>\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n    </ng-container>\r\n  `,\r\n  host: {\r\n    \"[class]\": \"class\"\r\n  },\r\n  providers: [VXFormBuilder,TestBaseUtils]\r\n})\r\nexport class VXForm implements DoCheck, OnChanges, OnDestroy {\r\n  @Input() form: FormGroup | FormArray;\r\n\r\n  @Input()\r\n  set model(model: any) {\r\n    this._model = this.immutable ? clone(model) : model;\r\n  }\r\n  get model() {\r\n    return this._model || {};\r\n  }\r\n\r\n  @Input()\r\n  set fields(fields: VXFormFieldConfig[]) {\r\n    this._fields = this.immutable ? clone(fields) : fields;\r\n  }\r\n  get fields() {\r\n      return this._fields || [];\r\n     \r\n  }\r\n\r\n  @Input()\r\n  set options(options: VXFormOptions) {\r\n    this._options = this.immutable ? clone(options) : options;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  @Input() class: string;\r\n\r\n  @Output() modelChange = new EventEmitter<any>();\r\n  @ViewChild(\"content\", { static: true }) set content(\r\n    content: ElementRef<HTMLElement>\r\n  ) {\r\n    if (content && content.nativeElement.nextSibling) {\r\n    }\r\n  }\r\n\r\n  @Input() status: number = 0;\r\n\r\n  private immutable = false;\r\n  private _model: any;\r\n  private _fields: VXFormFieldConfig[];\r\n  private _options: VXFormOptions;\r\n  private initialModel: any;\r\n  private modelChangeSubs: Subscription[] = [];\r\n  private gogo:boolean = true;\r\n  private enableCheckExprDebounce = false;\r\n  private checkExpressionChange$ = this.modelChange\r\n    .pipe(debounceTime(this.enableCheckExprDebounce ? 100 : 0))\r\n    .subscribe(() => {\r\n      this.enableCheckExprDebounce = true;\r\n      this.checkExpressionChange();\r\n      this.enableCheckExprDebounce = false;\r\n    });\r\n\r\n  constructor(\r\n    private vxFormBuilder: VXFormBuilder,\r\n    private vxFormConfig: VXFormConfig,\r\n    private test:TestBaseUtils,\r\n    @Attribute(\"immutable\") immutable,\r\n    @Optional() private parentFormGroup: FormGroupDirective\r\n  ) {\r\n    if (immutable !== null) {\r\n    }\r\n\r\n    this.immutable = immutable !== null || !!vxFormConfig.extras.immutable;\r\n    // let linces = localStorage.getItem(\"VX_FORM_LINCES\")\r\n    // if(linces!=undefined && linces!=null && linces!=\"\"){\r\n    //   this.gogo = this.test.t1(linces);\r\n    // } \r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.vxFormConfig.extras.checkExpressionOn === \"changeDetectionCheck\") {\r\n      this.checkExpressionChange();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.fields || changes.form || changes.model) {\r\n      this.form = this.form || new FormGroup({});\r\n      this.setOptions();\r\n      this.clearModelSubscriptions();\r\n      this.vxFormBuilder.buildForm(\r\n        this.form,\r\n        this.fields,\r\n        this.model,\r\n        this.options\r\n      );\r\n      this.trackModelChanges(this.fields);\r\n      this.options.updateInitialValue();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearModelSubscriptions();\r\n    this.checkExpressionChange$.unsubscribe();\r\n  }\r\n\r\n  changeModel(event: { key: string; value: any }) {\r\n    assignModelValue(this.model, event.key.split(\".\"), event.value);\r\n    this.modelChange.emit(clone(this.model));\r\n  }\r\n\r\n  setOptions() { \r\n    if (!this.options) {\r\n      this.options = {};\r\n    }\r\n\r\n    if (!this.options.resetModel) {\r\n      this.options.resetModel = (model?: any) => {\r\n        model = clone(isNullOrUndefined(model) ? this.initialModel : model);\r\n        if (this.model) {\r\n          Object.keys(this.model).forEach(k => delete this.model[k]);\r\n          Object.assign(this.model, model || {});\r\n        }\r\n\r\n        (<VXFormOptionsCache>this.options)._buildForm();\r\n\r\n        if (\r\n          this.options.parentForm &&\r\n          this.options.parentForm.control === this.form\r\n        ) {\r\n          this.options.parentForm.resetForm(model);\r\n        } else {\r\n          this.form.reset(model);\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!this.options.parentForm && this.parentFormGroup) {\r\n      defineHiddenProp(this.options, \"parentForm\", this.parentFormGroup);\r\n      wrapProperty(this.options.parentForm, \"submitted\", ({ firstChange }) => {\r\n        if (!firstChange) {\r\n          (<VXFormOptionsCache>this.options)._markForCheck({\r\n            fieldGroup: this.fields,\r\n            model: this.model,\r\n            formControl: this.form,\r\n            options: this.options\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!this.options.updateInitialValue) {\r\n      this.options.updateInitialValue = () =>\r\n        (this.initialModel = clone(this.model));\r\n    }\r\n\r\n    if (!(<VXFormOptionsCache>this.options)._buildForm) {\r\n      (<VXFormOptionsCache>this.options)._buildForm = (\r\n        emitModelChange = false\r\n      ) => {\r\n        this.clearModelSubscriptions();\r\n        this.vxFormBuilder.buildForm(\r\n          this.form,\r\n          this.fields,\r\n          this.model,\r\n          this.options\r\n        );\r\n        this.trackModelChanges(this.fields);\r\n\r\n        if (emitModelChange) {\r\n          this.modelChange.emit(clone(this.model));\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  private checkExpressionChange() {\r\n    if (this.options && (<VXFormOptionsCache>this.options)._checkField) {\r\n      (<VXFormOptionsCache>this.options)._checkField({\r\n        fieldGroup: this.fields,\r\n        model: this.model,\r\n        formControl: this.form,\r\n        options: this.options\r\n      });\r\n    }\r\n  }\r\n\r\n  private trackModelChanges(\r\n    fields: VXFormFieldConfig[],\r\n    rootKey: string[] = []\r\n  ) {\r\n    fields.forEach(field => {\r\n      field.status = this.status;\r\n      if (field.key && !field.fieldGroup) {\r\n        const control = field.formControl;\r\n        let valueChanges = control.valueChanges;\r\n\r\n        const { updateOn, debounce } = field.modelOptions;\r\n        if (\r\n          (!updateOn || updateOn === \"change\") &&\r\n          debounce &&\r\n          debounce.default > 0\r\n        ) {\r\n          valueChanges = control.valueChanges.pipe(\r\n            debounceTime(debounce.default)\r\n          );\r\n        }\r\n\r\n        this.modelChangeSubs.push(\r\n          valueChanges.subscribe(value => {\r\n            if ((control as any)._onChange.length > 1) {\r\n              control.patchValue(value, { emitEvent: false });\r\n            }\r\n\r\n            if (field.parsers && field.parsers.length > 0) {\r\n              field.parsers.forEach(parserFn => (value = parserFn(value)));\r\n            }\r\n\r\n            this.changeModel({\r\n              key: [...rootKey, ...getKeyPath(field)].join(\".\"),\r\n              value\r\n            });\r\n          })\r\n        );\r\n      }\r\n\r\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\r\n        this.trackModelChanges(\r\n          field.fieldGroup,\r\n          field.key ? [...rootKey, ...getKeyPath(field)] : rootKey\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  private clearModelSubscriptions() {\r\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\r\n    this.modelChangeSubs = [];\r\n  }\r\n\r\n  checkFieldShow(field: VXFormFieldConfig) {\r\n    let result = true;\r\n    if (field && field.hasOwnProperty(\"show\")) {\r\n      result = field.show;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get checkTest(){ \r\n    return this.gogo;\r\n  }\r\n  set checkTest(value:boolean){\r\n    this.gogo = value;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewContainerRef,\r\n  ViewChild,\r\n  ComponentRef,\r\n  SimpleChanges,\r\n  Attribute,\r\n  ComponentFactoryResolver,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  DoCheck,\r\n  AfterContentInit,\r\n  AfterContentChecked,\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n  Injector\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { VXFormConfig } from \"../services/vxform.config\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormOptions,\r\n  VXFormFieldConfigCache\r\n} from \"./vxform.field.config\";\r\nimport { defineHiddenProp, wrapProperty } from \"../utils\";\r\nimport { FieldWrapper } from \"../templates/field.wrapper\";\r\nimport { FieldType } from \"../templates/field.type\";\r\n\r\n@Component({\r\n  selector: \"vxform-field\",\r\n  template: `\r\n    <ng-template #container></ng-template>\r\n  `,\r\n  host: {\r\n    \"[style.display]\": 'field.hide ? \"none\":\"\"',\r\n    //\"[class]\": \"field.className? field.className : className\"\r\n    \"[class]\":\r\n      \"field.type=='text'?'panel-'+field.type+' panel-'+field.typeold: 'panel-'+field.type\"\r\n  }\r\n})\r\nexport class VXFormField\r\n  implements\r\n    OnInit,\r\n    OnChanges,\r\n    DoCheck,\r\n    AfterContentInit,\r\n    AfterContentChecked,\r\n    AfterViewInit,\r\n    AfterViewChecked,\r\n    OnDestroy {\r\n  @Input() field: VXFormFieldConfig;\r\n  @Input(\"class\") className: string = \"\";\r\n\r\n  warnDeprecation = false;\r\n\r\n  @Input() set model(m: any) {\r\n    this.warnDeprecation && console.warn(`:${this.constructor.name}`);\r\n  }\r\n\r\n  @Input() set form(form: FormGroup) {\r\n    this.warnDeprecation && console.warn(`:${this.constructor.name}`);\r\n  }\r\n\r\n  @Input() set options(options: VXFormOptions) {\r\n    this.warnDeprecation && console.warn(`:${this.constructor.name}`);\r\n  }\r\n\r\n  @Input() set rownumber(value:number){\r\n    if(value!=undefined && value!=null && value>-1){\r\n      this.field.rownumber = value;\r\n    }\r\n  }\r\n\r\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild(\"container\", <any>{ read: ViewContainerRef, static: true })\r\n  containerRef: ViewContainerRef;\r\n\r\n  constructor(\r\n    private vxFormConfig: VXFormConfig,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    @Attribute(\"hide-deprecation\") hideDeprecation\r\n  ) {\r\n    this.warnDeprecation = hideDeprecation === null;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.triggerHook(\"afterContentInit\");\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.triggerHook(\"afterContentChecked\");\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.triggerHook(\"afterViewInit\");\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.triggerHook(\"afterViewChecked\");\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.triggerHook(\"doCheck\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.triggerHook(\"onInit\");\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.triggerHook(\"onChanges\", changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.field && defineHiddenProp(this.field, \"_componentRefs\", []);\r\n    this.triggerHook(\"onDestroy\");\r\n  }\r\n\r\n  private renderField(\r\n    containerRef: ViewContainerRef,\r\n    f: VXFormFieldConfigCache,\r\n    wrappers: string[]\r\n  ) {\r\n    if (this.containerRef === containerRef) {\r\n      defineHiddenProp(this.field, \"_componentRefs\", []);\r\n      this.containerRef.clear();\r\n    }\r\n\r\n    if (wrappers && wrappers.length > 0) {\r\n      const [wrapper, ...wps] = wrappers;\r\n      const { component } = this.vxFormConfig.getWrapper(wrapper);\r\n      const cfr =\r\n        f.options && f.options._componentFactoryResolver\r\n          ? f.options._componentFactoryResolver\r\n          : this.componentFactoryResolver;\r\n\r\n      const ref = containerRef.createComponent<FieldWrapper>(\r\n        cfr.resolveComponentFactory(component)\r\n      );\r\n      this.attachComponentRef(ref, f);\r\n      wrapProperty(\r\n        ref.instance,\r\n        \"fieldComponent\",\r\n        ({ currentValue, firstChange }) => {\r\n          if (currentValue) {\r\n            this.renderField(currentValue as ViewContainerRef, f, wps);\r\n            !firstChange && ref.changeDetectorRef.detectChanges();\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      const ref = this.vxFormConfig.createComponent(\r\n        f,\r\n        this.componentFactoryResolver,\r\n        this.injector\r\n      );\r\n      if (ref) {\r\n        this.attachComponentRef(ref, f);\r\n        containerRef.insert(ref.hostView);\r\n      }\r\n    }\r\n  }\r\n\r\n  private triggerHook(name: string, changes?: SimpleChanges) {\r\n    if (this.field.hooks && this.field.hooks[name]) {\r\n      if (!changes || changes.field) {\r\n        this.field.hooks[name](this.field);\r\n      }\r\n    }\r\n\r\n    if (this.field.lifecycle && this.field.lifecycle[name]) {\r\n      this.field.lifecycle[name](\r\n        this.field.form,\r\n        this.field,\r\n        this.field.model,\r\n        this.field.options\r\n      );\r\n    }\r\n\r\n    if (name === \"onChanges\" && changes.field) {\r\n      this.renderField(this.containerRef, this.field, this.field.wrappers);\r\n    }\r\n  }\r\n\r\n  private attachComponentRef<T extends FieldType>(\r\n    ref: ComponentRef<T>,\r\n    field: VXFormFieldConfigCache\r\n  ) {\r\n    field._componentRefs.push(ref);\r\n    Object.assign(ref.instance, { field });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Renderer2,\r\n  DoCheck,\r\n  Inject,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormTemplateOptions\r\n} from \"./vxform.field.config\";\r\nimport { wrapProperty, defineHiddenProp, VXFORM_VALIDATORS } from \"../utils\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\n\r\n@Directive({\r\n  selector: \"[vxFormAttributes]\",\r\n  host: {\r\n    \"(focus)\": \"onFocus($event)\",\r\n    \"(blur)\": \"onBlur($event)\",\r\n    \"(keyup)\": \"to.keyup && to.keyup(field, $event)\",\r\n    \"(keydown)\": \"to.keydown && to.keydown(field, $event)\",\r\n    \"(click)\": \"to.click && to.click(field, $event)\",\r\n    \"(change)\": \"onChange($event)\",\r\n    \"(keypress)\": \"to.keypress && to.keypress(field, $event)\"\r\n  }\r\n})\r\nexport class VXFormAttributes implements OnChanges, DoCheck, OnDestroy {\r\n  @Input(\"vxFormAttributes\") field: VXFormFieldConfig;\r\n\r\n  private document: Document;\r\n  private uiAttributesCache: any = {};\r\n  private uiAttributes = [\r\n    ...VXFORM_VALIDATORS,\r\n    \"tabindex\",\r\n    \"placeholder\",\r\n    \"readonly\",\r\n    \"disabled\",\r\n    \"step\"\r\n  ];\r\n\r\n  get to(): VXFormTemplateOptions {\r\n    return this.field.templateOptions || {};\r\n  }\r\n\r\n  private get fieldAttrElements() {\r\n    return (this.field && this.field[\"_attrElements\"]) || [];\r\n  }\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    @Inject(DOCUMENT) _document: any\r\n  ) {\r\n    this.document = _document;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.field) {\r\n      [\"id\", \"name\"].forEach(attr => {\r\n        this.field[attr] && this.setAttribute(attr, this.field[attr]);\r\n      });\r\n\r\n      if (this.to && this.to.attributes) {\r\n        wrapProperty(\r\n          this.to,\r\n          \"attributes\",\r\n          ({ currentValue, previousValue }) => {\r\n            if (previousValue) {\r\n              Object.keys(previousValue).forEach(attr =>\r\n                this.removeAttribute(attr)\r\n              );\r\n            }\r\n\r\n            if (currentValue) {\r\n              Object.keys(currentValue).forEach(attr =>\r\n                this.setAttribute(attr, currentValue[attr])\r\n              );\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      this.attachAttrElement();\r\n      if (this.fieldAttrElements.length === 1) {\r\n        wrapProperty(this.field, \"focus\", ({ currentValue }) => {\r\n          const element = this.fieldAttrElements\r\n            ? this.fieldAttrElements[0]\r\n            : null;\r\n          if (!element) {\r\n            return;\r\n          }\r\n\r\n          this.focusElement(element, currentValue);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  ngDoCheck() {\r\n    this.uiAttributes.forEach(attr => {\r\n      const value = this.to[attr];\r\n      if (this.uiAttributesCache[attr] !== value) {\r\n        this.uiAttributesCache[attr] = value;\r\n        if (value || value === 0) {\r\n          this.setAttribute(attr, value === true ? attr : `${value}`);\r\n        } else {\r\n          this.removeAttribute(attr);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.detachAttrElement();\r\n  }\r\n\r\n  focusElement(element, value: boolean) {\r\n    if (!element.focus) {\r\n      return;\r\n    }\r\n\r\n    const isFocused =\r\n      !!this.document.activeElement &&\r\n      this.fieldAttrElements.some(\r\n        element =>\r\n          this.document.activeElement === element ||\r\n          element.contains(this.document.activeElement)\r\n      );\r\n\r\n    if (value && !isFocused) {\r\n      element.focus();\r\n    } else if (!value && isFocused) {\r\n      element.blur();\r\n    }\r\n  }\r\n\r\n  onFocus($event: any) {\r\n    this.field[\"___$focus\"] = true;\r\n    if (this.to.focus) {\r\n      this.to.focus(this.field, $event);\r\n    }\r\n  }\r\n\r\n  onBlur($event: any) {\r\n    this.field[\"___$focus\"] = false;\r\n    if (this.to.blur) {\r\n      this.to.blur(this.field, $event);\r\n    }\r\n  }\r\n\r\n  onChange($event: any) {\r\n    if (this.to.change) {\r\n      this.to.change(this.field, $event);\r\n    }\r\n\r\n    if (this.field.formControl) {\r\n      this.field.formControl.markAsDirty();\r\n    }\r\n  }\r\n\r\n  private attachAttrElement() {\r\n    if (this.field[\"_attrElements\"]) {\r\n      this.field[\"_attrElements\"].push(this.elementRef.nativeElement);\r\n    } else {\r\n      defineHiddenProp(this.field, \"_attrElements\", [\r\n        this.elementRef.nativeElement\r\n      ]);\r\n    }\r\n  }\r\n\r\n  private detachAttrElement() {\r\n    const index = this.fieldAttrElements.findIndex(\r\n      element => element !== this.elementRef.nativeElement\r\n    );\r\n    if (index !== -1) {\r\n      this.field[\"_attrElements\"].splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private setAttribute(attr: string, value: string) {\r\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\r\n  }\r\n\r\n  private removeAttribute(attr: string) {\r\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\r\n  }\r\n}\r\n","import { Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXAttachmentFile\r\n} from \"../components/vxform.field.config\";\r\n\r\nexport abstract class FieldType<\r\n  F extends VXFormFieldConfig = VXFormFieldConfig\r\n> {\r\n  @Input() field: F;\r\n  defaultOptions?: F;\r\n\r\n  @Input()\r\n  get model() {\r\n    return this.field.model;\r\n  }\r\n  set model(m: any) {}\r\n\r\n  @Input()\r\n  get form() {\r\n    return <FormGroup>this.field.parent.formControl;\r\n  }\r\n  set form(form) {}\r\n\r\n  @Input()\r\n  get options() {\r\n    return this.field.options;\r\n  }\r\n  set options(options: F[\"options\"]) {}\r\n\r\n  get key() {\r\n    return this.field.key;\r\n  }\r\n\r\n  get formControl() {\r\n    return this.field.formControl;\r\n  }\r\n\r\n  get to() {\r\n    return this.field.templateOptions || {};\r\n  }\r\n\r\n  get showError(): boolean {\r\n    return this.options.showError(this);\r\n  }\r\n\r\n  get id(): string {\r\n    return this.field.id;\r\n  }\r\n\r\n  get formState() {\r\n    return this.options.formState || {};\r\n  }\r\n\r\n  get formStatus() {\r\n    return this.field.status || 0;\r\n  }\r\n\r\n  get editor() {\r\n    if (this.field.hasOwnProperty(\"editor\")) {\r\n      return this.field.editor;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get text() {\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      return this.model[this.field.key];\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  get placeHolder() {\r\n    if (\r\n      this.to != undefined &&\r\n      this.to != null &&\r\n      this.to.placeholder != undefined &&\r\n      this.to.placeholder != null\r\n    ) {\r\n      return this.to.placeholder;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  get textSingle() {\r\n    let result = \"\";\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      let value = this.model[this.field.key];\r\n      if (value != null && value != \"\") {\r\n        if (\r\n          this.field.templateOptions &&\r\n          this.field.templateOptions.options &&\r\n          this.field.templateOptions.options != null\r\n        ) {\r\n          this.field.templateOptions.options.forEach((item: any) => {\r\n            if (item.value == value) {\r\n              result = item.label;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get textMultiple() {\r\n    let result = [];\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      let values = this.model[this.field.key];\r\n      if (values != null && values instanceof Array) {\r\n        if (\r\n          this.field.templateOptions &&\r\n          this.field.templateOptions.options &&\r\n          this.field.templateOptions.options != null\r\n        ) {\r\n          values.forEach((element: any) => {\r\n            this.to.options.forEach((item: any) => {\r\n              if (item.value === element) {\r\n                result.push(item.label);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return result.join(\"ã\");\r\n  }\r\n\r\n  get textLookUp() {\r\n    let result = [];\r\n    if (this.model.hasOwnProperty(this.key)) {\r\n      if (this.model[this.key] != undefined && this.model[this.key] != null) {\r\n        result = this.model[this.key].map((item: any) => {\r\n          return item.label;\r\n        });\r\n      }\r\n    }\r\n    return result.join(\"ã\");\r\n  }\r\n\r\n  get tips() {\r\n    if (\r\n      this.to != undefined &&\r\n      this.to != null &&\r\n      this.to.tips != undefined &&\r\n      this.to.tips != null\r\n    ) {\r\n      return this.to.tips;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  get attachment() {\r\n    let result = [];\r\n    if (this.model.hasOwnProperty(this.field.key)) {\r\n      if (\r\n        this.model[this.field.key] != null &&\r\n        (this.model[this.field.key] as VXAttachmentFile)\r\n      ) {\r\n        result = this.model[this.field.key];\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get attachmentDisabled() {\r\n    let result = false;\r\n    if (this.to.hasOwnProperty(\"attachment\")) {\r\n      if (this.to.attachment.hasOwnProperty(\"limit\")) {\r\n        let limit = this.to.attachment.limit;\r\n        if (limit != null) {\r\n          let attachment: any = this.attachment;\r\n          if (attachment != null) {\r\n            result = this.attachment.length >= limit;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get active(){\r\n    let result = false;\r\n    if(this.field[\"active\"]!=undefined && this.field[\"active\"]!=null && this.field[\"active\"]==true){\r\n      result = true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get rownumber(){\r\n    let result =0;\r\n    if(this.field[\"active\"]!=undefined && this.field[\"active\"]!=null){\r\n      result = this.field.rownumber;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport abstract class Field extends FieldType {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { FormArray, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { VXFormFieldConfig } from \"../../core\";\r\nimport {\r\n  getKeyPath,\r\n  getFieldValue,\r\n  isNullOrUndefined,\r\n  defineHiddenProp,\r\n  wrapProperty\r\n} from \"../../utils\";\r\n\r\nexport function unregisterControl(field: VXFormFieldConfig) {\r\n  const form = field.formControl.parent as FormArray | FormGroup;\r\n  if (form instanceof FormArray) {\r\n    const key = form.controls.findIndex(c => c === field.formControl);\r\n    if (key !== -1) {\r\n      form.removeAt(key);\r\n      field.formControl.setParent(null);\r\n    }\r\n  } else if (form instanceof FormGroup) {\r\n    const paths = getKeyPath(field);\r\n    const key = paths[paths.length - 1];\r\n    if (form.get([key]) === field.formControl) {\r\n      form.removeControl(key);\r\n    }\r\n    field.formControl.setParent(null);\r\n  }\r\n}\r\n\r\nexport function registerControl(field: VXFormFieldConfig, control?: any) {\r\n  control = control || field.formControl;\r\n  if (!field.formControl && control) {\r\n    defineHiddenProp(field, \"formControl\", control);\r\n\r\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\r\n    wrapProperty(\r\n      field.templateOptions,\r\n      \"disabled\",\r\n      ({ firstChange, currentValue }) => {\r\n        if (!firstChange) {\r\n          currentValue\r\n            ? field.formControl.disable()\r\n            : field.formControl.enable();\r\n        }\r\n      }\r\n    );\r\n    if (control.registerOnDisabledChange) {\r\n      control.registerOnDisabledChange(\r\n        (value: boolean) => (field.templateOptions[\"___$disabled\"] = value)\r\n      );\r\n    }\r\n  }\r\n\r\n  let parent = field.parent.formControl as FormGroup;\r\n  if (!parent) {\r\n    return;\r\n  }\r\n\r\n  const paths = getKeyPath(field);\r\n  for (let i = 0; i < paths.length - 1; i++) {\r\n    const path = paths[i];\r\n    if (!parent.get([path])) {\r\n      registerControl({\r\n        key: path,\r\n        formControl: new FormGroup({}),\r\n        parent: { formControl: parent }\r\n      });\r\n    }\r\n\r\n    parent = <FormGroup>parent.get([path]);\r\n  }\r\n\r\n  const value = getFieldValue(field);\r\n  if (\r\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value)) &&\r\n    control.value !== value &&\r\n    control instanceof FormControl\r\n  ) {\r\n    control.patchValue(value);\r\n  }\r\n  const key = paths[paths.length - 1];\r\n  if (parent.get([key]) !== control) {\r\n    parent.setControl(key, control);\r\n  }\r\n}\r\n","import { Inject, Optional } from \"@angular/core\";\r\nimport { FormArray } from \"@angular/forms\";\r\nimport { FieldType } from \"./field.type\";\r\nimport {\r\n  clone,\r\n  isNullOrUndefined,\r\n  assignModelValue,\r\n  getKeyPath\r\n} from \"../utils\";\r\nimport { VXFormBuilder } from \"../services/vxform.builder\";\r\nimport { VXFormFieldConfig } from \"../components/vxform.field.config\";\r\nimport { VXFORM_CONFIG, VXFormExtension } from \"../services/vxform.config\";\r\nimport {\r\n  registerControl,\r\n  unregisterControl\r\n} from \"../extensions/field-form/utils\";\r\n\r\nexport abstract class FieldArrayType<\r\n  F extends VXFormFieldConfig = VXFormFieldConfig\r\n> extends FieldType<F> implements VXFormExtension {\r\n  formControl: FormArray;\r\n  defaultOptions: any = {\r\n    defaultValue: []\r\n  };\r\n\r\n  constructor(@Inject(VXFORM_CONFIG) @Optional() builder?: VXFormBuilder) {\r\n    super();\r\n\r\n    if (builder instanceof VXFormBuilder) {\r\n    }\r\n  }\r\n\r\n  onPopulate(field: VXFormFieldConfig) {\r\n    if (!field.formControl) {\r\n      registerControl(\r\n        field,\r\n        new FormArray([], { updateOn: field.modelOptions.updateOn })\r\n      );\r\n    }\r\n\r\n    field.fieldGroup = field.fieldGroup || [];\r\n\r\n    const length = field.model ? field.model.length : 0;\r\n    if (field.fieldGroup.length > length) {\r\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\r\n        unregisterControl(field.fieldGroup[i]);\r\n        field.fieldGroup.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    for (let i = field.fieldGroup.length; i < length; i++) {\r\n      const f = { ...clone(field.fieldArray), key: `${i}` };\r\n      field.fieldGroup.push(f);\r\n    }\r\n  }\r\n\r\n  add(i?: number, initialModel?: any) {\r\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\r\n    if (!this.model) {\r\n      assignModelValue(this.field.parent.model, getKeyPath(this.field), []);\r\n    }\r\n\r\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\r\n\r\n    (<any>this.options)._buildForm(true);\r\n    this.formControl.markAsDirty();\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.model.splice(i, 1);\r\n    unregisterControl(this.field.fieldGroup[i]);\r\n    this.field.fieldGroup.splice(i, 1);\r\n    this.field.fieldGroup.forEach((f, key) => (f.key = `${key}`));\r\n\r\n    (<any>this.options)._buildForm(true);\r\n    this.formControl.markAsDirty();\r\n  }\r\n}\r\n","import { ViewContainerRef, ViewChild } from \"@angular/core\";\r\nimport { FieldType } from \"./field.type\";\r\nimport { VXFormFieldConfig } from \"../components/vxform.field.config\";\r\n\r\nexport abstract class FieldWrapper<\r\n  F extends VXFormFieldConfig = VXFormFieldConfig\r\n> extends FieldType<F> {\r\n  @ViewChild(\"fieldComponent\", <any>{ read: ViewContainerRef, static: false })\r\n  fieldComponent: ViewContainerRef;\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"./field.type\";\r\n\r\n@Component({\r\n  selector: \"vxform-group\",\r\n  template: `\r\n    <vxform-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></vxform-field>\r\n    <ng-content></ng-content>\r\n  `,\r\n  host: {\r\n    \"[class]\": 'field.fieldGroupClassName || \"\"'\r\n  }\r\n})\r\nexport class VXFormGroup extends FieldType {\r\n  defaultOptions = {\r\n    defaultValue: {}\r\n  };\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { VXFormConfig } from \"../services/vxform.config\";\r\nimport { VXFormFieldConfig } from \"../components/vxform.field.config\";\r\nimport { isObject } from \"../utils\";\r\n\r\n@Component({\r\n  selector: \"vxform-validation-message\",\r\n  template: `\r\n    {{ errorMessage }}\r\n  `\r\n})\r\nexport class VXFormValidationMessage {\r\n  @Input() field: VXFormFieldConfig;\r\n\r\n  constructor(private vxFormConfig: VXFormConfig) {}\r\n\r\n  get errorMessage(): string {\r\n    const fieldForm = this.field.formControl;\r\n    for (let error in fieldForm.errors) {\r\n      if (fieldForm.errors.hasOwnProperty(error)) {\r\n        let message: string | Function = this.vxFormConfig.getValidatorMessage(\r\n          error\r\n        );\r\n\r\n        if (isObject(fieldForm.errors[error])) {\r\n          if (fieldForm.errors[error].errorPath) {\r\n            return;\r\n          }\r\n\r\n          if (fieldForm.errors[error].message) {\r\n            message = fieldForm.errors[error].message;\r\n          }\r\n        }\r\n\r\n        if (\r\n          this.field.validation &&\r\n          this.field.validation.messages &&\r\n          this.field.validation.messages[error]\r\n        ) {\r\n          message = this.field.validation.messages[error];\r\n        }\r\n\r\n        if (\r\n          this.field.validators &&\r\n          this.field.validators[error] &&\r\n          this.field.validators[error].message\r\n        ) {\r\n          message = this.field.validators[error].message;\r\n        }\r\n\r\n        if (\r\n          this.field.asyncValidators &&\r\n          this.field.asyncValidators[error] &&\r\n          this.field.asyncValidators[error].message\r\n        ) {\r\n          message = this.field.asyncValidators[error].message;\r\n        }\r\n\r\n        if (typeof message === \"function\") {\r\n          return message(fieldForm.errors[error], this.field);\r\n        }\r\n\r\n        return message;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FieldType } from \"./field.type\";\r\n\r\n@Component({\r\n  selector: \"template\",\r\n  template: `\r\n    <div [innerHtml]=\"field.template\"></div>\r\n  `\r\n})\r\nexport class VXFormTemplateType extends FieldType {}\r\n","export function evalStringExpression(expression: string, argNames: string[]) {\r\n  try {\r\n    if (expression.indexOf(\"this.field\") !== -1) {\r\n    }\r\n\r\n    return Function(...argNames, `return ${expression};`) as any;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport function evalExpressionValueSetter(\r\n  expression: string,\r\n  argNames: string[]\r\n) {\r\n  try {\r\n    return Function(...argNames, `${expression} = expressionValue;`) as (\r\n      value: any\r\n    ) => void;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport function evalExpression(\r\n  expression: string | Function | boolean,\r\n  thisArg: any,\r\n  argVal: any[]\r\n): any {\r\n  if (expression instanceof Function) {\r\n    return expression.apply(thisArg, argVal);\r\n  } else {\r\n    return expression ? true : false;\r\n  }\r\n}\r\n","import {\r\n  VXFormFieldConfig,\r\n  VXFormValueChangeEvent,\r\n  VXFormFieldConfigCache\r\n} from \"../../components/vxform.field.config\";\r\nimport {\r\n  isObject,\r\n  isNullOrUndefined,\r\n  isFunction,\r\n  defineHiddenProp,\r\n  wrapProperty\r\n} from \"../../utils\";\r\nimport {\r\n  evalExpression,\r\n  evalStringExpression,\r\n  evalExpressionValueSetter\r\n} from \"./utils\";\r\nimport { Observable } from \"rxjs\";\r\nimport { VXFormExtension } from \"../../services/vxform.config\";\r\nimport { unregisterControl, registerControl } from \"../field-form/utils\";\r\n\r\nexport class FieldExpressionExtension implements VXFormExtension {\r\n  prePopulate(field: VXFormFieldConfigCache) {\r\n    if (field.parent || field.options._checkField) {\r\n      return;\r\n    }\r\n\r\n    field.options._checkField = (f, ignoreCache) =>\r\n      this._checkField(f, ignoreCache);\r\n  }\r\n\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    if (!field.parent || field._expressionProperties) {\r\n      return;\r\n    }\r\n\r\n    defineHiddenProp(field, \"_expressionProperties\", {});\r\n\r\n    if (field.expressionProperties) {\r\n      for (const key in field.expressionProperties) {\r\n        const expressionProperty = field.expressionProperties[key],\r\n          expressionValueSetter = evalExpressionValueSetter(`field.${key}`, [\r\n            \"expressionValue\",\r\n            \"model\",\r\n            \"field\"\r\n          ]);\r\n\r\n        if (\r\n          typeof expressionProperty === \"string\" ||\r\n          isFunction(expressionProperty)\r\n        ) {\r\n          field._expressionProperties[key] = {\r\n            expression: this._evalExpression(\r\n              expressionProperty,\r\n              field.parent.expressionProperties &&\r\n                field.parent.expressionProperties.hasOwnProperty(\r\n                  \"templateOptions.disabled\"\r\n                )\r\n                ? () => field.parent.templateOptions.disabled\r\n                : undefined\r\n            ),\r\n            expressionValueSetter\r\n          };\r\n          if (key === \"templateOptions.disabled\") {\r\n            Object.defineProperty(\r\n              field._expressionProperties[key],\r\n              \"expressionValue\",\r\n              {\r\n                get: () => field.templateOptions.disabled,\r\n                set: () => {},\r\n                enumerable: true,\r\n                configurable: true\r\n              }\r\n            );\r\n          }\r\n        } else if (expressionProperty instanceof Observable) {\r\n          const subscription = (expressionProperty as Observable<\r\n            any\r\n          >).subscribe(v =>\r\n            evalExpression(expressionValueSetter, { field }, [\r\n              v,\r\n              field.model,\r\n              field\r\n            ])\r\n          );\r\n\r\n          const onDestroy = field.hooks.onDestroy;\r\n          field.hooks.onDestroy = field => {\r\n            onDestroy && onDestroy(field);\r\n            subscription.unsubscribe();\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (field.hideExpression) {\r\n      delete field.hide;\r\n\r\n      let parent = field.parent;\r\n      while (parent && !parent.hideExpression) {\r\n        parent = parent.parent;\r\n      }\r\n\r\n      field.hideExpression = this._evalExpression(\r\n        field.hideExpression,\r\n        parent && parent.hideExpression ? () => parent.hide : undefined\r\n      );\r\n    } else {\r\n      wrapProperty(field, \"hide\", ({ currentValue, firstChange }) => {\r\n        if (!firstChange || (firstChange && currentValue === true)) {\r\n          field.options._hiddenFieldsForCheck.push(field);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  postPopulate(field: VXFormFieldConfigCache) {\r\n    if (field.parent) {\r\n      return;\r\n    }\r\n\r\n    field.options._checkField(field, true);\r\n  }\r\n\r\n  private _evalExpression(expression, parentExpression?) {\r\n    expression = expression || (() => false);\r\n    if (typeof expression === \"string\") {\r\n      expression = evalStringExpression(expression, [\r\n        \"model\",\r\n        \"formState\",\r\n        \"field\"\r\n      ]);\r\n    }\r\n\r\n    return parentExpression\r\n      ? (model: any, formState: any, field: VXFormFieldConfig) =>\r\n          parentExpression() || expression(model, formState, field)\r\n      : expression;\r\n  }\r\n\r\n  private _checkField(field: VXFormFieldConfigCache, ignoreCache = false) {\r\n    const options = field.options as {\r\n      _hiddenFieldsForCheck: VXFormFieldConfigCache[];\r\n    };\r\n\r\n    let markForCheck = false;\r\n    field.fieldGroup.forEach(f => {\r\n      this.checkFieldExpressionChange(f, ignoreCache) && (markForCheck = true);\r\n      if (this.checkFieldVisibilityChange(f, ignoreCache)) {\r\n        options._hiddenFieldsForCheck.push(f);\r\n        markForCheck = true;\r\n      }\r\n\r\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\r\n        this._checkField(f, ignoreCache);\r\n      }\r\n    });\r\n\r\n    if (markForCheck && field.options && field.options._markForCheck) {\r\n      field.options._markForCheck(field);\r\n    }\r\n\r\n    if (!field.parent) {\r\n      options._hiddenFieldsForCheck\r\n        .sort(f => (f.hide ? -1 : 1))\r\n        .forEach(f => this.toggleFormControl(f, f.hide));\r\n\r\n      options._hiddenFieldsForCheck = [];\r\n    }\r\n  }\r\n\r\n  private checkFieldExpressionChange(\r\n    field: VXFormFieldConfigCache,\r\n    ignoreCache\r\n  ): boolean {\r\n    if (!field || !field._expressionProperties) {\r\n      return false;\r\n    }\r\n\r\n    let markForCheck = false;\r\n    const expressionProperties = field._expressionProperties;\r\n\r\n    for (const key in expressionProperties) {\r\n      let expressionValue = evalExpression(\r\n        expressionProperties[key].expression,\r\n        { field },\r\n        [field.model, field.options.formState, field]\r\n      );\r\n      if (key === \"templateOptions.disabled\") {\r\n        expressionValue = !!expressionValue;\r\n      }\r\n\r\n      if (\r\n        ignoreCache ||\r\n        (expressionProperties[key].expressionValue !== expressionValue &&\r\n          (!isObject(expressionValue) ||\r\n            JSON.stringify(expressionValue) !==\r\n              JSON.stringify(expressionProperties[key].expressionValue)))\r\n      ) {\r\n        markForCheck = true;\r\n        expressionProperties[key].expressionValue = expressionValue;\r\n        evalExpression(\r\n          expressionProperties[key].expressionValueSetter,\r\n          { field },\r\n          [expressionValue, field.model, field]\r\n        );\r\n\r\n        if (key === \"templateOptions.disabled\" && field.key) {\r\n          this.setDisabledState(field, expressionValue);\r\n        }\r\n\r\n        if (key.indexOf(\"model.\") === 0) {\r\n          const path = key.replace(/^model\\./, \"\"),\r\n            control =\r\n              field.key && key === path\r\n                ? field.formControl\r\n                : field.parent.formControl.get(path);\r\n\r\n          if (\r\n            control &&\r\n            !(\r\n              isNullOrUndefined(control.value) &&\r\n              isNullOrUndefined(expressionValue)\r\n            ) &&\r\n            control.value !== expressionValue\r\n          ) {\r\n            control.patchValue(expressionValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return markForCheck;\r\n  }\r\n\r\n  private checkFieldVisibilityChange(\r\n    field: VXFormFieldConfigCache,\r\n    ignoreCache\r\n  ): boolean {\r\n    if (!field || isNullOrUndefined(field.hideExpression)) {\r\n      return false;\r\n    }\r\n\r\n    const hideExpressionResult: boolean = !!evalExpression(\r\n      field.hideExpression,\r\n      { field },\r\n      [field.model, field.options.formState, field]\r\n    );\r\n    let markForCheck = false;\r\n    if (hideExpressionResult !== field.hide || ignoreCache) {\r\n      markForCheck = true;\r\n      field.hide = hideExpressionResult;\r\n      field.templateOptions.hidden = hideExpressionResult;\r\n    }\r\n\r\n    return markForCheck;\r\n  }\r\n\r\n  private setDisabledState(field: VXFormFieldConfig, value: boolean) {\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup\r\n        .filter(\r\n          f =>\r\n            !f.expressionProperties ||\r\n            !f.expressionProperties.hasOwnProperty(\"templateOptions.disabled\")\r\n        )\r\n        .forEach(f => this.setDisabledState(f, value));\r\n    }\r\n\r\n    if (field.key && field.templateOptions.disabled !== value) {\r\n      field.templateOptions.disabled = value;\r\n    }\r\n  }\r\n\r\n  private toggleFormControl(field: VXFormFieldConfig, hide: boolean) {\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup\r\n        .filter(f => !f.hideExpression)\r\n        .forEach(f => this.toggleFormControl(f, hide));\r\n    }\r\n\r\n    if (field.formControl && field.key) {\r\n      hide === true ? unregisterControl(field) : registerControl(field);\r\n    }\r\n\r\n    if (field.options.fieldChanges) {\r\n      field.options.fieldChanges.next(<VXFormValueChangeEvent>{\r\n        field: field,\r\n        type: \"hidden\",\r\n        value: hide\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  VXFormExtension,\r\n  FieldValidatorFn,\r\n  VXFormConfig\r\n} from \"../../services/vxform.config\";\r\nimport { VXFormFieldConfigCache } from \"../../components/vxform.field.config\";\r\nimport { AbstractControl, Validators, ValidatorFn } from \"@angular/forms\";\r\nimport {\r\n  isObject,\r\n  VXFORM_VALIDATORS,\r\n  defineHiddenProp,\r\n  isUndefined,\r\n  isPromise,\r\n  wrapProperty\r\n} from \"../../utils\";\r\n\r\nexport class FieldValidationExtension implements VXFormExtension {\r\n  constructor(private vxFormConfig: VXFormConfig) {}\r\n\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    if (!field.parent || !field.key) {\r\n      return;\r\n    }\r\n\r\n    this.initFieldValidation(field, \"validators\");\r\n    this.initFieldValidation(field, \"asyncValidators\");\r\n  }\r\n\r\n  private initFieldValidation(\r\n    field: VXFormFieldConfigCache,\r\n    type: \"validators\" | \"asyncValidators\"\r\n  ) {\r\n    if (!isUndefined(field[\"_\" + type])) {\r\n      if (field.formControl) {\r\n        const validator =\r\n          type === \"validators\"\r\n            ? field.formControl.validator\r\n            : field.formControl.asyncValidator;\r\n        if (field[\"_\" + type] !== validator) {\r\n          field[\"_\" + type] = validator;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const validators: ValidatorFn[] =\r\n      type === \"validators\" ? [this.getPredefinedFieldValidation(field)] : [];\r\n    if (field[type]) {\r\n      for (const validatorName in field[type]) {\r\n        if (\r\n          validatorName === \"validation\" &&\r\n          !Array.isArray(field[type].validation)\r\n        ) {\r\n          field[type].validation = [field[type].validation];\r\n        }\r\n\r\n        validatorName === \"validation\"\r\n          ? validators.push(\r\n              ...field[type].validation.map(v =>\r\n                this.wrapNgValidatorFn(field, v)\r\n              )\r\n            )\r\n          : validators.push(\r\n              this.wrapNgValidatorFn(\r\n                field,\r\n                field[type][validatorName],\r\n                validatorName\r\n              )\r\n            );\r\n      }\r\n    }\r\n\r\n    defineHiddenProp(\r\n      field,\r\n      \"_\" + type,\r\n      type === \"validators\"\r\n        ? Validators.compose(validators)\r\n        : Validators.composeAsync(validators as any)\r\n    );\r\n  }\r\n\r\n  private getPredefinedFieldValidation(\r\n    field: VXFormFieldConfigCache\r\n  ): ValidatorFn {\r\n    let VALIDATORS = [];\r\n    VXFORM_VALIDATORS.forEach(opt =>\r\n      wrapProperty(\r\n        field.templateOptions,\r\n        opt,\r\n        ({ currentValue, firstChange }) => {\r\n          VALIDATORS = VALIDATORS.filter(o => o !== opt);\r\n          if (currentValue != null && currentValue !== false) {\r\n            VALIDATORS.push(opt);\r\n          }\r\n          if (!firstChange && field.formControl) {\r\n            field.formControl.updateValueAndValidity({ emitEvent: false });\r\n          }\r\n        }\r\n      )\r\n    );\r\n\r\n    return (control: AbstractControl) => {\r\n      if (VALIDATORS.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      return Validators.compose(\r\n        VALIDATORS.map(opt => () => {\r\n          const value = field.templateOptions[opt];\r\n          switch (opt) {\r\n            case \"required\":\r\n              return Validators.required(control);\r\n            case \"pattern\":\r\n              return Validators.pattern(value)(control);\r\n            case \"minLength\":\r\n              return Validators.minLength(value)(control);\r\n            case \"maxLength\":\r\n              return Validators.maxLength(value)(control);\r\n            case \"min\":\r\n              return Validators.min(value)(control);\r\n            case \"max\":\r\n              return Validators.max(value)(control);\r\n          }\r\n        })\r\n      )(control);\r\n    };\r\n  }\r\n\r\n  private wrapNgValidatorFn(\r\n    field: VXFormFieldConfigCache,\r\n    validator: string | FieldValidatorFn,\r\n    validatorName?: string\r\n  ) {\r\n    return (control: AbstractControl) => {\r\n      let validatorFn = validator as FieldValidatorFn;\r\n      if (typeof validator === \"string\") {\r\n        validatorFn = this.vxFormConfig.getValidator(validator).validation;\r\n      }\r\n      if (isObject(validator)) {\r\n        validatorFn = (validator as any).expression;\r\n      }\r\n\r\n      const isValid = validatorFn(control, field);\r\n      if (validatorName) {\r\n        if (isPromise(isValid)) {\r\n          return isValid.then((result: boolean) => {\r\n            if (field.options && field.options._markForCheck) {\r\n              field.options._markForCheck(field);\r\n            }\r\n\r\n            return this.handleResult(field, result, {\r\n              validatorName,\r\n              validator\r\n            });\r\n          });\r\n        }\r\n\r\n        return this.handleResult(field, isValid, { validatorName, validator });\r\n      }\r\n\r\n      return isValid;\r\n    };\r\n  }\r\n\r\n  private handleResult(\r\n    field: VXFormFieldConfigCache,\r\n    isValid,\r\n    { validatorName, validator }\r\n  ) {\r\n    if (isObject(validator) && field.formControl && validator.errorPath) {\r\n      const control = field.formControl.get(validator.errorPath);\r\n      if (control) {\r\n        const controlErrors = control.errors || {};\r\n        if (!isValid) {\r\n          control.setErrors({\r\n            ...controlErrors,\r\n            [validatorName]: { message: validator.message }\r\n          });\r\n        } else {\r\n          delete controlErrors[validatorName];\r\n          control.setErrors(\r\n            Object.keys(controlErrors).length === 0 ? null : controlErrors\r\n          );\r\n        }\r\n      }\r\n\r\n      return isValid\r\n        ? null\r\n        : { [validatorName]: { errorPath: validator.errorPath } };\r\n    }\r\n\r\n    return isValid ? null : { [validatorName]: true };\r\n  }\r\n}\r\n","import { VXFormExtension } from \"../../services/vxform.config\";\r\nimport { VXFormFieldConfigCache } from \"../../components/vxform.field.config\";\r\nimport {\r\n  AbstractControl,\r\n  FormGroup,\r\n  FormControl,\r\n  AbstractControlOptions\r\n} from \"@angular/forms\";\r\nimport { getKeyPath, getFieldValue, defineHiddenProp } from \"../../utils\";\r\nimport { registerControl } from \"./utils\";\r\n\r\nexport class FieldFormExtension implements VXFormExtension {\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    if (field.key) {\r\n      this.addFormControl(field);\r\n    }\r\n\r\n    if (field.parent && field.fieldGroup && !field.key) {\r\n      defineHiddenProp(field, \"formControl\", field.parent.formControl);\r\n    }\r\n  }\r\n\r\n  postPopulate(field: VXFormFieldConfigCache) {\r\n    if (field.parent) {\r\n      return;\r\n    }\r\n\r\n    const updateValidity = this.setValidators(field);\r\n    updateValidity &&\r\n      (field.formControl as any)._updateTreeValidity({ emitEvent: false });\r\n  }\r\n\r\n  private addFormControl(field: VXFormFieldConfigCache) {\r\n    const controlOptions: AbstractControlOptions = {\r\n      updateOn: field.modelOptions.updateOn\r\n    };\r\n    let control: AbstractControl;\r\n\r\n    const form = field.parent.formControl as FormGroup;\r\n    const value = getFieldValue(field);\r\n    const paths = getKeyPath(field);\r\n    if (\r\n      field.formControl instanceof AbstractControl ||\r\n      (form && form.get(paths))\r\n    ) {\r\n      control = field.formControl || form.get(paths);\r\n    } else if (\r\n      field._componentFactory &&\r\n      field._componentFactory.component &&\r\n      field._componentFactory.component.createControl\r\n    ) {\r\n      const component = field._componentFactory.component;\r\n\r\n      control = component.createControl(value, field);\r\n    } else if (field.fieldGroup) {\r\n      control = new FormGroup({}, controlOptions);\r\n    } else {\r\n      control = new FormControl(value, controlOptions);\r\n    }\r\n\r\n    registerControl(field, control);\r\n  }\r\n\r\n  private setValidators(field: VXFormFieldConfigCache) {\r\n    let updateValidity = false;\r\n    if (field.key) {\r\n      const {\r\n        _validators: validators,\r\n        _asyncValidators: asyncValidators,\r\n        formControl: control,\r\n        templateOptions: { disabled }\r\n      } = field;\r\n\r\n      if (disabled && control.enabled) {\r\n        control.disable({ emitEvent: false, onlySelf: true });\r\n        updateValidity = true;\r\n      }\r\n\r\n      if (validators !== control.validator) {\r\n        control.setValidators(validators);\r\n        updateValidity = true;\r\n      }\r\n      if (asyncValidators !== control.asyncValidator) {\r\n        control.setAsyncValidators(asyncValidators);\r\n        updateValidity = true;\r\n      }\r\n    }\r\n\r\n    (field.fieldGroup || []).forEach(\r\n      f => this.setValidators(f) && (updateValidity = true)\r\n    );\r\n\r\n    return updateValidity;\r\n  }\r\n}\r\n","export class Guid {\r\n    public static validator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\r\n\r\n    public static EMPTY = '00000000-0000-0000-0000-000000000000';\r\n\r\n    public static isGuid(guid: any) {\r\n        const value: string = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    }\r\n\r\n    public static create(): Guid {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join('-'));\r\n    }\r\n\r\n    public static createEmpty(): Guid {\r\n        return new Guid('emptyguid');\r\n    }\r\n\r\n    public static parse(guid: string): Guid {\r\n        return new Guid(guid);\r\n    }\r\n\r\n    public static raw(): string {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join('-');\r\n    }\r\n\r\n    private static gen(count: number) {\r\n        let out: string = '';\r\n        for (let i: number = 0; i < count; i++) {\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    private value: string;\r\n\r\n    private constructor(guid: string) {\r\n        if (!guid) {\r\n        }\r\n\r\n        this.value = Guid.EMPTY;\r\n\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n\r\n    public equals(other: Guid): boolean {\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.value === Guid.EMPTY;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.value;\r\n    }\r\n\r\n    public toJSON(): any {\r\n        return {\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\n","import {\r\n  VXFormExtension,\r\n  VXFormConfig,\r\n  TemplateManipulators\r\n} from \"../../services/vxform.config\";\r\nimport {\r\n  VXFormFieldConfigCache,\r\n  VXFormFieldConfig\r\n} from \"../../components/vxform.field.config\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n  getFieldId,\r\n  assignModelValue,\r\n  isUndefined,\r\n  getFieldValue,\r\n  reverseDeepMerge,\r\n  getKeyPath\r\n} from \"../../utils\";\r\nimport { Guid } from \"../../guid\";\r\n\r\nexport class CoreExtension implements VXFormExtension {\r\n  private formId = 0;\r\n  constructor(private vxFormConfig: VXFormConfig) {}\r\n\r\n  prePopulate(field: VXFormFieldConfigCache) {\r\n    this.getFieldComponentInstance(field).prePopulate();\r\n    if (field.parent) {\r\n      return;\r\n    }\r\n\r\n    const fieldTransforms =\r\n      (field.options && field.options.fieldTransform) ||\r\n      this.vxFormConfig.extras.fieldTransform;\r\n    (Array.isArray(fieldTransforms)\r\n      ? fieldTransforms\r\n      : [fieldTransforms]\r\n    ).forEach(fieldTransform => {\r\n      if (fieldTransform) {\r\n        const fieldGroup = fieldTransform(\r\n          field.fieldGroup,\r\n          field.model,\r\n          <FormGroup>field.formControl,\r\n          field.options\r\n        );\r\n        if (!fieldGroup) {\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onPopulate(field: VXFormFieldConfigCache) {\r\n    this.initFieldOptions(field);\r\n    this.getFieldComponentInstance(field).onPopulate();\r\n    if (field.fieldGroup) {\r\n      field.fieldGroup.forEach((f, index) => {\r\n        Object.defineProperty(f, \"parent\", {\r\n          get: () => field,\r\n          configurable: true\r\n        });\r\n        Object.defineProperty(f, \"index\", {\r\n          get: () => index,\r\n          configurable: true\r\n        });\r\n        this.formId++;\r\n      });\r\n    }\r\n  }\r\n\r\n  postPopulate(field: VXFormFieldConfigCache) {\r\n    this.getFieldComponentInstance(field).postPopulate();\r\n  }\r\n\r\n  private initFieldOptions(field: VXFormFieldConfigCache) {\r\n    const root = <VXFormFieldConfigCache>field.parent;\r\n    if (!root) {\r\n      return;\r\n    }\r\n\r\n    Object.defineProperty(field, \"form\", {\r\n      get: () => root.formControl,\r\n      configurable: true\r\n    });\r\n    Object.defineProperty(field, \"options\", {\r\n      get: () => root.options,\r\n      configurable: true\r\n    });\r\n    Object.defineProperty(field, \"model\", {\r\n      get: () =>\r\n        field.key && field.fieldGroup ? getFieldValue(field) : root.model,\r\n      configurable: true\r\n    });\r\n\r\n    reverseDeepMerge(field, {\r\n      id: getFieldId(`vxform_${this.formId}`, field, field[\"index\"]),\r\n      guid: Guid.create()[\"value\"],\r\n      hooks: {},\r\n      modelOptions: {},\r\n      templateOptions:\r\n        !field.type || !field.key\r\n          ? {}\r\n          : {\r\n              label: \"\",\r\n              placeholder: \"\",\r\n              focus: false,\r\n              disabled: false\r\n            }\r\n    });\r\n\r\n    if (field.lifecycle) {\r\n    }\r\n\r\n    if (field.template && field.type !== \"template\") {\r\n      if (field.type) {\r\n      }\r\n      field.type = \"template\";\r\n    }\r\n\r\n    if (!field.type && field.fieldGroup) {\r\n      field.type = \"vxform-group\";\r\n    }\r\n\r\n    if (field.type) {\r\n      this.vxFormConfig.getMergedField(field);\r\n    }\r\n\r\n    if (!isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\r\n      assignModelValue(root.model, getKeyPath(field), field.defaultValue);\r\n    }\r\n\r\n    this.initFieldWrappers(field);\r\n  }\r\n\r\n  private initFieldWrappers(field: VXFormFieldConfig) {\r\n    field.wrappers = field.wrappers || [];\r\n    const fieldTemplateManipulators: TemplateManipulators = {\r\n      preWrapper: [],\r\n      postWrapper: [],\r\n      ...(field.templateOptions.templateManipulators || {})\r\n    };\r\n\r\n    field.wrappers = [\r\n      ...this.vxFormConfig.templateManipulators.preWrapper.map(m => m(field)),\r\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\r\n      ...field.wrappers,\r\n      ...this.vxFormConfig.templateManipulators.postWrapper.map(m => m(field)),\r\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field))\r\n    ].filter((el, i, a) => el && i === a.indexOf(el));\r\n  }\r\n\r\n  private getFieldComponentInstance(field: VXFormFieldConfigCache) {\r\n    const componentRef = this.vxFormConfig.createComponent(field);\r\n    const instance: VXFormExtension = componentRef\r\n      ? (componentRef.instance as any)\r\n      : {};\r\n\r\n    return {\r\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\r\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\r\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field)\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport {\r\n  VXFormFieldConfig,\r\n  VXFormFieldProperty\r\n} from \"../components/vxform.field.config\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class VXFormCommonService {\r\n  constructor() { }\r\n\r\n  initFormFieldProperty(fields: VXFormFieldConfig[]) {\r\n    fields.forEach(field => {\r\n      this.deleteFieldProperty(field);\r\n    });\r\n  }\r\n\r\n  //åå§åè¡¨åJSONå¯¹è±¡\r\n  initFormFieldConfig(\r\n    fields: VXFormFieldConfig[],\r\n    fieldPropertys: VXFormFieldProperty[]\r\n  ) {\r\n    fields.forEach(field => {\r\n      this.setFieldProperty(field, fieldPropertys);\r\n    });\r\n  }\r\n\r\n  initFormFieldModel(fields: VXFormFieldConfig[], model: any) {\r\n    fields.forEach(field => {\r\n      if (field.hasOwnProperty(\"editor\")) {\r\n        field.typeold = field.type;\r\n        field.type = \"text\";\r\n        if (this.checkFieldDefaultValue(field)) {\r\n          model[field.key] = field.defaultValue;\r\n        }\r\n      }\r\n      if (field.hasOwnProperty(\"fieldArray\")) {\r\n        if (field.fieldArray.hasOwnProperty(\"fieldGroup\")) {\r\n          model[field.key] = [{}];\r\n          field.fieldArray.fieldGroup.forEach(fieldGroup => {\r\n            if (fieldGroup.hasOwnProperty(\"editor\")) {\r\n              fieldGroup.typeold = field.type;\r\n              fieldGroup.type = \"text\";\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (field.hasOwnProperty(\"fieldGroup\")) {\r\n        //åå§åå¼\r\n        if (!this.checkFieldDefaultValue(field)) {\r\n          model[field.key] = {};\r\n        }\r\n\r\n        field.fieldGroup.forEach(fieldGroup => {\r\n          if (fieldGroup.hasOwnProperty(\"editor\")) {\r\n            fieldGroup.typeold = fieldGroup.type;\r\n            fieldGroup.type = \"text\";\r\n            if (this.checkFieldDefaultValue(model[field.key][fieldGroup.key])) {\r\n              model[field.key][fieldGroup.key] = fieldGroup.defaultValue;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  //åå§åè¡¨ååºå·\r\n  initSurveyFormFieldConfig(surveyInfo: any) { \r\n    surveyInfo.queTotal = 0;\r\n    if (surveyInfo.pages) { \r\n      surveyInfo.pages.forEach((page: any) => { \r\n        this.setFieldNumber(surveyInfo,page.questions);\r\n      });  \r\n    }\r\n  }\r\n\r\n  private checkFieldDefaultValue(field: VXFormFieldConfig) {\r\n    let result = false;\r\n    if (\r\n      field != undefined &&\r\n      field != null &&\r\n      field.defaultValue != undefined &&\r\n      field.defaultValue != null\r\n    ) {\r\n      return true;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private deleteFieldProperty(field: any) {\r\n    if (field.hasOwnProperty(\"status\")) {\r\n      delete field.status;\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"guid\")) {\r\n      delete field.guid;\r\n    }\r\n    if (field.hasOwnProperty(\"id\")) {\r\n      delete field.id;\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"wrappers\")) {\r\n      delete field[\"wrappers\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"_keyPath\")) {\r\n      delete field[\"_keyPath\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"modelOptions\")) {\r\n      delete field[\"modelOptions\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"checked\")) {\r\n      delete field[\"checked\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"rownumber\")) {\r\n      delete field[\"rownumber\"];\r\n    }\r\n\r\n    if (field.hasOwnProperty(\"templateOptions\")) {\r\n      if (field.templateOptions.hasOwnProperty(\"focus\")) {\r\n        delete field.templateOptions.focus;\r\n      }\r\n      if (field.templateOptions.hasOwnProperty(\"disabled\")) {\r\n        delete field.templateOptions.disabled;\r\n      }\r\n      if (field.templateOptions.hasOwnProperty(\"readonly\")) {\r\n        delete field.templateOptions.readonly;\r\n      }\r\n    }\r\n\r\n    if (field.fieldArray) {\r\n      if (field.fieldArray.fieldGroup) {\r\n        if (field.fieldGroup) {\r\n          delete field.fieldGroup;\r\n        }\r\n        this.initFormFieldProperty(field.fieldArray.fieldGroup);\r\n      }\r\n    }\r\n    if (field.fieldGroup) {\r\n      this.initFormFieldProperty(field.fieldGroup);\r\n    }\r\n  }\r\n\r\n  private setFieldProperty(\r\n    field: VXFormFieldConfig,\r\n    fieldPropertys: VXFormFieldProperty[]\r\n  ) {\r\n    let items: VXFormFieldProperty[] = fieldPropertys.filter(item => {\r\n      return item.key === field.key;\r\n    });\r\n    if (items != undefined && items != null && items.length > 0) {\r\n      let item: VXFormFieldProperty = items[0];\r\n\r\n      if (item.hasOwnProperty(\"show\")) {\r\n        field.show = item.show;\r\n      }\r\n      if (item.hasOwnProperty(\"editor\")) {\r\n        field.editor = item.editor;\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"label\")) {\r\n        if (item.label != null) {\r\n          field.templateOptions.label = item.label;\r\n        }\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"placeholder\")) {\r\n        if (item.placeholder != null) {\r\n          field.templateOptions.placeholder = item.placeholder;\r\n        }\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"options\")) {\r\n        if (item.options != null) {\r\n          field.templateOptions.options = item.options;\r\n        }\r\n      }\r\n\r\n      if (item.hasOwnProperty(\"tips\")) {\r\n        if (item.tips != null && item.tips != \"\") {\r\n          field.templateOptions.tips = item.tips;\r\n        }\r\n      }\r\n    }\r\n    if (field.fieldArray) {\r\n      if (field.fieldArray.fieldGroup) {\r\n        this.initFormFieldConfig(field.fieldArray.fieldGroup, fieldPropertys);\r\n      }\r\n    }\r\n    if (field.fieldGroup) {\r\n      this.initFormFieldConfig(field.fieldGroup, fieldPropertys);\r\n    }\r\n  }\r\n\r\n  private setFieldNumber(surveyInfo:any,fields: VXFormFieldConfig[]) {\r\n    fields.forEach((field: VXFormFieldConfig) => {\r\n      if (field.type != \"line\" && field.type != \"remark\") {\r\n        surveyInfo.queTotal = surveyInfo.queTotal+1\r\n        field.templateOptions.queno = \"Q\" + surveyInfo.queTotal;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  ANALYZE_FOR_ENTRY_COMPONENTS,\r\n  Inject,\r\n  Optional\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\nimport {\r\n  HttpClient,\r\n  HTTP_INTERCEPTORS,\r\n  HttpClientModule\r\n} from \"@angular/common/http\";\r\nimport { VXForm } from \"./components/vxform\";\r\nimport { VXFormField } from \"./components/vxform.field\";\r\nimport { VXFormAttributes } from \"./components/vxform.attributes\";\r\nimport {\r\n  VXFormConfig,\r\n  ConfigOption,\r\n  VXFORM_CONFIG,\r\n  APPConfig\r\n} from \"./services/vxform.config\";\r\nimport { VXFormBuilder } from \"./services/vxform.builder\";\r\nimport { VXFormGroup } from \"./templates/vxform.group\";\r\nimport { VXFormValidationMessage } from \"./templates/vxform.validation-message\";\r\nimport { VXFormTemplateType } from \"./templates/field-template.type\";\r\n\r\nimport { FieldExpressionExtension } from \"./extensions/field-expression/field-expression\";\r\nimport { FieldValidationExtension } from \"./extensions/field-validation/field-validation\";\r\nimport { FieldFormExtension } from \"./extensions/field-form/field-form\";\r\nimport { CoreExtension } from \"./extensions/core/core\";\r\nimport { VXFormCommonService } from \"./tools/common\";\r\n\r\nexport function defaultVXFormConfig(vxFormConfig: VXFormConfig): ConfigOption {\r\n  return {\r\n    types: [\r\n      { name: \"vxform-group\", component: VXFormGroup },\r\n      { name: \"template\", component: VXFormTemplateType }\r\n    ],\r\n    extensions: [\r\n      { name: \"core\", extension: new CoreExtension(vxFormConfig) },\r\n      {\r\n        name: \"field-validation\",\r\n        extension: new FieldValidationExtension(vxFormConfig)\r\n      },\r\n      { name: \"field-form\", extension: new FieldFormExtension() },\r\n      { name: \"field-expression\", extension: new FieldExpressionExtension() }\r\n    ]\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VXForm,\r\n    VXFormField,\r\n    VXFormAttributes,\r\n    VXFormGroup,\r\n    VXFormValidationMessage,\r\n    VXFormTemplateType\r\n  ],\r\n  entryComponents: [VXFormGroup, VXFormTemplateType],\r\n  exports: [\r\n    VXForm,\r\n    VXFormField,\r\n    VXFormAttributes,\r\n    VXFormGroup,\r\n    VXFormValidationMessage\r\n  ],\r\n  imports: [HttpModule, HttpClientModule, CommonModule],\r\n  providers: [VXFormCommonService]\r\n})\r\nexport class VXFormModule {\r\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<VXFormModule> {\r\n    return {\r\n      ngModule: VXFormModule,\r\n      providers: [\r\n        {\r\n          provide: VXFORM_CONFIG,\r\n          multi: true,\r\n          useFactory: defaultVXFormConfig,\r\n          deps: [VXFormConfig]\r\n        },\r\n        { provide: VXFORM_CONFIG, useValue: config, multi: true },\r\n        {\r\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\r\n          useValue: config,\r\n          multi: true\r\n        },\r\n        VXFormConfig,\r\n        VXFormBuilder\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forChild(\r\n    config: ConfigOption = {}\r\n  ): ModuleWithProviders<VXFormModule> {\r\n    return {\r\n      ngModule: VXFormModule,\r\n      providers: [\r\n        { provide: VXFORM_CONFIG, useValue: config, multi: true },\r\n        {\r\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\r\n          useValue: config,\r\n          multi: true\r\n        },\r\n        VXFormBuilder\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forConfig(config:string): ModuleWithProviders<VXFormModule>{\r\n    if(localStorage.getItem(\"VX_FORM_LINCES\")!=null && localStorage.getItem(\"VX_FORM_LINCES\")!=\"\"){\r\n      localStorage.removeItem(\"VX_FORM_LINCES\");\r\n    }\r\n    localStorage.setItem(\"VX_FORM_LINCES\",config);\r\n    return {\r\n       ngModule: VXFormModule,\r\n       providers: [VXFormBuilder]\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    configService: VXFormConfig,\r\n    @Optional() @Inject(VXFORM_CONFIG) configs: ConfigOption[] = []\r\n  ) {\r\n    if (!configs) {\r\n      return;\r\n    }\r\n\r\n    configs.forEach(config => configService.addConfig(config));\r\n  }\r\n}\r\n"],"names":["tslib_1.__values","tslib_1.__spread","tslib_1.__extends"],"mappings":"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"}
